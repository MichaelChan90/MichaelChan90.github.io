<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Centos7内核由3.10升级到5.4版本</title>
    <url>/2023/02/13/Centos7%E5%86%85%E6%A0%B8%E7%94%B13.10%E5%8D%87%E7%BA%A7%E5%88%B05.4%E7%89%88%E6%9C%AC/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><p>[toc]</p>
<h1 id="查看内核版本"><a href="#查看内核版本" class="headerlink" title="查看内核版本"></a>查看内核版本</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看内核版本</span></span><br><span class="line"><span class="built_in">uname</span> -msr</span><br><span class="line"></span><br><span class="line"><span class="comment"># output: Linux 3.10.0-862.el7.x86-64 x86-64</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h1 id="更新Centos-Respositories"><a href="#更新Centos-Respositories" class="headerlink" title="更新Centos Respositories"></a>更新Centos Respositories</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 更新yum软件</span></span><br><span class="line">sudo yum -y update</span><br></pre></td></tr></table></figure>



<h1 id="使用ELRepo-Repository"><a href="#使用ELRepo-Repository" class="headerlink" title="使用ELRepo Repository"></a>使用ELRepo Repository</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 导入 ELRepo repository的GPG Key</span></span><br><span class="line">sudo rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装ELRepo repository</span></span><br><span class="line">sudo rpm -Uvh https://www.elrepo.org/elrepo-release-7.0-3.el7.elrepo.noarch.rpm</span><br></pre></td></tr></table></figure>



<h1 id="查看可用的-Kenels"><a href="#查看可用的-Kenels" class="headerlink" title="查看可用的 Kenels"></a>查看可用的 Kenels</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum list available --disablerepo=<span class="string">&#x27;*&#x27;</span> --enablerepo=elrepo-kernel</span><br></pre></td></tr></table></figure>

<p><img src="/picture/available-kernels-list.png" alt="查看可用的kernel列表" loading="lazy"></p>
<h1 id="安装新的Centos-Kernel版本"><a href="#安装新的Centos-Kernel版本" class="headerlink" title="安装新的Centos Kernel版本"></a>安装新的Centos Kernel版本</h1><p>kernel-lt  : lt指的是long-term support</p>
<p>kernel-ml: ml指的是latest stable mainline kernel</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 选择kernel版本安装</span></span><br><span class="line">sudo yum --enablerepo=elrepo-kernel install kernel-lt</span><br></pre></td></tr></table></figure>

<p><img src="/picture/install-long-term-kernel.png" alt="安装长期支持版本" loading="lazy"></p>
<h1 id="重启系统"><a href="#重启系统" class="headerlink" title="重启系统"></a>重启系统</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">reboot</span><br></pre></td></tr></table></figure>

<p>重启过程中在GRUB页面选择最新版本的kernel</p>
<p><img src="/picture/boot-latest-kernel.png" alt="选择启动内核版本" loading="lazy"></p>
<h1 id="修改默认启动项"><a href="#修改默认启动项" class="headerlink" title="修改默认启动项"></a>修改默认启动项</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看kernel启动列表</span></span><br><span class="line"> sudo awk -F\<span class="string">&#x27; &#x27;</span><span class="variable">$1</span>==<span class="string">&quot;menuentry &quot;</span> &#123;<span class="built_in">print</span> i++ <span class="string">&quot; : &quot;</span> <span class="variable">$2</span>&#125;<span class="string">&#x27; /etc/grub2.cfg</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">################ 方式1  ##################</span></span><br><span class="line"><span class="string">sudo grub2-set-default  &quot;CentOS Linux (3.10.0-327.el7.x86_64) 7 (Core)&quot;</span></span><br><span class="line"><span class="string"># 或者</span></span><br><span class="line"><span class="string">sudo grub2-set-default #后面参数：0~N</span></span><br><span class="line"><span class="string">################ 方式1  ##################</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">################ 方式2  ##################</span></span><br><span class="line"><span class="string"># 编辑/etc/default/grub</span></span><br><span class="line"><span class="string"># 修改配置GRUB_DEFAULT=X，一般改为GRUB_DEFAULT=0</span></span><br><span class="line"><span class="string">sudo vim /etc/default/grub</span></span><br><span class="line"><span class="string">################ 方式2  ##################</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 查看当前的配置状态</span></span><br><span class="line"><span class="string">sudo grub2-editenv list</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#重新创建kernel配置</span></span><br><span class="line"><span class="string">sudo mv /boot/grub2/grub.cfg /boot/grub2/grub.cfg.bak</span></span><br><span class="line"><span class="string">sudo grub2-mkconfig -o /boot/grub2/grub.cfg</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># reboot重启</span></span><br><span class="line"><span class="string">reboot</span></span><br></pre></td></tr></table></figure>





<h1 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h1><h2 id="升级Kernel版本后网卡失效，无法连接网络，但老版本Kernel可以正常访问网络"><a href="#升级Kernel版本后网卡失效，无法连接网络，但老版本Kernel可以正常访问网络" class="headerlink" title="升级Kernel版本后网卡失效，无法连接网络，但老版本Kernel可以正常访问网络"></a>升级Kernel版本后网卡失效，无法连接网络，但老版本Kernel可以正常访问网络</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看网卡型号</span></span><br><span class="line">lspci |grep net</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看网卡详细信息</span></span><br><span class="line">lspci -v</span><br></pre></td></tr></table></figure>

<p><img src="/picture/check_ethernet_info.png" alt="查看网卡详情" loading="lazy"></p>
<p>我们进入Realtk 官网下载对应的驱动</p>
<p><a href="https://www.realtek.com/zh/component/zoo/category/network-interface-controllers-10-100-1000m-gigabit-ethernet-pci-express-software">RTL 8111&#x2F;8168&#x2F;8411 官网驱动下载地址</a></p>
<p><img src="/picture/realtk_ethernet_choose.png" alt="Realtk网卡驱动选择" loading="lazy"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 下载官网驱动后解压文件夹</span><br><span class="line">cd r8168-8.051.02</span><br><span class="line">chmod 755 autorun.sh</span><br><span class="line"># 执行下面命令即可安装成功</span><br><span class="line">./autorun.sh</span><br></pre></td></tr></table></figure>



<p>安装网卡驱动编译失败报错：<code>./arch/x86/include/asm/bug.h:35:22:error: expected identifier or &#39;(&#39;before string constant</code>等类似的报错。</p>
<p>需要升级gcc版本才能进行编译，我们这个过程中可以重启电脑使用3.10内核版本进行联网yum安装：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看GCC版本</span></span><br><span class="line"><span class="comment"># centos的默认gcc版本太低了，一般4.XX左右</span></span><br><span class="line">gcc version</span><br><span class="line"></span><br><span class="line"><span class="comment"># yum安装gcc 9</span></span><br><span class="line"><span class="comment"># 1、在某些应用场景中，需要特定的gcc版本支持，但是轻易不要去编译gcc，我这里推荐使用红帽提供的开发工具包来管理gcc版本，这样做的好处是随时切换版本，并且可以并存多个版本，不破坏原有gcc环境。</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2、devtoolset对应gcc的版本：</span></span><br><span class="line"><span class="comment">#    devtoolset-3对应gcc4.x.x版本</span></span><br><span class="line"><span class="comment">#    devtoolset-4对应gcc5.x.x版本</span></span><br><span class="line"><span class="comment">#    devtoolset-6对应gcc6.x.x版本</span></span><br><span class="line"><span class="comment">#    devtoolset-7对应gcc7.x.x版本</span></span><br><span class="line"><span class="comment">#    devtoolset-8对应gcc8.x.x版本</span></span><br><span class="line"><span class="comment">#    devtoolset-9对应gcc9.x.x版本</span></span><br><span class="line"><span class="comment">#    devtoolset-10对应gcc10.x.x版本</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 3、可通过centos-release-scl源安装devtoolset包</span></span><br><span class="line">yum install centos-release-scl -y</span><br><span class="line">yum install devtoolset-9 -y</span><br><span class="line"></span><br><span class="line"><span class="comment"># 自行添加源来安装</span></span><br><span class="line"><span class="comment"># vi /etc/yum.repos.d/CentOS-SCLo-scl.repo</span></span><br><span class="line"><span class="comment">#[centos-sclo-sclo]</span></span><br><span class="line"><span class="comment">#name=CentOS-7 - SCLo sclo</span></span><br><span class="line"><span class="comment">#baseurl=http://mirror.centos.org/centos/7/sclo/$basearch/rh/</span></span><br><span class="line"><span class="comment">#gpgcheck=1</span></span><br><span class="line"><span class="comment">#enabled=1</span></span><br><span class="line"><span class="comment">#gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-SIG-SCLo</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 激活gcc版本,以下两种方式都可以，但都是在当前窗口生效的</span></span><br><span class="line">scl <span class="built_in">enable</span> devtoolset-8 bash</span><br><span class="line"><span class="built_in">source</span> /opt/rh/devtoolset-8/enable</span><br><span class="line"></span><br><span class="line"><span class="comment">#如果需要永久生效，可以把devtoolset-8里的gcc和g++链接到/usr/bin去</span></span><br><span class="line"><span class="built_in">mv</span> /usr/bin/gcc /usr/bin/gcc-4.8.5 <span class="comment">#自行修改版本号</span></span><br><span class="line"><span class="built_in">ln</span> -s /opt/rh/devtoolset-8/root/bin/gcc /usr/bin/gcc</span><br><span class="line"><span class="built_in">mv</span> /usr/bin/g++ /usr/bin/g++-4.8.5 <span class="comment">#自行修改版本号</span></span><br><span class="line"><span class="built_in">ln</span> -s /opt/rh/devtoolset-8/root/bin/g++ /usr/bin/g++</span><br></pre></td></tr></table></figure>



<p>安装完gcc 9后就可以重新编译Realtk驱动程序了，安装完成后，有一个报错：<code>sign-file: certs/signing_key.pem : No  such file or directory</code>，可以忽略，此时网卡已经可以正常使用了。</p>
<p><a href="https://www.howtoforge.com/tutorial/how-to-upgrade-kernel-in-centos-7-server/">Centos 7 kernel国外升级文档1</a></p>
<p><a href="https://phoenixnap.com/kb/how-to-upgrade-kernel-centos">Centos 7 kernel国外升级文档2</a></p>
]]></content>
      <categories>
        <category>运维安装</category>
      </categories>
  </entry>
  <entry>
    <title>Centos7安装MySQL</title>
    <url>/2023/02/10/Centos7%E5%AE%89%E8%A3%85MySQL/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><p>[toc]</p>
<h1 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h1><p>安装系统：Centos7</p>
<p>MySQL 5.7下载地址：<a href="https://cdn.mysql.com/archives/mysql-5.7/mysql-5.7.40-1.el7.x86_64.rpm-bundle.tar">https://cdn.mysql.com/archives/mysql-5.7/mysql-5.7.40-1.el7.x86_64.rpm-bundle.tar</a></p>
<p>MySQL 8.0下载地址：<a href="https://cdn.mysql.com//Downloads/MySQL-8.0/mysql-8.0.32-1.el7.x86_64.rpm-bundle.tar">https://cdn.mysql.com//Downloads/MySQL-8.0/mysql-8.0.32-1.el7.x86_64.rpm-bundle.tar</a></p>
<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><h2 id="预检查"><a href="#预检查" class="headerlink" title="预检查"></a>预检查</h2><p>1、检查系统是否已安装MySQL或者Mariadb，存在则进行卸载</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># rpm查看已安装软件</span></span><br><span class="line">rpm -qa|grep mariadb</span><br><span class="line">rpm -qa|grep mysql</span><br><span class="line"><span class="comment"># rpm卸载软件</span></span><br><span class="line">rpm -e --nodeps ******</span><br><span class="line"></span><br><span class="line"><span class="comment"># yum查看已安装软件</span></span><br><span class="line">yum list installed |grep mariadb</span><br><span class="line">yum list installed |grep mysql</span><br><span class="line"><span class="comment"># yum卸载软件</span></span><br><span class="line">yum remove ******</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除etc目录下my.cnf</span></span><br><span class="line"><span class="built_in">rm</span> /etc/my.cnf</span><br></pre></td></tr></table></figure>



<p>2、Centos7创建用户</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建组mysql</span></span><br><span class="line">groupadd mysql</span><br><span class="line"><span class="comment"># 创建用户mysql</span></span><br><span class="line">useradd -r -g mysql mysql</span><br><span class="line"><span class="comment"># 查看用户</span></span><br><span class="line"><span class="built_in">cat</span> /etc/passwd</span><br></pre></td></tr></table></figure>

<p>3、解压文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 解压缩文件</span></span><br><span class="line">tar -xvf mysql-5.7.40-1.el7.x86_64.rpm-bundle.tar</span><br><span class="line"><span class="comment"># 修改解压包下文件夹所属用户组、用户以及权限</span></span><br><span class="line"><span class="built_in">chown</span> -R mysql:mysql mysql目录</span><br><span class="line"><span class="built_in">chmod</span> -R 755 mysql目录</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>





<h2 id="rpm安装"><a href="#rpm安装" class="headerlink" title="rpm安装"></a>rpm安装</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 按顺序安装以下包</span></span><br><span class="line">rpm -ivh mysql-community-common*</span><br><span class="line">rpm -ivh mysql-community-libs*</span><br><span class="line">rpm -ivh mysql-community-client*</span><br><span class="line">rpm -ivh mysql-community-server*</span><br></pre></td></tr></table></figure>



<h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><p>1、启动服务</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 启动MySQL服务</span></span><br><span class="line">service mysqld start</span><br><span class="line"><span class="comment"># 查看MySQL启动状态</span></span><br><span class="line">service mysqld status</span><br><span class="line"><span class="comment"># 设置MySQL开机启动</span></span><br><span class="line">systemctl <span class="built_in">enable</span> mysqld.service</span><br><span class="line"><span class="comment"># 查看MySQL开机启动状态</span></span><br><span class="line">systemctl status mysqld.service</span><br></pre></td></tr></table></figure>



<p>2、修改MySQL root用户密码</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 随机生成密码 </span></span><br><span class="line"><span class="built_in">tr</span> -dc   <span class="string">&#x27;A-Za-z0-9!&quot;#$%&amp;&#x27;</span>\<span class="string">&#x27;&#x27;</span>()*+,-./:;&lt;=&gt;?@[\]^_`&#123;|&#125;~<span class="string">&#x27;   &lt;/dev/urandom | head -c 15; echo</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 查看初始化密码</span></span><br><span class="line"><span class="string">cat /var/log/mysqld.log|grep password</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 使用初始化密码登录mysql</span></span><br><span class="line"><span class="string">mysql -uroot -p</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 初始修改root用户密码</span></span><br><span class="line"><span class="string">alter user user() identified by &#x27;</span>Hyjz@123<span class="string">&#x27;;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 查看密码策略（测试环境用于简短的密码）</span></span><br><span class="line"><span class="string">show variables like &#x27;</span>validate_password%<span class="string">&#x27;;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># ===================密码规则设置====================</span></span><br><span class="line"><span class="string"># 1）、validate_password_length 固定密码的总长度；</span></span><br><span class="line"><span class="string"># 2）、validate_password_dictionary_file 指定密码验证的文件路径；</span></span><br><span class="line"><span class="string"># 3）、validate_password_mixed_case_count 整个密码中至少要包含大/小写字母的总个数；</span></span><br><span class="line"><span class="string"># 4）、validate_password_number_count 整个密码中至少要包含阿拉伯数字的个数；</span></span><br><span class="line"><span class="string"># 5）、validate_password_policy 指定密码的强度验证等级，默认为 MEDIUM；</span></span><br><span class="line"><span class="string">#    关于 validate_password_policy 的取值：</span></span><br><span class="line"><span class="string">#    0/LOW：只验证长度；</span></span><br><span class="line"><span class="string">#    1/MEDIUM：验证长度、数字、大小写、特殊字符；</span></span><br><span class="line"><span class="string">#    2/STRONG：验证长度、数字、大小写、特殊字符、字典文件；</span></span><br><span class="line"><span class="string"># 6）、validate_password_special_char_count 整个密码中至少要包含特殊字符的个数；</span></span><br><span class="line"><span class="string"># ===================密码规则设置====================</span></span><br><span class="line"><span class="string">set global validate_password_policy=LOW;</span></span><br><span class="line"><span class="string">set global validate_password_length=6;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 二次修改root用户密码</span></span><br><span class="line"><span class="string">set password for &#x27;</span>root<span class="string">&#x27;@&#x27;</span>localhost<span class="string">&#x27;=password(&#x27;</span>hyjz@123<span class="string">&#x27;);</span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure>



<p>3、自定义mysql配置文件（&#x2F;etc&#x2F;my.cnf中配置）</p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">[client]</span></span><br><span class="line"><span class="comment"># MySQL 客户端连接服务器端时使用的端口号，默认为 3306</span></span><br><span class="line"><span class="attr">port</span>=<span class="string">3306</span></span><br><span class="line"><span class="comment"># 套接字文件所在目录(与mysqld,mysql配置一致)</span></span><br><span class="line"><span class="attr">socket</span>=<span class="string">/var/run/mysql/mysql.sock</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="attr">[mysqldump]</span></span><br><span class="line"><span class="comment"># 支持较大的数据库转储，导出非常巨大的表时需要此项 。</span></span><br><span class="line"><span class="attr">quick</span></span><br><span class="line"><span class="comment"># 服务所能处理的请求包的最大大小以及服务所能处理的最大的请求大小（当与大的BLOB字段一起工作时相当必要），每个连接独立的大小，大小动态增加。</span></span><br><span class="line"><span class="attr">max_allowed_packet</span> = <span class="string">16M</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="attr">[mysqld]</span></span><br><span class="line"><span class="comment"># mysqld 程序在启动后将在给定 UNIX/Linux 账户下执行。mysqld 必须从 root 账户启动才能在启动后切换到另一个账户下执行。mysqld_safe 脚本将默认使用 user=mysql 选项来启动 mysqld 程序。</span></span><br><span class="line"><span class="attr">user</span> = <span class="string">mysql</span></span><br><span class="line"><span class="comment"># 指定 MySQL 安装的绝对路径；</span></span><br><span class="line"><span class="attr">basedir</span> = <span class="string">/usr/local/mysql</span></span><br><span class="line"><span class="comment"># 指定 MySQL 数据存放的绝对路径；</span></span><br><span class="line"><span class="attr">datadir</span> = <span class="string">/mydata/mysql/data</span></span><br><span class="line"><span class="comment"># 监听的ip地址</span></span><br><span class="line"><span class="attr">bind-address</span> = <span class="string">0.0.0.0　　</span></span><br><span class="line"><span class="comment"># 服务端口号，默认为 3306</span></span><br><span class="line"><span class="attr">port</span>=<span class="string">3306</span></span><br><span class="line"><span class="comment"># MySQL 服务的唯一编号，每个 MySQL 服务的 id 需唯一。</span></span><br><span class="line"><span class="attr">server-id</span> = <span class="string">1</span></span><br><span class="line"><span class="comment"># socket 文件所在目录</span></span><br><span class="line"><span class="attr">socket</span>=<span class="string">/var/run/mysql/mysql.sock</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># 数据库默认字符集，主流字符集支持一些特殊表情符号（特殊表情符占用 4 个字节）</span></span><br><span class="line"><span class="attr">character-set-server</span> = <span class="string">utf8mb4</span></span><br><span class="line"><span class="comment"># 数据库字符集对应一些排序等规则，注意要和 character-set-server 对应</span></span><br><span class="line"><span class="attr">collation-server</span> = <span class="string">utf8mb4_general_ci</span></span><br><span class="line"><span class="comment"># 设置 client 连接 mysql 时的字符集，防止乱码</span></span><br><span class="line"><span class="attr">init_connect</span>=<span class="string">&#x27;SET NAMES utf8mb4&#x27;</span></span><br><span class="line"><span class="comment"># 是否对 sql 语句大小写敏感，1 表示不敏感</span></span><br><span class="line"><span class="attr">lower_case_table_names</span> = <span class="string">1</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># 用于指定索引缓冲区的大小</span></span><br><span class="line"><span class="attr">key_buffer_size</span>=<span class="string">6G</span></span><br><span class="line"><span class="comment"># 设置一次消息传输的最大值</span></span><br><span class="line"><span class="attr">max_allowed_packet</span>=<span class="string">8M</span></span><br><span class="line"><span class="comment"># 仅仅允许使用键值的 UPDATES 和 DELETES</span></span><br><span class="line"><span class="attr">no-auto-rehash</span></span><br><span class="line"><span class="comment"># 表示 SQL 模式的参数，通过这个参数可以设置检验 SQL 语句的严格程度</span></span><br><span class="line"><span class="attr">sql_mode</span>=<span class="string">TRADITIONAL</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># ===================================skip options ======================================</span></span><br><span class="line"><span class="comment"># 禁止 MySQL 对外部连接进行 DNS 解析，使用这一选项可以消除 MySQL 进行 DNS 解析的时间。但需要注意，如果开启该选项，则所有远程主机连接授权都要使用 IP 地址方式，否则 MySQL 将无法正常处理连接请求！</span></span><br><span class="line"><span class="attr">skip-name-resolve</span> <span class="string"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># 不能使用连接文件，多个客户可能会访问同一个数据库，因此这防止外部客户锁定 MySQL 服务器。 该选项默认开启</span></span><br><span class="line"><span class="attr">skip-symbolic-links</span> <span class="string"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># 不使用系统锁定，要使用 myisamchk,必须关闭服务器 ,避免 MySQL的外部锁定，减少出错几率增强稳定性。</span></span><br><span class="line"><span class="attr">skip-external-locking</span> <span class="string"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># 启动 mysql,不启动复制</span></span><br><span class="line"><span class="attr">skip-slave-start</span> <span class="string"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># 开启该选项可以彻底关闭 MySQL 的 TCP/IP 连接方式，如果 WEB 服务器是以远程连接的方式访问 MySQL 数据库服务器则不要开启该选项！否则将无法正常连接！ 如果所有的进程都是在同一台服务器连接到本地的 mysqld, 这样设置将是增强安全的方法</span></span><br><span class="line"><span class="attr">skip-networking</span> <span class="string"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># 把SYSDATE 函数编程为 NOW的别名</span></span><br><span class="line"><span class="attr">sysdate-is-now</span> = <span class="string">1 </span></span><br><span class="line"><span class="comment"># 把SYSDATE 函数编程为 NOW的别名</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># ============================== 系统资源相关选项 ===============================#</span></span><br><span class="line"><span class="comment"># 接受队列，对于没建立 tcp 连接的请求队列放入缓存中，队列大小为 back_log，受限制与 OS 参数，试图设定 back_log 高于你的操作系统的限制将是无效的。默认值为 50。对于 Linux 系统推荐设置为小于512的整数。如果系统在一个短时间内有很多连接，则需要增大该参数的值</span></span><br><span class="line"><span class="attr">back_log</span> = <span class="string">50 </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># 指定MySQL允许的最大连接进程数。如果在访问数据库时经常出现&quot;Too Many Connections&quot;的错误提 示，则需要增大该参数值。</span></span><br><span class="line"><span class="attr">max_connections</span> = <span class="string">1000 </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># 如果某个用户发起的连接 error 超过该数值，则该用户的下次连接将被阻塞，直到管理员执行 flush hosts ; 命令或者服务重启， 防止黑客 ， 非法的密码以及其他在链接时的错误会增加此值</span></span><br><span class="line"><span class="attr">max_connect_errors</span> = <span class="string">10000 </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># MySQL打开的文件描述符限制，默认最小1024;当open_files_limit没有被配置的时候，比较max_connections*5和ulimit-n的值，哪个大用哪个，当open_file_limit被配置的时候，比较open_files_limit和max_connections*5的值，哪个大用哪个。</span></span><br><span class="line"><span class="attr">open_files_limit</span> = <span class="string">10240 </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># 连接超时之前的最大秒数,在 Linux 平台上，该超时也用作等待服务器首次回应的时间</span></span><br><span class="line"><span class="attr">connect-timeout</span> = <span class="string">10 </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># 等待关闭连接的时间</span></span><br><span class="line"><span class="attr">wait-timeout</span> = <span class="string">28800 </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># 关闭连接之前，允许 interactive_timeout（取代了wait_timeout）秒的不活动时间。客户端的会话 wait_timeout 变量被设为会话interactive_timeout 变量的值。如果前端程序采用短连接，建议缩短这2个值, 如果前端程序采用长连接，可直接注释掉这两个选项，默认配置(8小时)  </span></span><br><span class="line"><span class="attr">interactive-timeout</span> = <span class="string">28800 </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># 从服务器也能够处理网络连接中断。但是，只有从服务器超过slave_net_timeout 秒没有从主服务器收到数据才通知网络中断</span></span><br><span class="line"><span class="attr">slave-net-timeout</span> = <span class="string">600 </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># 从服务器读取信息的超时</span></span><br><span class="line"><span class="attr">net_read_timeout</span> = <span class="string">30 </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># 从服务器写入信息的超时</span></span><br><span class="line"><span class="attr">net_write_timeout</span> = <span class="string">60 </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># 如果某个通信端口的读操作中断了，在放弃前重试多次</span></span><br><span class="line"><span class="attr">net_retry_count</span> = <span class="string">10 </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># 包消息缓冲区初始化为 net_buffer_length 字节，但需要时可以增长到 max_allowed_packet 字节</span></span><br><span class="line"><span class="attr">net_buffer_length</span> = <span class="string">16384 </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># 服务所能处理的请求包的最大大小以及服务所能处理的最大的请求大小(当与大的BLOB 字段一起工作时相当必要)， 每个连接独立的大小.大小动态增加。 设置最大包,限制server接受的数据包大小，避免超长SQL的执行有问题 默认值为16M，当MySQL客户端或mysqld</span></span><br><span class="line"><span class="attr">max_allowed_packet</span> = <span class="string">64M</span></span><br><span class="line"><span class="attr">服务器收到大于</span> <span class="string">max_allowed_packet 字节的信息包时，将发出“信息包过大”错误，并关闭连接。对于某些客户端，如果通信信息包过大，在执行查询期间，可能会遇到“丢失与 MySQL 服务器的连接”错误。默认值 16M。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># 所有线程所打开表的数量. 增加此值就增加了mysqld所需要的文件描述符的数量这样你需要确认在[mysqld_safe]中 “open-files-limit” 变量设置打开文件数量允许至少4096</span></span><br><span class="line"><span class="attr">table_cache</span> = <span class="string">512 </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># 线程使用的堆大小. 此容量的内存在每次连接时被预留.MySQL 本身常不会需要超过 64K 的内存如果你使用你自己的需要大量堆的 UDF 函数或者你的操作系统对于某些操作需要更多的堆,你也许需要将其设置的更高一点.默认设置足以满足大多数应用</span></span><br><span class="line"><span class="attr">thread_stack</span> = <span class="string">192K </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># 我们在 cache 中保留多少线程用于重用.当一个客户端断开连接后,如果 cache 中的线程还少于 thread_cache_size,则客户端线程被放入 cache 中.这可以在你需要大量新连接的时候极大的减少线程创建的开销(一般来说如果你有好的线程模型的话,这不会有明显的性能提升.)服务器线程缓存这个值表示可以重新利用保存在缓存中线程的数量,当断开连接时如果缓存中还有空间,那么客户端的线程将被放到缓存中,如果线程重新被请求，那么请求将从缓存中读取,如果缓存中是空的或者是新的请求，那么这个线程将被重新创建,如果有很多新的线程，增加这个值可以改善系统性能.通过比较 Connections 和 Threads_created 状态的变量，可以看到这个变量的作用</span></span><br><span class="line"><span class="comment">#   根据物理内存设置规则如下：</span></span><br><span class="line"><span class="comment">#   1G  —&gt; 8</span></span><br><span class="line"><span class="comment">#   2G  —&gt; 16</span></span><br><span class="line"><span class="comment">#   3G  —&gt; 32</span></span><br><span class="line"><span class="comment">#   大于3G  —&gt; 64</span></span><br><span class="line"><span class="attr">thread_cache_size</span> = <span class="string">20 </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># 此允许应用程序给予线程系统一个提示在同一时间给予渴望被运行的线程的数量.该参数取值为服务器逻辑CPU数量×2，在本例中，服务器有 2 颗物理CPU，而每颗物理CPU又支持H.T超线程，所以实际取值为 4 × 2 ＝ 8.设置 thread_concurrency的值的正确与否, 对 mysql 的性能影响很大, 在多个 cpu(或多核)的情况下，错误设置了 thread_concurrency 的值, 会导致 mysql 不能充分利用多 cpu(或多核),出现同一时刻只能一个 cpu(或核)在工作的情况。 thread_concurrency 应设为 CPU 核数的 2 倍.比如有一个双核的 CPU, 那么 thread_concurrency 的应该为 4; 2 个双核的 cpu,thread_concurrency 的值应为 8,属重点优化参数</span></span><br><span class="line"><span class="attr">thread_concurrency</span> = <span class="string">8 </span></span><br><span class="line"><span class="comment"> </span></span><br><span class="line"><span class="comment"> </span></span><br><span class="line"><span class="comment"># =============================qcache settings 相关选项 ==================================#</span></span><br><span class="line"><span class="comment"># 不缓存查询大于该值的结果.只有小于此设定值的结果才会被缓冲,  此设置用来保护查询缓冲,防止一个极大的结果集将其他所有的查询结果都覆盖.</span></span><br><span class="line"><span class="attr">query_cache_limit</span> = <span class="string">2M </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># 查询缓存分配的最小块大小.默认是 4KB，设置值大对大数据查询有好处，但如果你的查询都是小数据查询，就容易造成内存碎片和浪费</span></span><br><span class="line"><span class="comment">#   查询缓存碎片率 = Qcache_free_blocks / Qcache_total_blocks * 100%</span></span><br><span class="line"><span class="comment">#   如果查询缓存碎片率超过 20%，可以用 FLUSH QUERY CACHE 整理缓存碎片，或者试试减小query_cache_min_res_unit，如果你的查询都是小数据量的话。</span></span><br><span class="line"><span class="comment">#   查询缓存利用率 = (query_cache_size – Qcache_free_memory) / query_cache_size *100%</span></span><br><span class="line"><span class="comment">#   查询缓存利用率在 25%以下的话说明 query_cache_size 设置的过大，可适当减小;查询缓存利用率在 80%以上而且 Qcache_lowmem_prunes &gt; 50 的话说明 query_cache_size 可能有点小，要不就是碎片太多。</span></span><br><span class="line"><span class="comment">#   查询缓存命中率 = (Qcache_hits – Qcache_inserts) / Qcache_hits * 100%</span></span><br><span class="line"><span class="attr">query_cache_min_res_unit</span> = <span class="string">2K </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># 指定 MySQL 查询缓冲区的大小。可以通过在 MySQL 控制台执行以下命令观察：</span></span><br><span class="line"><span class="comment">#   代码:</span></span><br><span class="line"><span class="comment">#   &gt; SHOW VARIABLES LIKE &#x27;%query_cache%&#x27;;</span></span><br><span class="line"><span class="comment">#   &gt; SHOW STATUS LIKE &#x27;Qcache%&#x27;;如果 Qcache_lowmem_prunes 的值非常大，则表明经常出现缓冲不够的情况；</span></span><br><span class="line"><span class="comment">#   如果 Qcache_hits 的值非常大，则表明查询缓冲使用非常频繁，如果该值较小反而会影响效率，那么可以考虑不用查询缓冲； Qcache_free_blocks，如果该值非常大，则表明缓冲区中碎片很多。</span></span><br><span class="line"><span class="comment">#   memlock # 如果你的系统支持 memlock() 函数,你也许希望打开此选项用以让运行中的 mysql 在在内存高度</span></span><br><span class="line"><span class="comment">#   紧张的时候,数据在内存中保持锁定并且防止可能被 swapping out,此选项对于性能有益</span></span><br><span class="line"><span class="attr">query_cache_size</span> = <span class="string">64M  </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># =================================default settings 相关选项========================================</span></span><br><span class="line"><span class="comment"># 当创建新表时作为默认使用的表类型,如果在创建表示没有特别执行表类型,将会使用此值</span></span><br><span class="line"><span class="attr">default_table_type</span> = <span class="string">InnoDB </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">#服务器时区</span></span><br><span class="line"><span class="attr">default-time-zone</span> = <span class="string">system </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">#默认存储引擎</span></span><br><span class="line"><span class="attr">default-storage-engine</span> = <span class="string">InnoDB </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># ====================================tmp &amp;&amp; heap settings ========================================</span></span><br><span class="line"><span class="comment">#临时表的最大大小，如果超过该值，则结果放到磁盘中,此限制是针对单个表的,而不是总和.</span></span><br><span class="line"><span class="attr">tmp_table_size</span> = <span class="string">512M </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">#独立的内存表所允许的最大容量.此选项为了防止意外创建一个超大的内存表导致永尽所有的内存资源.</span></span><br><span class="line"><span class="attr">max_heap_table_size</span> = <span class="string">512M </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">#  ======================================log settings 相关选项 ======================================</span></span><br><span class="line"><span class="comment"># 打开二进制日志功能.在复制(replication)配置中,作为 MASTER 主服务器必须打开此项.如果你需要从你最后的备份中做基于时间点的恢复,你也同样需要二进制日志.这些路径相对于 datadir</span></span><br><span class="line"><span class="attr">log-bin</span> = <span class="string">mysql-bin </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># 表示slave将复制事件写进自己的二进制日志</span></span><br><span class="line"><span class="attr">log_slave_updates</span> = <span class="string">1 </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># 二进制的索引文件名</span></span><br><span class="line"><span class="attr">log-bin-index</span> = <span class="string">mysql-bin.index </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># 定义relay_log的位置和名称，如果值为空，则默认位置在数据文件的目录，文件名为host_name-relay-bin.nnnnnn（By default, relay log file names have the form host_name-relay-bin.nnnnnn in the data directory）；</span></span><br><span class="line"><span class="attr">relay-log</span> = <span class="string">relay-log </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># relay-log的索引文件名</span></span><br><span class="line"><span class="attr">relay_log_index</span> = <span class="string">relay-log.index  </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># 将警告打印输出到错误 log 文件.如果你对于MySQL有任何问题，你应该打开警告 log 并且仔细审查错误日志,查出可能的原因.</span></span><br><span class="line"><span class="attr">log-warnings</span> = <span class="string">1 </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># 错误日志路径</span></span><br><span class="line"><span class="attr">log-error</span> =  <span class="string">/usr/local/mysql/log/mysql.err </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># 参数 log_output 指定了慢查询输出的格式，默认为 FILE，你可以将它设为 TABLE，然后就可以查询 mysql 架构下的 slow_log 表了</span></span><br><span class="line"><span class="attr">log_output</span> = <span class="string">FILE </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># 指定是否开启慢查询日志(该参数要被slow_query_log取代，做兼容性保留)</span></span><br><span class="line"><span class="attr">log_slow_queries</span> <span class="string"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># 指定是否开启慢查询日志. 慢查询是指消耗了比 “long_query_time” 定义的更多时间的查询.如果 log_long_format 被打开,那些没有使用索引的查询也会被记录.如果你经常增加新查询到已有的系统内的话. 一般来说这是一个好主意,</span></span><br><span class="line"><span class="attr">slow_query_log</span> = <span class="string">1 </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># 设定慢查询的阀值，超出次设定值的SQL即被记录到慢查询日志，缺省值为10s.所有的使用了比这个时间(以秒为单位)更多的查询会被认为是慢速查询.不要在这里使用”1″, 否则会导致所有的查询,甚至非常快的查询页被记录下来(由于MySQL 目前时间的精确度只能达到秒的级别).</span></span><br><span class="line"><span class="attr">long-query-time</span> = <span class="string">1 </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># 在慢速日志中记录更多的信息.一般此项最好打开，打开此项会记录使得那些没有使用索引的查询也被作为到慢速查询附加到慢速日志里</span></span><br><span class="line"><span class="attr">log_long_format</span> <span class="string"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># 指定慢日志文件存放位置，可以为空，系统会给一个缺省的文件host_name-slow.log</span></span><br><span class="line"><span class="attr">slow_query_log_file</span> =  <span class="string">/usr/local/mysql/log/slow.log </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># 如果运行的SQL语句没有使用索引，则mysql数据库同样会将这条SQL语句记录到慢查询日志文件中。</span></span><br><span class="line"><span class="attr">log-queries-not-using-indexes</span> <span class="string"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># 记录那些由于查找了多余1000次而引发的慢查询</span></span><br><span class="line"><span class="attr">min_examined_row_limit</span>=<span class="string">1000　　　　</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># 记录那些慢的optimize table，analyze table和alter table语句</span></span><br><span class="line"><span class="attr">long-slow-admin-statements</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># 记录由Slave所产生的慢查询</span></span><br><span class="line"><span class="attr">log-slow-slave-statements</span> <span class="string"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># 将所有到达MySQL Server的SQL语句记录下来,默认关闭 </span></span><br><span class="line"><span class="attr">general_log</span> = <span class="string">1 </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># general_log路径</span></span><br><span class="line"><span class="attr">general_log_file</span> =  <span class="string">/usr/local/mysql/log/mysql.log </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># 如果二进制日志写入的内容超出给定值，日志就会发生滚动。你不能将该变量设置为大于1GB或小于4096字节。 默认值是1GB。如果你正使用大的事务，二进制日志还会超过max_binlog_size</span></span><br><span class="line"><span class="attr">max_binlog_size</span> = <span class="string">1G </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># 标记relaylog允许的最大值，如果该值为0，则默认值为max_binlog_size(1G)；如果不为0，则max_relay_log_size则为最大的relay_log文件大小；</span></span><br><span class="line"><span class="attr">max_relay_log_size</span> = <span class="string">1G </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># 是否自动清空不再需要中继日志时。默认值为1(启用)</span></span><br><span class="line"><span class="attr">relay-log-purge</span> = <span class="string">1 </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># 超过 30 天的 binlog 删除</span></span><br><span class="line"><span class="attr">expire_logs_days</span> = <span class="string">30 </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># 在一个事务中 binlog 为了记录 SQL 状态所持有的 cache 大小,如果你经常使用大的,多声明的事务,你可以增加此值来获取更大的性能.所有从事务来的状态都将被缓冲在 binlog 缓冲中然后在提交后一次性写入到 binlog 中,如果事务比此值大, 会使用磁盘上的临时文件来替代.此缓冲在每个连接的事务第一次更新状态时被创建.session 级别</span></span><br><span class="line"><span class="attr">binlog_cache_size</span> = <span class="string">1M </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># 复制时忽略数据库及表</span></span><br><span class="line"><span class="attr">replicate-wild-ignore-table</span> = <span class="string">mysql.% </span></span><br><span class="line"><span class="comment"># 定义复制过程中从服务器可以自动跳过的错误号，当复制过程中遇到定义的错误号，就可以自动跳过，直接执行后面的SQL语句。</span></span><br><span class="line"><span class="comment"># slave_skip_errors选项有四个可用值，分别为：off，all，ErorCode，ddl_exist_errors。</span></span><br><span class="line"><span class="comment">#  默认情况下该参数值是off，我们可以列出具体的error code，也可以选择all，mysql5.6及MySQL Cluster NDB 7.3以及后续版本增加了参数ddl_exist_errors，该参数包含一系列error code（1007,1008,1050,1051,1054,1060,1061,1068,1094,1146）</span></span><br><span class="line"><span class="comment">#    一些error code代表的错误如下：</span></span><br><span class="line"><span class="comment">#    1007：数据库已存在，创建数据库失败</span></span><br><span class="line"><span class="comment">#    1008：数据库不存在，删除数据库失败</span></span><br><span class="line"><span class="comment">#    1050：数据表已存在，创建数据表失败</span></span><br><span class="line"><span class="comment">#    1051：数据表不存在，删除数据表失败</span></span><br><span class="line"><span class="comment">#    1054：字段不存在，或程序文件跟数据库有冲突</span></span><br><span class="line"><span class="comment">#    1060：字段重复，导致无法插入</span></span><br><span class="line"><span class="comment">#    1061：重复键名</span></span><br><span class="line"><span class="comment">#    1068：定义了多个主键</span></span><br><span class="line"><span class="comment">#    1094：位置线程ID</span></span><br><span class="line"><span class="comment">#    1146：数据表缺失，请恢复数据库</span></span><br><span class="line"><span class="comment">#    1053：复制过程中主服务器宕机</span></span><br><span class="line"><span class="comment">#    1062：主键冲突 Duplicate entry &#x27;%s&#x27; for key %d</span></span><br><span class="line"><span class="attr">slave_skip_errors</span>=<span class="string">all </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># ==========================================MyISAM 相关选项 ========================================</span></span><br><span class="line"><span class="comment">#指定用于索引的缓冲区大小，增加它可得到更好的索引处理性能。如果是以InnoDB引擎为主的DB，专用于MyISAM引擎的 key_buffer_size 可以设置较小，8MB 已足够  如果是以MyISAM引擎为主，可设置较大，但不能超过4G. 在这里，强烈建议不使用MyISAM引擎，默认都是用InnoDB引擎.注意：该参数值设置的过大反而会是服务器整体效率降低！</span></span><br><span class="line"><span class="attr">key_buffer_size</span> = <span class="string">256M </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># 查询排序时所能使用的缓冲区大小。排序缓冲被用来处理类似 ORDER BY 以及 GROUP BY 队列所引起的排序.一个用来替代的基于磁盘的合并分类会被使用.查看 “Sort_merge_passes” 状态变量. 在排序发生时由每个线程分配 注意：该参数对应的分配内存是每连接独占！如果有 100 个连接，那么实际分配的总共排序缓冲区大小为 100 × 6 ＝600MB,所以,对于内存在 4GB 左右的服务器推荐设置为 6-8M。 </span></span><br><span class="line"><span class="attr">sort_buffer_size</span> = <span class="string">2M </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># 读查询操作所能使用的缓冲区大小。和 sort_buffer_size 一样，该参数对应的分配内存也是每连接独享！用来做 MyISAM 表全表扫描的缓冲大小.当全表扫描需要时,在对应线程中分配.</span></span><br><span class="line"><span class="attr">read_buffer_size</span> = <span class="string">2M </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># 联合查询操作所能使用的缓冲区大小，和 sort_buffer_size 一样，该参数对应的分配内存也是每连接独享!此缓冲被使用来优化全联合(full JOINs 不带索引的联合).类似的联合在极大多数情况下有非常糟糕的性能表现, 但是将此值设大能够减轻性能影响.通过 “Select_full_join”状态变量查看全联合的数量， 当全联合发生时,在每个线程中分配。</span></span><br><span class="line"><span class="attr">join_buffer_size</span> = <span class="string">8M </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># MyISAM 以索引扫描(Random Scan)方式扫描数据的 buffer大小 </span></span><br><span class="line"><span class="attr">read_rnd_buffer_size</span> = <span class="string">8M </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># MyISAM 使用特殊的类似树的 cache 来使得突发插入(这些插入是,INSERT … SELECT, INSERT … VALUES (…), (…), …, 以及 LOAD DATAINFILE) 更快. 此变量限制每个进程中缓冲树的字节数.设置为 0 会关闭此优化.为了最优化不要将此值设置大于 “key_buffer_size”.当突发插入被检测到时此缓冲将被分配MyISAM 用在块插入优化中的树缓冲区的大小。注释：这是一个 per thread 的限制 （ bulk 大量）.此缓冲当 MySQL 需要在 REPAIR, OPTIMIZE, ALTER 以及 LOAD DATA INFILE到一个空表中引起重建索引时被分配.这在每个线程中被分配.所以在设置大值时需要小心.</span></span><br><span class="line"><span class="attr">bulk_insert_buffer_size</span> = <span class="string">64M </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># MyISAM 设置恢复表之时使用的缓冲区的尺寸,当在REPAIR TABLE 或用 CREATE INDEX 创建索引或 ALTER TABLE 过程中排序 MyISAM 索引分配的缓冲区</span></span><br><span class="line"><span class="attr">myisam_sort_buffer_size</span> = <span class="string">64M </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># mysql重建索引时允许使用的临时文件最大大小</span></span><br><span class="line"><span class="attr">myisam_max_sort_file_size</span> = <span class="string">10G</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># 如果该值大于 1，在 Repair by sorting 过程中并行创建MyISAM 表索引(每个索引在自己的线程内).如果一个表拥有超过一个索引, MyISAM 可以通过并行排序使用超过一个线程去修复他们.这对于拥有多个 CPU 以及大量内存情况的用户,是一个很好的选择.</span></span><br><span class="line"><span class="attr">myisam_repair_threads</span> = <span class="string">1 </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># 允许的 GROUP_CONCAT()函数结果的最大长度</span></span><br><span class="line"><span class="attr">myisam_recover</span> = <span class="string">64K</span></span><br><span class="line"><span class="comment"># 设定默认的事务隔离级别.可用的级别如下:READ-UNCOMMITTED, READ-COMMITTED, REPEATABLE-READ,SERIALIZABLE</span></span><br><span class="line"><span class="comment"># 1.READ UNCOMMITTED-读未提交 2.READ COMMITTE-读已提交 3.REPEATABLE READ -可重复读 4.SERIALIZABLE -串行</span></span><br><span class="line"><span class="attr">transaction_isolation</span> = <span class="string">REPEATABLE-READ </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># ======================================== INNODB 相关选项 =========================================</span></span><br><span class="line"><span class="comment"># 如果你的 MySQL 服务包含 InnoDB 支持但是并不打算使用的话,使用此选项会节省内存以及磁盘空间,并且加速某些部分</span></span><br><span class="line"><span class="attr">skip-innodb</span> <span class="string"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># InnoDB为独立表空间模式，每个数据库的每个表都会生成一个数据空间</span></span><br><span class="line"><span class="comment">#  独立表空间优点：</span></span><br><span class="line"><span class="comment">#   1．每个表都有自已独立的表空间。</span></span><br><span class="line"><span class="comment">#   2．每个表的数据和索引都会存在自已的表空间中。</span></span><br><span class="line"><span class="comment">#   3．可以实现单表在不同的数据库中移动。</span></span><br><span class="line"><span class="comment">#   4．空间可以回收（除drop table操作处，表空不能自已回收）</span></span><br><span class="line"><span class="comment">#  缺点：</span></span><br><span class="line"><span class="comment">#   1.单表增加过大，如超过100G</span></span><br><span class="line"><span class="comment">#  结论：</span></span><br><span class="line"><span class="comment">#   共享表空间在Insert操作上少有优势。其它都没独立表空间表现好。当启用独立表空间时，请合理调整：innodb_open_files</span></span><br><span class="line"><span class="attr">innodb_file_per_table</span> = <span class="string">1 </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># 启用InnoDB的status file，便于管理员查看以及监控等</span></span><br><span class="line"><span class="attr">innodb_status_file</span> = <span class="string">1 </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># 限制Innodb能打开的表的数据，如果库里的表特别多的情况，请增加这个。这个值默认是300</span></span><br><span class="line"><span class="attr">innodb_open_files</span> = <span class="string">2048 </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># 设置InnoDB存储引擎用来存放数据字典信息以及一些内部数据结构的内存空间大小，所以当我们一个MySQL Instance中的数据库对象非常多的时候，是需要适当调整该参数的大小以确保所有数据都能存放在内存中提高访问效率的。 </span></span><br><span class="line"><span class="attr">innodb_additional_mem_pool_size</span> = <span class="string">100M </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># 包括数据页、索引页、插入缓存、锁信息、自适应哈希所以、数据字典信息.InnoDB 使用一个缓冲池来保存索引和原始数据, 不像 MyISAM.这里你设置越大,你在存取表里面数据时所需要的磁盘 I/O 越少.在一个独立使用的数据库服务器上,你可以设置这个变量到服务器物理内存大小的 80%,不要设置过大,否则,由于物理内存的竞争可能导致操作系统的换页颠簸.注意在 32 位系统上你每个进程可能被限制在 2-3.5G 用户层面内存限制,所以不要设置的太高.</span></span><br><span class="line"><span class="attr">innodb_buffer_pool_size</span> = <span class="string">2G </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># innodb使用后台线程处理数据页上的读写 I/O(输入输出)请求,根据你的 CPU 核数来更改,默认是4</span></span><br><span class="line"><span class="comment"># 注:这两个参数不支持动态改变,需要把该参数加入到my.cnf里，修改完后重启MySQL服务,允许值的范围从 1-64</span></span><br><span class="line"><span class="attr">innodb_write_io_threads</span> = <span class="string">4</span></span><br><span class="line"><span class="attr">innodb_read_io_threads</span> = <span class="string">4</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># 设置此选项如果你希望 InnoDB 表空间文件被保存在其他分区.默认保存在 MySQL 的 datadir 中.</span></span><br><span class="line"><span class="attr">innodb_data_home_dir</span> =  <span class="string">/usr/local/mysql/var/ </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># InnoDB将数据保存在一个或者多个数据文件中成为表空间.如果你只有单个逻辑驱动保存你的数据,一个单个的自增文件就足够好了.其他情况下.每个设备一个文件一般都是个好的选择.你也可以配置 InnoDB 来使用裸盘分区 – 请参考手册来获取更多相关内容</span></span><br><span class="line"><span class="attr">innodb_data_file_path</span> = <span class="string">ibdata1:500M;ibdata2:2210M:autoextend</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># 用来同步 IO 操作的 IO 线程的数量. 此值在 Unix 下被硬编码为 4,但是在 Windows 磁盘 I/O 可能在一个大数值下表现的更好.</span></span><br><span class="line"><span class="attr">innodb_file_io_threads</span> = <span class="string">4 </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># 在InnoDb 核心内的允许线程数量,InnoDB 试着在 InnoDB 内保持操作系统线程的数量少于或等于这个参数给出的限制,最优值依赖于应用程序,硬件以及操作系统的调度方式.过高的值可能导致线程的互斥颠簸.默认设置为 0,表示不限制并发数，这里推荐设置为0，更好去发挥CPU多核处理能力，提高并发量</span></span><br><span class="line"><span class="attr">innodb_thread_concurrency</span> = <span class="string">16</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># 如果设置为 1 ,InnoDB 会在每次提交后刷新(fsync)事务日志到磁盘上,这提供了完整的 ACID 行为.如果你愿意对事务安全折衷, 并且你正在运行一个小的食物, 你可以设置此值到 0 或者 2 来减少由事务日志引起的磁盘 I/O</span></span><br><span class="line"><span class="comment">#   0 代表日志只大约每秒写入日志文件并且日志文件刷新到磁盘.</span></span><br><span class="line"><span class="comment">#   2 代表日志写入日志文件在每次提交后,但是日志文件只有大约每秒才会刷新到磁盘上.</span></span><br><span class="line"><span class="attr">innodb_flush_log_at_trx_commit</span> = <span class="string">1 </span></span><br><span class="line"><span class="comment"> </span></span><br><span class="line"><span class="comment"># 用来缓冲日志数据的缓冲区的大小.当此值快满时, InnoDB 将必须刷新数据到磁盘上.由于基本上每秒都会刷新一次,所以没有必要将此值设置的太大(甚至对于长事务而言)</span></span><br><span class="line"><span class="attr">innodb_log_buffer_size</span> = <span class="string">8M</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># 事物日志大小.在日志组中每个日志文件的大小，你应该设置日志文件总合大小到你缓冲池大小的5%~100%，来避免在日志文件覆写上不必要的缓冲池刷新行为.不论如何, 请注意一个大的日志文件大小会增加恢复进程所需要的时间.</span></span><br><span class="line"><span class="attr">innodb_log_file_size</span> = <span class="string">500M </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># 在日志组中的文件总数.通常来说 2~3 是比较好的.</span></span><br><span class="line"><span class="attr">innodb_log_files_in_group</span> = <span class="string">2 </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># InnoDB 的日志文件所在位置. 默认是 MySQL 的 datadir.你可以将其指定到一个独立的硬盘上或者一个 RAID1 卷上来提高其性能innodb_max_dirty_pages_pct = 90 #innodb 主线程刷新缓存池中的数据，使脏数据比例小于 90%,这是一个软限制,不被保证绝对执行.</span></span><br><span class="line"><span class="attr">innodb_log_group_home_dir</span> =  <span class="string">/usr/local/mysql/var/</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># InnoDB 事务在被回滚之前可以等待一个锁定的超时秒数。InnoDB 在它自己的 锁定表中自动检测事务死锁并且回滚事务。 InnoDB 用 LOCK TABLES 语句注意到锁定设置。默认值是 50 秒</span></span><br><span class="line"><span class="attr">innodb_lock_wait_timeout</span> = <span class="string">50 </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># InnoDB 用来刷新日志的方法.表空间总是使用双重写入刷新方法.默认值是 “fdatasync”, 另一个是 “O_DSYNC”.</span></span><br><span class="line"><span class="attr">innodb_flush_method</span> = <span class="string">O_DSYNC </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># 如果你发现 InnoDB 表空间损坏, 设置此值为一个非零值可能帮助你导出你的表.从1 开始并且增加此值知道你能够成功的导出表.</span></span><br><span class="line"><span class="attr">innodb_force_recovery</span>=<span class="string">1</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># 加速 InnoDB 的关闭. 这会阻止 InnoDB 在关闭时做全清除以及插入缓冲合并.这可能极大增加关机时间, 但是取而代之的是 InnoDB 可能在下次启动时做这些操作.</span></span><br><span class="line"><span class="attr">innodb_fast_shutdown</span> <span class="string"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># ===================================== 其他 相关选项 ===========================================</span></span><br><span class="line"><span class="attr">[mysqldump]</span></span><br><span class="line"><span class="comment"># 支持较大数据库的转储，在导出非常巨大的表时需要此项。增加该变量的值十分安全，这是因为仅当需要时才会分配额外内存。例如，仅当你发出长查询或mysqld必须返回大的结果行时mysqld才会分配更多内存。该变量之所以取较小默认值是一种预防措施，以捕获客户端和服务器之间的错误信息包，并确保不会因偶然使用大的信息包而导致内存溢出。 如果你正是用大的BLOB值，而且未为mysqld授予为处理查询而访问足够内存的权限，也会遇到与大信息包有关的奇怪问题。如果怀疑出现了该情况，请尝试在mysqld_safe脚本开始增加ulimit -d 256000，并重启mysqld。</span></span><br><span class="line"><span class="attr">quick</span> <span class="string"></span></span><br><span class="line"></span><br><span class="line"><span class="attr">[mysql]</span></span><br><span class="line"><span class="comment"># 允许通过 TAB 键提示</span></span><br><span class="line"><span class="attr">auto-rehash</span> <span class="string"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># 数据库字符集</span></span><br><span class="line"><span class="attr">default-character-set</span> = <span class="string">utf8 </span></span><br><span class="line"></span><br><span class="line"><span class="attr">connect-timeout</span> = <span class="string">3</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="attr">[mysqld_safe]</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># 增加每个进程的可打开文件数量.确认你已经将全系统限制设定的足够高!打开大量表需要将此值设大</span></span><br><span class="line"><span class="attr">open-files-limit</span> = <span class="string">8192 </span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>



<p>mysql一般生产配置</p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">[client]</span></span><br><span class="line"></span><br><span class="line"><span class="attr">socket</span>=<span class="string">/usr/local/mysql/mysql.sock</span></span><br><span class="line"></span><br><span class="line"><span class="attr">port</span>=<span class="string">3306</span></span><br><span class="line"></span><br><span class="line"><span class="attr">[mysqld]</span></span><br><span class="line"></span><br><span class="line"><span class="attr">basedir</span>=<span class="string">/usr/local/mysql/</span></span><br><span class="line"></span><br><span class="line"><span class="attr">datadir</span>=<span class="string">/usr/local/mysql/data</span></span><br><span class="line"></span><br><span class="line"><span class="attr">socket</span>=<span class="string">/usr/local/mysql/mysql.sock</span></span><br><span class="line"></span><br><span class="line"><span class="attr">default-storage-engine</span>=<span class="string">INNODB</span></span><br><span class="line"></span><br><span class="line"><span class="attr">character_set_server</span>=<span class="string">utf8mb4</span></span><br><span class="line"></span><br><span class="line"><span class="attr">collation_server</span>=<span class="string">utf8mb4_general_ci </span></span><br><span class="line"></span><br><span class="line"><span class="attr">port</span>=<span class="string">3306</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># Disabling symbolic-links is recommended to prevent assorted security risks</span></span><br><span class="line"></span><br><span class="line"><span class="attr">symbolic-links</span>=<span class="string">0</span></span><br><span class="line"></span><br><span class="line"><span class="attr">log-error</span>=<span class="string">/usr/local/mysql/log/mysqld3306.log</span></span><br><span class="line"></span><br><span class="line"><span class="attr">pid-file</span>=<span class="string">/usr/local/mysql/mysqld3306.pid</span></span><br><span class="line"></span><br><span class="line"><span class="attr">log_bin</span>=<span class="string">mysql3306-bin</span></span><br><span class="line"></span><br><span class="line"><span class="attr">server_id</span>=<span class="string">1</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">##二进制日志格式STATEMENT，ROW，MIXED</span></span><br><span class="line"></span><br><span class="line"><span class="attr">binlog_format</span>=<span class="string">ROW</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">## 最大连接数,MySQL服务器允许的最大连接数16384,连接数越多消耗内存越多</span></span><br><span class="line"></span><br><span class="line"><span class="attr">max_connections</span> = <span class="string">1000</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">## Enable Per Table Data for InnoDB to shrink ibdata1(innoDB表优化)</span></span><br><span class="line"></span><br><span class="line"><span class="attr">innodb_file_per_table</span> = <span class="string">1</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">## 日志过期时间,包括二进制日志(过期自动删除)</span></span><br><span class="line"></span><br><span class="line"><span class="attr">expire_logs_days</span> = <span class="string">15</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">#默认128M,用于存储页面缓存数据外，另外正常情况下还有大约8%的开销，主要用在每个缓存页帧的描述、adaptive hash等数据结构,适当的增加这个参数的大小，可以有效的减少 InnoDB 类型的表的磁盘 I/O</span></span><br><span class="line"></span><br><span class="line"><span class="attr">innodb_buffer_pool_size</span> = <span class="string">2048M</span></span><br><span class="line"></span><br><span class="line"><span class="attr">innodb_log_file_size</span> = <span class="string">512M</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">#默认是8MB,InnoDB在写事务日志的时候，为了提高性能，也是先将信息写入Innofb Log Buffer中，当满足innodb_flush_log_trx_commit参数所设置的相应条件(或者日志缓冲区写满)之后，才会将日志写到文件 (或者同步到磁盘)中</span></span><br><span class="line"></span><br><span class="line"><span class="attr">innodb_log_buffer_size</span> = <span class="string">8M</span></span><br><span class="line"></span><br><span class="line"><span class="attr">innodb_flush_log_at_trx_commit</span> = <span class="string">2</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">#表大小写不敏感</span></span><br><span class="line"></span><br><span class="line"><span class="attr">lower_case_table_names</span>=<span class="string">1</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">#网络读写超时时间</span></span><br><span class="line"></span><br><span class="line"><span class="attr">net_read_timeout</span>=<span class="string">28800</span></span><br><span class="line"></span><br><span class="line"><span class="attr">net_write_timeout</span>=<span class="string">28800</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">#跳过密码  安装完后屏蔽该选项</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">#skip-grant-tables</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>





<p>慢查询查看</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> mysql.slow_log</span><br></pre></td></tr></table></figure>



<h1 id="问题排查"><a href="#问题排查" class="headerlink" title="问题排查"></a>问题排查</h1><h2 id="mysql-启动报错Host-name-could-not-be-resolved解决办法"><a href="#mysql-启动报错Host-name-could-not-be-resolved解决办法" class="headerlink" title="mysql 启动报错Host name could not be resolved解决办法"></a>mysql 启动报错Host name could not be resolved解决办法</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line">下面一行加入skip-name-resolve重启mysql服务就可以了</span><br></pre></td></tr></table></figure>





<h2 id="mysql配置完成后，启动mysql服务后，连接mysql报错：ERROR-2002-HY000-Can’t-connect-to-local-MySQL-server-through-socket-‘-x2F-var-x2F-lib-x2F-mysql-x2F-mysql-sock’-2"><a href="#mysql配置完成后，启动mysql服务后，连接mysql报错：ERROR-2002-HY000-Can’t-connect-to-local-MySQL-server-through-socket-‘-x2F-var-x2F-lib-x2F-mysql-x2F-mysql-sock’-2" class="headerlink" title="mysql配置完成后，启动mysql服务后，连接mysql报错：ERROR 2002 (HY000): Can’t connect to local MySQL server through socket ‘&#x2F;var&#x2F;lib&#x2F;mysql&#x2F;mysql.sock’ (2)"></a>mysql配置完成后，启动mysql服务后，连接mysql报错：ERROR 2002 (HY000): Can’t connect to local MySQL server through socket ‘&#x2F;var&#x2F;lib&#x2F;mysql&#x2F;mysql.sock’ (2)</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line">[mysql]</span><br><span class="line">[client]</span><br><span class="line">下面的socket属性配置不一致</span><br></pre></td></tr></table></figure>



<h2 id="缺失包"><a href="#缺失包" class="headerlink" title="缺失包"></a>缺失包</h2><h3 id="安装mysql-community-libs-compat时报错如下："><a href="#安装mysql-community-libs-compat时报错如下：" class="headerlink" title="安装mysql-community-libs-compat时报错如下："></a>安装mysql-community-libs-compat时报错如下：</h3><blockquote>
<p>错误：依赖检测失败：<br>    libcrypto.so.10()(64bit) 被 mysql-community-libs-compat-5.7.40-1.el7.x86_64 需要<br>    libcrypto.so.10(libcrypto.so.10)(64bit) 被 mysql-community-libs-compat-5.7.40-1.el7.x86_64 需要<br>    libssl.so.10()(64bit) 被 mysql-community-libs-compat-5.7.40-1.el7.x86_64 需要<br>    libssl.so.10(libssl.so.10)(64bit) 被 mysql-community-libs-compat-5.7.40-1.el7.x86_64 需要</p>
</blockquote>
<p>过程 ：google时发现库</p>
<p><a href="https://pkgs.org/download/libcrypto.so.10()(64bit)">https://pkgs.org/download/libcrypto.so.10()(64bit)</a></p>
<p>发现了compat-openssl10以及解释，大意为compat-openssl10只包含libraries，提供与不支持使用OpenSSL-1.1编译的早期版本和软件的兼容性。</p>
<blockquote>
<p>The OpenSSL toolkit provides support for secure communications between machines. This version of OpenSSL package contains only the libraries and is provided for compatibility with previous releases and software that does not support compilation with OpenSSL-1.1.</p>
</blockquote>
<p>从stackoverflow可以发现openssl提供了libcrypto.so.10却没有模块名，让系统以为缺少依赖</p>
<blockquote>
<p>In your case, openssl seems to provide only libcrypto.so.10 without any module name, making geramer-server believe that dependency is missing as it requires libcrypto.so.10 from module libcrypto.so.10.</p>
</blockquote>
<p><a href="https://stackoverflow.com/questions/20518183/dependency-resolution-fails-on-installed-library">https://stackoverflow.com/questions/20518183/dependency-resolution-fails-on-installed-library</a></p>
<p>解决：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum install compat-openssl10 -y</span><br></pre></td></tr></table></figure>

<h3 id="安装mysql-community-client时错报"><a href="#安装mysql-community-client时错报" class="headerlink" title="安装mysql-community-client时错报"></a>安装mysql-community-client时错报</h3><blockquote>
<p>警告：mysql-community-client-5.7.40-1.el7.x86_64.rpm: 头V4 RSA&#x2F;SHA256 Signature, 密钥 ID 3a79bd29: NOKEY<br>错误：依赖检测失败：<br>    libncurses.so.5()(64bit) 被 mysql-community-client-5.7.40-1.el7.x86_64 需要<br>    libtinfo.so.5()(64bit) 被 mysql-community-client-5.7.40-1.el7.x86_64 需要</p>
</blockquote>
<p>解决：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo yum install libncurses*</span><br></pre></td></tr></table></figure>



<h2 id="安装mysql-community-server报错"><a href="#安装mysql-community-server报错" class="headerlink" title="安装mysql-community-server报错"></a>安装mysql-community-server报错</h2><p>错误信息如下：</p>
<blockquote>
<p>[&#x2F;usr&#x2F;lib&#x2F;tmpfiles.d&#x2F;mysql.conf:23] Line references path below legacy directory &#x2F;var&#x2F;run&#x2F;, updating &#x2F;var&#x2F;run&#x2F;mysqld → &#x2F;run&#x2F;mysqld; please update the tmpfiles.d&#x2F; drop-in file accordingly.</p>
</blockquote>
<p>按照错误提示：编辑&#x2F;usr&#x2F;lib&#x2F;tmpfiles.d&#x2F;mysql.conf文件，将 &#x2F;var&#x2F;run&#x2F;mysqld路径改为&#x2F;run&#x2F;mysqld</p>
<h2 id="修改数据目录后启动报错"><a href="#修改数据目录后启动报错" class="headerlink" title="修改数据目录后启动报错"></a>修改数据目录后启动报错</h2><blockquote>
<p>2月 28 00:22:29 localhost.localdomain setroubleshoot[46262]: SELinux is preventing &#x2F;usr&#x2F;sbin&#x2F;mysqld from write access on the dir&gt;<br>2月 28 00:22:29 localhost.localdomain setroubleshoot[46262]: SELinux is preventing &#x2F;usr&#x2F;sbin&#x2F;mysqld from write access on the dir&gt;<br>              *****  Plugin catchall_labels (83.8 confidence) suggests   *******</p>
<p>​              If you want to allow mysqld to have write access on the data direc&gt;<br>​              Then you need to change the label on &#x2F;mysql&#x2F;data<br>​              Do<br>​              #semanage fcontext -a -t FILE_TYPE ‘&#x2F;mysql&#x2F;data’<br>​              where FILE_TYPE is one of the following: faillog_t, krb5_host_rcac&gt;<br>​              Then execute:<br>​              restorecon -v ‘&#x2F;mysql&#x2F;data’</p>
<p>​             *****Plugin catchall (17.1 confidence) suggests   **************</p>
<p>​              If you believe that mysqld should be allowed write access on the d<br>​              Then you should report this as a bug.<br>​              You can generate a local policy module to allow this access.<br>​              Do</p>
<p>​              allow this access for now by executing:</p>
<p>​              #ausearch -c ‘mysqld’ –raw | audit2allow -M my-mysqld</p>
<p>​              #semodule -X 300 -i my-mysqld.pp</p>
<p>2月 28 00:22:29 localhost.localdomain setroubleshoot[46262]: AnalyzeThread.run(): Set alarm timeout to 10<br>2月 28 00:22:29 localhost.localdomain setroubleshoot[46262]: AnalyzeThread.run(): Cancel pending alarm<br>2月 28 00:22:29 localhost.localdomain setroubleshoot[46262]: failed to retrieve rpm info for &#x2F;mysql&#x2F;data</p>
</blockquote>
<p>解决方法：</p>
<p>该问题是由于Selinux安全策略造成的，我们可以按照错误提示进行修改</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">执行命令前先把mysql生成的文件删除以防把自动生成的文件策略修改</span></span><br><span class="line">semanage fcontext -a -t mysqld_db_t /mysql/data</span><br><span class="line">restorecon -v /mysql/data</span><br></pre></td></tr></table></figure>

<p>还可以用其他命令<code>chcon -R -t mysqld_db_t -u system_u -r object_r 新的mysql-data目录</code>（直接修改文件夹安全权限）或者<code>chcon -R --reference=/var/lib/mysql 新的mysql-data目录</code>（复制源文件夹的权限给新文件夹）；不过由于本人没有深入了解这些命令造成修改成功了一部分，未完全修改成功</p>
<p>​          </p>
]]></content>
      <categories>
        <category>运维安装</category>
        <category>MySQL</category>
      </categories>
  </entry>
  <entry>
    <title>Centos7安装SFTP</title>
    <url>/2023/02/11/Centos7%E5%AE%89%E8%A3%85SFTP/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><p>[toc]</p>
<h1 id="安装准备"><a href="#安装准备" class="headerlink" title="安装准备"></a>安装准备</h1><p>关闭防火墙：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看防火墙状态</span></span><br><span class="line">systemctl status firewalld.service</span><br><span class="line"></span><br><span class="line"><span class="comment"># 停止防火墙</span></span><br><span class="line">systemctl stop firewalld.service</span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭防火墙开启自启动</span></span><br><span class="line">systemctl <span class="built_in">disable</span> firewalld.service</span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭SELINUX,并使之生效(/etc/selinux/config)</span></span><br><span class="line"><span class="comment"># 将SELINUX=enforcing改为SELINUX=disabled</span></span><br><span class="line">setenforce 0</span><br><span class="line"></span><br></pre></td></tr></table></figure>





<h1 id="安装SSH服务"><a href="#安装SSH服务" class="headerlink" title="安装SSH服务"></a>安装SSH服务</h1><p>在Centos中sftp只是ssh的一部分，所以采用yum来安装ssh服务即可</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看SSH是否安装以及版本</span></span><br><span class="line">ssh -V</span><br><span class="line">rpm -qa|grep openssh*</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果需要重新安装ssh,那么执行一下命令</span></span><br><span class="line"><span class="comment"># 卸载ssh服务</span></span><br><span class="line">yum remove -y openssh*</span><br><span class="line"><span class="comment"># 开始安装ssh</span></span><br><span class="line">yum install -y openssl openssh-server</span><br><span class="line"><span class="comment"># 启动ssh服务</span></span><br><span class="line">systemctl stop sshd.service</span><br><span class="line">systemctl restart sshd.service</span><br><span class="line">systemctl status sshd.service</span><br><span class="line">systemctl <span class="built_in">enable</span> sshd.service</span><br><span class="line"></span><br></pre></td></tr></table></figure>





<h1 id="新建用户"><a href="#新建用户" class="headerlink" title="新建用户"></a>新建用户</h1><p>首次增加</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建SFTP目录并授权</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /data/sftp/retail/upload</span><br><span class="line"></span><br><span class="line"><span class="comment"># 新建SFTP组以及用户</span></span><br><span class="line"><span class="comment"># -g 指定用户所属群组</span></span><br><span class="line"><span class="comment"># -d 指定用户登入目录</span></span><br><span class="line"><span class="comment"># -s 禁止用户登入系统</span></span><br><span class="line"><span class="comment"># -M 不建立登入目录</span></span><br><span class="line">groupadd sftp</span><br><span class="line">useradd -g sftp -d /data/sftp/retail -s /sbin/nologin -M retail</span><br><span class="line"><span class="comment"># 设置用户密码</span></span><br><span class="line">passwd retail</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建上传目录并分配给SFTP用户权限</span></span><br><span class="line"><span class="built_in">chmod</span> -R 750 /data</span><br><span class="line"><span class="built_in">chown</span> root:root /data</span><br><span class="line"></span><br><span class="line"><span class="built_in">chown</span> root:root /data/sftp</span><br><span class="line"></span><br><span class="line"><span class="built_in">chown</span> root:sftp /data/sftp/retail</span><br><span class="line"></span><br><span class="line"><span class="built_in">chown</span> retail:sftp /data/sftp/retail/upload</span><br><span class="line"></span><br><span class="line"><span class="built_in">chmod</span> -R 755 /data/sftp/retail/upload</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>



<p>二次增加用户</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建目录</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /data/sftp/xxx/upload</span><br><span class="line"></span><br><span class="line"><span class="comment"># 增加用户</span></span><br><span class="line">useradd -g sftp -d /data/sftp/xxx -s /sbin/nologin -M xxx</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置用户密码</span></span><br><span class="line">passwd xxx</span><br><span class="line"></span><br><span class="line"><span class="built_in">chmod</span> -R 750 /data/sftp/xxx</span><br><span class="line"></span><br><span class="line"><span class="built_in">chown</span> root:sftp /data/sftp/xxx</span><br><span class="line"></span><br><span class="line"><span class="built_in">chmod</span> -R 755 /data/sftp/xxx/upload</span><br><span class="line"></span><br><span class="line"><span class="built_in">chown</span> xxx:sftp /data/sftp/xxx/upload</span><br><span class="line"></span><br></pre></td></tr></table></figure>





<h1 id="配置SSH和SFTP"><a href="#配置SSH和SFTP" class="headerlink" title="配置SSH和SFTP"></a>配置SSH和SFTP</h1><p>备份配置文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cp</span> /etc/ssh/sshd_config  /etc/ssh/sshd_config.bak</span><br></pre></td></tr></table></figure>



<p>配置SSH（&#x2F;etc&#x2F;ssh&#x2F;ssh_config）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 修改</span></span><br><span class="line">PermitRootLogin <span class="built_in">yes</span></span><br><span class="line">RSAAuthentication <span class="built_in">yes</span></span><br><span class="line">PubkeyAuthentication <span class="built_in">yes</span></span><br><span class="line">AuthorizedKeysFile .ssh/authorized_keys</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<p>配置SFTP（&#x2F;etc&#x2F;ssh&#x2F;ssh_config）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 注释下面配置</span></span><br><span class="line"><span class="comment"># Subsystem sftp /usr/libexec/openssh/sftp-server</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加以下配置</span></span><br><span class="line">Subsystem sftp internal-sftp</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> <span class="comment"># 这一行是指定以下的子行配置是匹配 sftp 用户组的。Match user userA,userB 则是匹配用</span></span><br><span class="line">Match Group sftp</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设定属于用户组 sftp 的用户访问的根文件夹。%h 代表用户 home 目录，%u 代表用户名。</span></span><br><span class="line"><span class="comment"># ChrootDirectory 设置的目录权限及其所有的上级文件夹权限，属主和属组必须是 root；</span></span><br><span class="line"><span class="comment"># ChrootDirectory 设置的目录权限及其所有的上级文件夹权限，只有属主能拥有写权限，权限最大设置只能是 755。</span></span><br><span class="line">ChrootDirectory /data/sftp/%u</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 该行强制执行内部 sftp，并忽略任何 ~/.ssh/rc 文件中的命令。</span></span><br><span class="line">ForceCommand internal-sftp</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 是否允许 TCP 转发，默认值为 &quot;yes&quot;， 禁止 TCP 转发并不能增强安全性，除非禁止了用户对 shell 的访问，因为用户可以安装他们自己的转发器。</span></span><br><span class="line">AllowTcpForwarding no</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 是否允许进行 X11 转发。默认值是 &quot;no&quot;，设为 &quot;yes&quot; 表示允许。如果允许 X11 转发并且 sshd(8)代理的显示区被配置为在含有通配符的地址(X11UseLocalhost)上监听。那么将可能有额外的信息被泄漏。由于使用 X11 转发的可能带来的风险，此指令默认值为&quot;no&quot;。需要注意的是，禁止 X11 转发并不能禁止用户转发 X11 通信，因为用户可以安装他们自己的转发器。</span></span><br><span class="line">X11Forwarding no</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>







<h1 id="重启并配置防火墙"><a href="#重启并配置防火墙" class="headerlink" title="重启并配置防火墙"></a>重启并配置防火墙</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 打开防火墙</span></span><br><span class="line">systemctl <span class="built_in">enable</span> firewalld.service</span><br><span class="line">systemctl restart firewalld.service</span><br><span class="line"><span class="comment"># 查看端口列表</span></span><br><span class="line">firewall-cmd --list-all</span><br><span class="line"><span class="comment"># 重新加载端口</span></span><br><span class="line">firewall-cmd --reload</span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭Selinux策略</span></span><br><span class="line"><span class="comment"># setsbool -P ftp_full_access on</span></span><br><span class="line"><span class="comment"># sed -i s#enforcing#disabled#g /etc/sysconfig/selinux</span></span><br><span class="line"><span class="comment"># setenforce 0 &amp;&amp; getenforce</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>







<h1 id="重启SFTP服务"><a href="#重启SFTP服务" class="headerlink" title="重启SFTP服务"></a>重启SFTP服务</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl restart sshd.service</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>运维安装</category>
      </categories>
  </entry>
  <entry>
    <title>Centos时钟同步</title>
    <url>/2023/03/13/Centos%E6%97%B6%E9%92%9F%E5%90%8C%E6%AD%A5/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><h1 id="时钟"><a href="#时钟" class="headerlink" title="时钟"></a>时钟</h1><p>​		Linux时钟有两种：（1）系统时钟（System Clock）：由Linux内核通过CPU的工作频率进行（2）硬件时钟（RealTime Clock）：主板时钟</p>
<p>​        系统时钟是基于内存的，断电则数据将丢失；硬件时间是写在硬件中的bios程序中。当Linux启动时，硬件时钟会读取系统时钟设置，然后系统时钟就会独立于硬件运作。因此系统时钟和硬件时钟可以采用异步方式，即系统时间和硬件时间可以不同。从Linux启动过程来看，系统时钟和硬件时钟不会发生冲突，但是Linux中的所有命令都是采用系统时钟设置。</p>
<h2 id="标准时间"><a href="#标准时间" class="headerlink" title="标准时间"></a>标准时间</h2><p>​		早期，标准时间采用的是<strong>格林尼治时间</strong>，即<code>GMT</code>，也称为<strong>世界时</strong>。它是指英国伦敦格林尼治天文台的标准时间，是以地球自转为基础，根据太阳横穿格林尼治本初子午线（即0度经线）来确定标准时间，用天来定义秒的计量系统，是基于天文学的。由于地球自转速度不均匀，并且正在缓慢减速，因此，在<code>GMT</code>下，每天的一秒在微观尺度上和其它天的都不相同，不是一种均匀的时间系统。</p>
<p>​		基于某些元素的原子能级跃迁频率有极高的稳定性这一特点，1967年国际度量衡大会对秒重新进行了定义：铯133元素的两个超精细能阶之间跃迁时所辐射的电磁波的周期的<code>9,192,631,770</code>倍的时间定义为一秒。在此基础上，1971年由国际时间局建立了国际原子时（<code>TAI</code>），并取1958年1月1日0时0分0秒世界时的瞬间作为同年同月同日0时0分0秒<code>TAI</code>。因此，<code>TAI</code>是基于物理学，为一种极其精确的时间系统，是用秒来定义天。</p>
<p>​		为解决<code>TAI</code>和<code>GMT</code>之间的时间误差，协调世界时于1972年面世。协调世界时，又称<strong>世界标准时间、国际协调时间</strong>，简称<code>UTC</code>。以<code>TAI</code>秒长为基础，当<code>GMT</code>与<code>TAI</code>之间时刻相差超过0.9秒时，通过在当年的6月30日或12月31日的最后时刻增减1秒进行修正，在时刻上尽量接近<code>GMT</code>。这就是<strong>闰秒</strong>。自1972年以来，一共进行了27次闰秒调整，都是正闰秒，即增加一秒。</p>
<table>
<thead>
<tr>
<th>实施年份</th>
<th>6月30日23:59:60</th>
<th>12月31日23:59:60</th>
<th>实施年份</th>
<th>6月30日23:59:60</th>
<th>12月31日23:59:60</th>
</tr>
</thead>
<tbody><tr>
<td>1972年</td>
<td>+1秒</td>
<td>+1秒</td>
<td>1989年</td>
<td>——</td>
<td>+1秒</td>
</tr>
<tr>
<td>1973年</td>
<td>——</td>
<td>+1秒</td>
<td>1990年</td>
<td>——</td>
<td>+1秒</td>
</tr>
<tr>
<td>1974年</td>
<td>——</td>
<td>+1秒</td>
<td>1992年</td>
<td>+1秒</td>
<td>——</td>
</tr>
<tr>
<td>1975年</td>
<td>——</td>
<td>+1秒</td>
<td>1993年</td>
<td>+1秒</td>
<td>——</td>
</tr>
<tr>
<td>1976年</td>
<td>——</td>
<td>+1秒</td>
<td>1994年</td>
<td>+1秒</td>
<td>——</td>
</tr>
<tr>
<td>1977年</td>
<td>——</td>
<td>+1秒</td>
<td>1995年</td>
<td>——</td>
<td>+1秒</td>
</tr>
<tr>
<td>1978年</td>
<td>——</td>
<td>+1秒</td>
<td>1997年</td>
<td>+1秒</td>
<td>——</td>
</tr>
<tr>
<td>1979年</td>
<td>——</td>
<td>+1秒</td>
<td>1998年</td>
<td>——</td>
<td>+1秒</td>
</tr>
<tr>
<td>1981年</td>
<td>+1秒</td>
<td>——</td>
<td>2005年</td>
<td>——</td>
<td>+1秒</td>
</tr>
<tr>
<td>1982年</td>
<td>+1秒</td>
<td>——</td>
<td>2008年</td>
<td>——</td>
<td>+1秒</td>
</tr>
<tr>
<td>1983年</td>
<td>+1秒</td>
<td>——</td>
<td>2012年</td>
<td>+1秒</td>
<td>——</td>
</tr>
<tr>
<td>1985年</td>
<td>+1秒</td>
<td>——</td>
<td>2015年</td>
<td>+1秒</td>
<td>——</td>
</tr>
<tr>
<td>1987年</td>
<td>——</td>
<td>+1秒</td>
<td>2016年</td>
<td>——</td>
<td>+1秒</td>
</tr>
</tbody></table>
<p>​		<strong>闰秒</strong>在当今存在一些争议。一些国家（如美国、法国、日本）认为应该直接使用<code>TAI</code>，不需要闰秒。因为要让世界各国在同一个瞬间增加一个闰秒，绝非易事。稍有疏忽，很多重要系统就会因时间误差而导致混乱。而且，基于<strong>闰秒</strong>出现的无规律性和不可预知性，要在设备上预留“置闰”设置也非常麻烦。总而言之，<strong>闰秒</strong>会让全世界付出更多的许多人力财力成本。而另一些国家（如中国、英国、俄罗斯）则认为，在地球越转越慢的现实之中，五千年后的人类将发现，“日居正中”将是下午1时。“作为科技进步的产物，全面采用原子时，意味着人们可以完全摆脱地球自转与日月更替，孤独地奔跑在向前的路上。”，因此需要用<strong>闰秒</strong>进行修正。就最近国际电信联盟的投票结679C而言，<strong>闰秒</strong>得以保留，<code>UTC</code>依然作为公认的国际标准时间。</p>
<p>​		除了上面的<strong>格林尼治时间</strong>（<code>GMT</code>）、<strong>原子时</strong>（<code>TAI</code>）、<strong>世界时</strong>（<code>UTC</code>），还有一些其他时间例如：</p>
<p>​		- <strong>恒星时</strong>（<code>ST</code>:<code>Siderreal Time</code>）：以恒星为基础的相对于原子时不十分精准的时间；</p>
<p>​		- <strong>太阳时</strong>（<code>Solar Time</code>）：以太阳为基础的相对于原子时不十分精准的时间；</p>
<p>​		- <strong>地方时</strong>（<code>Local Time</code>）：各个地方的太阳时</p>
<p>​		- <strong>历书时</strong>（<code>ET</code>：<code>Ephemeris Time</code>）：已被原子时取代，描述天体运动的方程式中采用的时间﹐或天体历表中应用的时间。它是由天体力学的定律确定的均匀时间，又称牛顿时</p>
<h2 id="网络时间（NTP）协议"><a href="#网络时间（NTP）协议" class="headerlink" title="网络时间（NTP）协议"></a>网络时间（NTP）协议</h2><p>​		<code>NTP</code>(<code>Network Time Protocol</code>) 网络时间协议，工作在<code>UDP</code>的<code>123</code>端口上。是用来使计算机时间同步化的一种协议，它可以使计算机对其服务器或时钟源（如石英钟，GPS等等）做同步化，它可以提供高精准度的时间校正（局域网上与标准间差小于1毫秒，互联网上几十毫秒）<strong>，</strong>且可介由加密确认的方式来防止恶毒的协议攻击。</p>
<p>​		既然确定了<code>UTC</code>作为公认的国际标准时间。那如何保证时间的统一性和准确性，是按照A这台计算机的时间，还是按照B这台计算机的时间？这就需要用到网络时间协议，英文名称为<code>Network Time Protocol</code> ，简称<code>NTP</code>。通过该协议，可以把计算机的时钟同步到<code>UTC</code>，其精度在局域网内可达<code>0.1ms</code>，在互联网上绝大多数的地方其精度可以达到<code>1-50ms</code>。</p>
<p>​		在<code>NTP</code>中，时间按照服务器的等级传播，<code>Stratum-1</code>（我们一般称作一级服务器）为最高层，其时间源为标准<code>UTC</code>，该时间源可以来自外部，如<code>北斗</code>、<code>GPS</code>，也可以来自该服务器内部的原子钟。而<code>Stratum-2</code>（二级服务器）则从<code>Stratum-1</code>获取时间，<code>Stratum-3</code>从<code>Stratum-2</code>获取时间，以此类推，但<code>Stratum</code>层的总数最多不超过15层<strong>。</strong>为防止单点故障，每一级服务器都应该有多台，且数量一般为奇数，以便于下级服务器决策。</p>
<p>​		在<code>NTP</code>协议中，下级服务器在指定的轮询时间范围（如<code>64</code>秒至<code>1024</code>秒）内，向上一级服务器通过<code>UDP123</code>端口发送报文，进行探测，根据多次的探测结果进行时间校准。在默认配置下，时差在<code>128ms</code>以内，会分成多步慢慢调整<strong>；</strong>时差在<code>128ms</code>至<code>1000ms</code>，时间会一次性调整到位；时差超过<code>1000ms</code>，<code>NTP</code>会判定为当前环境不可靠，而中止运行。有些系统支持对以上参数进行调整，但有些系统则不可以。</p>
<p>​		正如之前所提到的，在对时间精确度要求很高的环境下进行闰秒的调整绝非易事，其最主要的原则就是不能发生时间跳变。在一个复杂网络环境中，不是所有的系统或设备都能支持参数调整，也就是说在向上级服务器探测时间时，时差不能超过<code>128ms</code>。所以闰秒调整需分多步进行，以保证每一级服务时间差不超过<code>128ms</code>。受到网络传输延时的影响，在广域网内，越远端的服务器（如<code>Stratum-15</code>）的时间波动越明显，因此，在确认闰秒分步调整时，需要考虑这方面的因素，合理确定分步范围。根据笔者最近两次的调整经验，在3层服务器架构中，一次闰秒调整需分13次至15次完成。</p>
<p>​		<code>NTP</code>有足够的容错性，除之前提到的<code>1000ms</code>中止运行外，还能根据算法，选用可靠的上一级服务器。当无法正确获得上一级服务器时间时，<code>NTP</code>将使用自身的时间设备（普通设备一般为晶振，一级服务器一般为原子钟）提供服务。</p>
<h2 id="NTP校时方式"><a href="#NTP校时方式" class="headerlink" title="NTP校时方式"></a>NTP校时方式</h2><p>​		时间服务器可以利用以下三种方式与其他服务器对时：<code>broadcast/multicast</code>，<code>client/server</code>和<code>Symmetric</code>。</p>
<p>​		（1）<strong>broadcast&#x2F;multicast</strong>：主要适用于局域网的环境，时间服务器周期性的以广播的方式，将时间信息传送给其他网路中的时间服务器，其时间仅会有少许的延迟，而且配置非常的简单。但是此方式的精确度并不高，对时间精确度要求不是很高的情况下可以采用。</p>
<p>​		（2）<strong>Symmetric</strong>：一台服务器可以从远端时间服务器获取时钟，如果需要也可提供时间信息给远端的时间服务器<strong>。</strong>此一方式适用于配置冗余的时间服务器，可以提供更高的精确度给主机。</p>
<p>​		（3）<strong>client&#x2F;server</strong>：方式与symmetric方式比较相似，只是不提供给其他时间服务器时间信息，此方式适用于一台时间服务器接收上层时间服务器的时间信息，并提供时间信息给下层的用户。</p>
<p>​		上述三种方式，时间信息的传输都使用UDP协议。时间服务器利用一个过滤演算法，及先前八个校时资料计算出时间参考值，判断后续校时包的精确性，一个相对较高的离散程度，表示一个对时资料的可信度比较低<strong>。</strong>仅从一个时间服务器获得校时信息，不能校正通讯过程所造成的时间偏差，而同时与许多时间服务器通信校时，就可利用过滤算法找出相对较可靠的时间来源，然后采用它的时间来校时。</p>
<h1 id="ntpdate与chrony"><a href="#ntpdate与chrony" class="headerlink" title="ntpdate与chrony"></a>ntpdate与chrony</h1><p>​		一般来说在中大型的网络环境中时间服务器基本上来说是必须的,在内网中建立一台时间服务器,其他的服务器都来此服务器同步时间。 像虚拟机如果关机或者是被暂停了之后再开机的时候时间还是原来的时间,这个时候就需要从新同步时间。如果时间不对可能对业务环境有影响。 比如说像一些<strong>分布式系统</strong>、<strong>集群</strong>等相互协调工作的应用都需要时间同步服务来确保每个服务器的时间是一致的。 <code>ntpd</code>、<code>chrony</code>这两款时间管理服务应该怎样选型呢？<code>centos7.4</code>之前的系统默认是提供的<code>ntpd</code>来作为时间管理服务的,之后就是<code>chrony</code>。其实两个都差不多,看个人喜好。</p>
<h2 id="手工修改系统时间与时区"><a href="#手工修改系统时间与时区" class="headerlink" title="手工修改系统时间与时区"></a>手工修改系统时间与时区</h2><ol>
<li><p>修改时间</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 1、设置时间</span></span><br><span class="line"><span class="built_in">date</span> -s <span class="string">&#x27;2023-03-13 12:00:00&#x27;</span></span><br><span class="line"><span class="comment"># 或则</span></span><br><span class="line">hwclock --<span class="built_in">set</span> --<span class="built_in">date</span> <span class="string">&#x27;2023-03-13 12:00:00&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2、以系统时钟为准，校正硬件时间（一般执行该命令）</span></span><br><span class="line">hwclock -w</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3、以硬件时钟稳准，校正系统时间</span></span><br><span class="line">hwclock -s</span><br></pre></td></tr></table></figure>


</li>
<li><p>设置时区</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 1、查看日期时间以及NTP状态（包括时区）</span></span><br><span class="line">[root@bogon <span class="built_in">local</span>]<span class="comment"># timedatectl</span></span><br><span class="line">      Local time: Mon 2023-03-13 16:21:31 CST</span><br><span class="line">  Universal time: Mon 2023-03-13 08:21:31 UTC</span><br><span class="line">        RTC time: Mon 2023-03-13 08:21:29</span><br><span class="line">       Time zone: Asia/Shanghai (CST, +0800)</span><br><span class="line">     NTP enabled: no</span><br><span class="line">NTP synchronized: no</span><br><span class="line"> RTC <span class="keyword">in</span> <span class="built_in">local</span> TZ: no</span><br><span class="line">      DST active: n/a</span><br><span class="line"><span class="comment">## 或者</span></span><br><span class="line">[root@bogon <span class="built_in">local</span>]<span class="comment"># ll /etc/localtime</span></span><br><span class="line">lrwxrwxrwx. 1 root root 35 Feb 10 11:53 /etc/localtime -&gt; ../usr/share/zoneinfo/Asia/Shanghai</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2、配置时区</span></span><br><span class="line"><span class="comment">## 查看支持哪些时区</span></span><br><span class="line">timedatectl list-timezones |more</span><br><span class="line"><span class="comment">## 配置时区</span></span><br><span class="line">timedatectl set-timezone Asia/Shanghai</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看时间同步状态</span></span><br><span class="line">timedatectl status</span><br><span class="line"></span><br><span class="line"><span class="comment"># 开启网络时间同步（配合下面ntpdate与chrony使用）</span></span><br><span class="line">timedatectl set-ntp <span class="literal">true</span></span><br></pre></td></tr></table></figure></li>
</ol>
<h2 id="ntpdate同步互联网时间"><a href="#ntpdate同步互联网时间" class="headerlink" title="ntpdate同步互联网时间"></a>ntpdate同步互联网时间</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 1、安装ntpdate</span></span><br><span class="line">yum install ntpdate -y</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2、一次同步时间</span></span><br><span class="line">ntpdate 0.cn.pool.ntp.org</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3、定期同步系统时钟可以结合crontab进行使用</span></span><br></pre></td></tr></table></figure>

<p><em>注</em>：NTP地址列表：<a href="https://www.ntppool.org/zone/@">https://www.ntppool.org/zone/@</a></p>
<h2 id="chrony同步互联网时间"><a href="#chrony同步互联网时间" class="headerlink" title="chrony同步互联网时间"></a>chrony同步互联网时间</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 1、安装chrony</span></span><br><span class="line">yum install chrony -y</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2、配置（/etc/chrony.conf）</span></span><br><span class="line"><span class="comment">#==========================================================================</span></span><br><span class="line"><span class="comment">#(1) server - 可用于时钟服务器，iburst 选项当服务器可达时，发送一个八个数据包而不是通常的一个数据包。 包间隔通常为2秒,可加快初始同步速度</span></span><br><span class="line"><span class="comment">#(2) driftfile - 根据实际时间计算出计算机增减时间的比率，将它记录到一个文件中，会在重启后为系统时钟作出补偿</span></span><br><span class="line"><span class="comment">#(3) rtcsync - 启用内核模式，系统时间每11分钟会拷贝到实时时钟（RTC）</span></span><br><span class="line"><span class="comment">#(4) allow/deny - 指定一台主机、子网，或者网络以允许或拒绝访问本服务器</span></span><br><span class="line"><span class="comment">#(5) cmdallow / cmddeny - 可以指定哪台主机可以通过chronyd使用控制命令</span></span><br><span class="line"><span class="comment">#(6) bindcmdaddress - 允许chronyd监听哪个接口来接收由chronyc执行的命令</span></span><br><span class="line"><span class="comment">#(7) makestep - 通常chronyd将根据需求通过减慢或加速时钟，使得系统逐步纠正所有时间偏差。在某些特定情况下，系统时钟可能会漂移过快，导致该调整过程消耗很长的时间来纠正系统时钟。该指令强制chronyd在调整期大于某个域值时调整系统时钟</span></span><br><span class="line"><span class="comment">#(8) local stratum 10 - 即使server指令中时间服务器不可用，也允许将本地时间作为标准时间授时给其它客户端</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用 pool.ntp.org 项目中的公共服务器。以server开，理论上想添加多少时间服务器都可以。</span></span><br><span class="line"><span class="comment"># Use public servers from the pool.ntp.org project.</span></span><br><span class="line"><span class="comment"># Please consider joining the pool (http://www.pool.ntp.org/join.html).</span></span><br><span class="line"><span class="comment"># 可以用pool,server或者local关键字具体用途可以查看下面文档</span></span><br><span class="line">server 0.cn.pool.ntp.org iburst</span><br><span class="line">server 1.cn.pool.ntp.org iburst</span><br><span class="line">server 2.cn.pool.ntp.org iburst</span><br><span class="line">server 3.cn.pool.ntp.org iburst</span><br><span class="line"></span><br><span class="line"><span class="comment"># 根据实际时间计算出服务器增减时间的比率，然后记录到一个文件中，在系统重启后为系统做出最佳时间补偿调整。</span></span><br><span class="line"><span class="comment"># Record the rate at which the system clock gains/losses time.</span></span><br><span class="line">driftfile /var/lib/chrony/drift</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果系统时钟的偏移量大于1秒，则允许系统时钟在前三次更新中步进。</span></span><br><span class="line"><span class="comment"># Allow the system clock to be stepped in the first three updates if its offset is larger than 1 second.</span></span><br><span class="line">makestep 1.0 3</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启用实时时钟（RTC）的内核同步。</span></span><br><span class="line"><span class="comment"># Enable kernel synchronization of the real-time clock (RTC).</span></span><br><span class="line">rtcsync</span><br><span class="line"></span><br><span class="line"><span class="comment"># 通过使用 hwtimestamp 指令启用硬件时间戳</span></span><br><span class="line"><span class="comment"># Enable hardware timestamping on all interfaces that support it.</span></span><br><span class="line"><span class="comment">#hwtimestamp *</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Increase the minimum number of selectable sources required to adjust the system clock.</span></span><br><span class="line"><span class="comment">#minsources 2</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定 NTP 客户端地址，以允许或拒绝连接到扮演时钟服务器的机器(作为客户端可以使用该配置)</span></span><br><span class="line"><span class="comment"># Allow NTP client access from local network.</span></span><br><span class="line"><span class="comment">#allow 192.168.0.0/16</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Serve time even if not synchronized to a time source.</span></span><br><span class="line"><span class="comment">#local stratum 10</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定包含 NTP 身份验证密钥的文件。</span></span><br><span class="line"><span class="comment"># Specify file containing keys for NTP authentication.</span></span><br><span class="line"><span class="comment">#keyfile /etc/chrony.keys</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定日志文件的目录。</span></span><br><span class="line"><span class="comment"># Specify directory for log files.</span></span><br><span class="line">logdir /var/log/chrony</span><br><span class="line"></span><br><span class="line"><span class="comment"># 选择日志文件要记录的信息。</span></span><br><span class="line"><span class="comment"># Select which information is logged.</span></span><br><span class="line"><span class="comment">#log measurements statistics tracking</span></span><br><span class="line"><span class="comment">#==========================================================================</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 3、设置开机启动</span></span><br><span class="line">systemctl <span class="built_in">enable</span> chronyd</span><br><span class="line">systemctl start chronyd</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 4、查看 ntp_servers</span></span><br><span class="line">chronyc sources -v</span><br><span class="line"><span class="comment">## 查看 ntp_servers 状态</span></span><br><span class="line">chronyc sourcestats -v</span><br><span class="line"><span class="comment">## 查看 ntp_servers 是否在线</span></span><br><span class="line">chronyc activity -v</span><br><span class="line"><span class="comment">## 查看 ntp 详细信息</span></span><br><span class="line">chronyc tracking -v</span><br><span class="line"><span class="comment">## 强制同步下系统时钟</span></span><br><span class="line">chronyc -a makestep</span><br></pre></td></tr></table></figure>



<p><em>注</em>：<strong>Chrony 详细配置</strong>：<a href="https://chrony.tuxfamily.org/doc/4.1/chrony.conf.html">https://chrony.tuxfamily.org/doc/4.1/chrony.conf.html</a></p>
<p>​		<strong>NTP地址列表</strong>：<a href="https://www.ntppool.org/zone/@">https://www.ntppool.org/zone/@</a></p>
]]></content>
      <categories>
        <category>运维安装</category>
      </categories>
  </entry>
  <entry>
    <title>Confluence、Jira安装破解（2023-02）</title>
    <url>/2023/02/12/Confluence%E3%80%81Jira%E5%AE%89%E8%A3%85%E7%A0%B4%E8%A7%A3%EF%BC%882023-02%EF%BC%89/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><p>[toc]</p>
<h1 id="安装准备"><a href="#安装准备" class="headerlink" title="安装准备"></a>安装准备</h1><p><code>JDK 1.8</code></p>
<p><code>Confluence</code>下载地址：<a href="https://product-downloads.atlassian.com/software/confluence/downloads/atlassian-confluence-7.19.5.tar.gz">https://product-downloads.atlassian.com/software/confluence/downloads/atlassian-confluence-7.19.5.tar.gz</a></p>
<p><code>Jira</code>下载地址：<a href="https://product-downloads.atlassian.com/software/jira/downloads/atlassian-jira-software-9.5.1.tar.gz">https://product-downloads.atlassian.com/software/jira/downloads/atlassian-jira-software-9.5.1.tar.gz</a></p>
<p><code>MysqlDriver</code>：<a href="https://cdn.mysql.com/archives/mysql-connector-java-5.1/mysql-connector-java-5.1.49.zip">https://cdn.mysql.com/archives/mysql-connector-java-5.1/mysql-connector-java-5.1.49.zip</a></p>
<p><code>Mysql</code>：<a href="https://cdn.mysql.com/archives/mysql-5.7/mysql-5.7.40-1.el7.x86_64.rpm-bundle.tar%EF%BC%88[%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E7%9C%8B%E4%BB%A5%E5%89%8D%E5%8D%9A%E5%AE%A2](Centos7%E5%AE%89%E8%A3%85mysql)%EF%BC%89">https://cdn.mysql.com/archives/mysql-5.7/mysql-5.7.40-1.el7.x86_64.rpm-bundle.tar（[安装教程看以前博客](Centos7安装mysql)）</a></p>
<p>下载破解文件：<code>atlassian-agent-v1.3.1.zip</code>里的<code>atlassian-agent.jar</code></p>
<h1 id="安装与破解"><a href="#安装与破解" class="headerlink" title="安装与破解"></a>安装与破解</h1><h2 id="解压文件"><a href="#解压文件" class="headerlink" title="解压文件"></a>解压文件</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tar -zxvf atlassian-confluence-7.19.5.tar.gz</span><br><span class="line">tar -zxvf atlassian-jira-software-9.5.1.tar.gz</span><br></pre></td></tr></table></figure>



<h2 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 1、重命名文件夹名</span></span><br><span class="line"><span class="built_in">mv</span> atlassian-confluence-7.19.5 confluence-7.19.5</span><br><span class="line"><span class="built_in">mv</span> atlassian-jira-software-9.5.1 jira-software-9.5.1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2、设置数据目录</span></span><br><span class="line"><span class="built_in">cd</span> 安装目录/confluence-7.19.5</span><br><span class="line"><span class="built_in">mkdir</span> data</span><br><span class="line"><span class="built_in">cd</span> 安装目录/jira-software-9.5.1</span><br><span class="line"><span class="built_in">mkdir</span> data</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 3、配置数据目录</span></span><br><span class="line">vi 安装目录/confluence-7.19.5/confluence/WEB-INF/classes/confluence-init.properties</span><br><span class="line"><span class="comment">### 设置confluence.home=安装目录/confluence-7.19.5/data</span></span><br><span class="line"></span><br><span class="line">vi 安装目录/jira-software-9.5.1/atlassian-jira/WEB-INF/classe/jira-application.properties</span><br><span class="line"><span class="comment">### 设置jira.home=安装目录/jira-software-9.5.1/data</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 4、添加数据库驱动</span></span><br><span class="line"><span class="comment"># 将mysql驱动包放入:安装目录/confluence-7.19.5/confluence/WEB-INF/lib与安装目录/jira-software-9.5.1/atlassian-jira/WEB-INF/lib目录下</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h2 id="修改启动端口与访问路径"><a href="#修改启动端口与访问路径" class="headerlink" title="修改启动端口与访问路径"></a>修改启动端口与访问路径</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 配置端口</span></span><br><span class="line">vi 安装目录/confluence-7.19.5/conf/server.xml</span><br><span class="line">vi 安装目录/jira-software-9.5.1/conf/server.xml</span><br><span class="line"><span class="comment">#### 1、配置未注释的标签Server -&gt; Service -&gt; Connector,配置端口号8090，8070等</span></span><br><span class="line"><span class="comment">#### 2、配置标签Server -&gt; Service -&gt; Engine -&gt; Host -&gt; Context设置属性path=&quot;confluence&quot;或者path=&quot;jira&quot;</span></span><br><span class="line"><span class="comment">#### 3、配置顶层标签 Server的端口 port (自定义)，防止关闭端口冲突</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>









<h2 id="启动与破解："><a href="#启动与破解：" class="headerlink" title="启动与破解："></a>启动与破解：</h2><h3 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 先安装配置好JDK的JAVA_HOME与CLASSPATH</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 1、添加破解文件到一个不进行删除的目录或者放到软件安装包下创建一个libext目录</span></span><br><span class="line"><span class="built_in">cd</span> 安装目录/confluence-7.19.5/ </span><br><span class="line">make libext</span><br><span class="line"><span class="built_in">cd</span> 安装目录/jira-software-9.5.1/</span><br><span class="line">make libext</span><br><span class="line"><span class="comment"># cp atlassian-agent.jar  安装目录/libext</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2、设置环境变量</span></span><br><span class="line">vi 安装目录/confluence-7.19.5/bin/setenv.sh</span><br><span class="line">vi 安装目录/jira-software-9.5.1/bin/setenv.sh</span><br><span class="line"><span class="comment">### CATALINA_OPTS=&quot;-javaagent:安装目录/jira-software-9.5.1/libext/atlassian-agent.jar $&#123;CATALINA_OPTS&#125;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 3、启动服务</span></span><br><span class="line"><span class="built_in">cd</span>  安装目录/confluence-7.19.5/bin</span><br><span class="line">chmow 755 *.sh</span><br><span class="line">./start-confluence.sh</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span>  安装目录/jira-software-9.5.1/bin</span><br><span class="line">chmow 755 *.sh</span><br><span class="line">./start-jira.sh</span><br></pre></td></tr></table></figure>





<h3 id="破解"><a href="#破解" class="headerlink" title="破解"></a>破解</h3><p>注意confluence与jira的服务端口记得从防火墙打开</p>
<p><code>firewall-cmd --zone=public --add-port=xxx/tcp --permanent  &amp;&amp; firewall-cmd --reload </code></p>
<p>1、打开浏览器访问服务，系统会进行自动化配置：</p>
<p><a href="http://IP地址:端口号/confluence">http://IP地址:端口号/confluence</a> </p>
<p><a href="http://IP地址:端口号/jira">http://IP地址:端口号/jira</a></p>
<p>注意：需要提前创建好confluence与jira各自的数据库（无需添加表结构）与用户，confluence是先破解然后配置数据库，jira是先配置数据库再破解。</p>
<p>使用window生成激活码</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">解压atlassian-agent-v1.3.1.zip,使用命令行启动解压后的atlassian-agent.jar</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">参数详解可以使用java -jar atlassian-agent.jar查看</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">## -p 指定激活产品</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">####             [crowd: Crowd]</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">####             [jsm: JIRA Service Management]</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">####             [questions: Questions plugin for Confluence]</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">####             [crucible: Crucible]</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">####             [capture: Capture plugin for JIRA]</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">####             [conf: Confluence]</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">####             [training: Training plugin for JIRA]</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">####             [*: Third party plugin key, looks like: com.foo.bar]</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">####             [bitbucket: Bitbucket]</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">####             [tc: Team Calendars plugin for Confluence]</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">####             [bamboo: Bamboo]</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">####             [fisheye: FishEye]</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">####             [portfolio: Portfolio plugin for JIRA]</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">####             [jc: JIRA Core]</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">####             [jsd: JIRA Service Desk]</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">####             [jira: JIRA Software(common jira)]</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">##</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">## -m 指定公司邮箱</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">## -n 指定公司名称</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">## -o 指定组织：可以使用公司地址</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">## -s 指定</span></span></span><br><span class="line">java -jar atlassian-agent.jar -p conf -m aaa@bbb.com -n my_name -o https://zhile.io -s B0RG-I5H5-HKZG-Y8HR</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>将生成的激活码填入激活码输入框激活即可</p>
]]></content>
      <categories>
        <category>运维安装</category>
      </categories>
  </entry>
  <entry>
    <title>Hadoop 3.3.4安装</title>
    <url>/2023/03/10/Hadoop%203.3.4%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><p>[toc]</p>
]]></content>
      <categories>
        <category>运维安装</category>
        <category>分布式存储与计算</category>
      </categories>
  </entry>
  <entry>
    <title>Go语言学习</title>
    <url>/2023/03/10/Go%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><p>[toc]</p>
<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><h1 id="开发环境安装"><a href="#开发环境安装" class="headerlink" title="开发环境安装"></a>开发环境安装</h1><h1 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h1><h2 id="变量与常量"><a href="#变量与常量" class="headerlink" title="变量与常量"></a>变量与常量</h2><h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><p>​		变量是所有程序语言的最基本做成元素。它实际针对数据存储空间的命名，程序可以通过变量进行申请存储空间，然后通过变量名来操作对应的存储空间。Go语言中的变量使用方式与C语言很类似，但具备更强大的灵活性。</p>
<ol>
<li><p><strong>变量声明</strong></p>
<p>Go语言使用关键字var来进行变量声明，而变量的类型信息放在变量名之后，格式： <code>var name type</code>；各种示例如下：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> v1 <span class="type">int</span>       <span class="comment">//整型</span></span><br><span class="line"><span class="keyword">var</span> v2 <span class="type">string</span>    <span class="comment">//字符串</span></span><br><span class="line"><span class="keyword">var</span> v3 [<span class="number">5</span>]<span class="type">int</span>    <span class="comment">//数组</span></span><br><span class="line"><span class="keyword">var</span> v4 []<span class="type">int</span>     <span class="comment">//切片</span></span><br><span class="line"><span class="keyword">var</span> v5 <span class="keyword">struct</span> &#123;  <span class="comment">//结构体</span></span><br><span class="line">    f <span class="type">int</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> v6 *<span class="type">int</span>      <span class="comment">//指向整型的指针</span></span><br><span class="line"><span class="keyword">var</span> v7 <span class="keyword">map</span>[String]<span class="type">int</span>  <span class="comment">//Map,key为String，value为int类型</span></span><br><span class="line"><span class="keyword">var</span> v8 <span class="function"><span class="keyword">func</span><span class="params">(a <span class="type">int</span>)</span></span> <span class="type">int</span>  <span class="comment">//学Java的觉得很新颖吧，变量指向了一个函数，输入值为int类型，返回值为int类型</span></span><br><span class="line"><span class="keyword">var</span>(                    <span class="comment">//仅使用一个var关键字声明多个变量</span></span><br><span class="line">    v9 <span class="type">int</span></span><br><span class="line">    v10 <span class="type">string</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure>


</li>
<li><p><strong>初始化变量</strong></p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">//1、声明后初始化</span></span><br><span class="line"><span class="keyword">var</span> v1 <span class="type">int</span></span><br><span class="line">v1 = <span class="number">10</span></span><br><span class="line"><span class="comment">//2、直接初始化</span></span><br><span class="line"><span class="keyword">var</span> v2 <span class="type">int</span> = <span class="number">10</span></span><br><span class="line"><span class="comment">//3、直接赋值不进行类型声明，编译器可以自动推导V3类型</span></span><br><span class="line"><span class="keyword">var</span> v3 = <span class="number">10</span></span><br><span class="line"><span class="comment">//4、省略var关键字(禁止var声明变量后使用下面方法赋值)，编译器可以自动推导V4类型</span></span><br><span class="line">v4 := <span class="number">10</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>


</li>
<li><p><strong>变量赋值</strong></p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">//1、直接赋值</span></span><br><span class="line"><span class="keyword">var</span> v1 <span class="type">int</span></span><br><span class="line">v1 = <span class="number">111</span></span><br><span class="line"><span class="comment">//2、多重赋值（变量交换）</span></span><br><span class="line">i,j=j,i</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>匿名变量</strong></p>
<p> 当函数存在多个返回值，而我们只需要关注其中部分返回值时，则可以使用匿名变量来接收无用的返回值.例如：</p>
<p><code>func GetPath() (firstReturn,secondReturn,lastReturn string)</code>当我们仅需要获取lastReturn字段时可以使用下面方式<code>_,_,lastReturn := GetPath()</code></p>
</li>
<li><p><strong>常量</strong></p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">//使用const关键字进行声明</span></span><br><span class="line"><span class="keyword">const</span> Pi <span class="type">float64</span> = <span class="number">3.1415926</span></span><br><span class="line"><span class="keyword">const</span>(</span><br><span class="line">	size <span class="type">int64</span> = <span class="number">1024</span></span><br><span class="line">    path <span class="type">string</span> = <span class="string">&quot;path&quot;</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">const</span> c1,c2,c3 = <span class="number">3</span>,<span class="number">4</span>,<span class="string">&quot;foo&quot;</span></span><br><span class="line"><span class="keyword">const</span> c4,c5 <span class="type">int64</span> = <span class="number">3</span>,<span class="number">4</span></span><br><span class="line"><span class="comment">// 编译期运算的常量表达式</span></span><br><span class="line"><span class="keyword">const</span> c6 = <span class="number">1</span>&lt;&lt;<span class="number">3</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 预定义常量</span></span><br><span class="line"><span class="keyword">const</span> (</span><br><span class="line">	c7 = <span class="literal">iota</span>     <span class="comment">//c7=0</span></span><br><span class="line">    c8 = <span class="literal">iota</span>     <span class="comment">//c8=1</span></span><br><span class="line">    c9 = <span class="literal">iota</span>     <span class="comment">//c9=2</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">const</span> (</span><br><span class="line">    c10 = <span class="number">1</span> &lt;&lt; <span class="literal">iota</span>     <span class="comment">//c10=1</span></span><br><span class="line">    c11 = <span class="number">1</span> &lt;&lt; <span class="literal">iota</span>     <span class="comment">//c10=2</span></span><br><span class="line">    c12 = <span class="number">1</span> &lt;&lt; <span class="literal">iota</span>     <span class="comment">//c10=4</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">const</span> (</span><br><span class="line">    c13 = <span class="number">10</span> * <span class="literal">iota</span>     <span class="comment">//c13=0</span></span><br><span class="line">    c14                 <span class="comment">//c14=10</span></span><br><span class="line">    c15                 <span class="comment">//c14=20</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">//枚举(常量的变体)</span></span><br><span class="line"><span class="keyword">const</span> (</span><br><span class="line">	Sunday = <span class="literal">iota</span></span><br><span class="line">    Monday</span><br><span class="line">    Tuesday</span><br><span class="line">    Wednesday</span><br><span class="line">    Thursday</span><br><span class="line">    Friday</span><br><span class="line">    Saturday</span><br><span class="line">    numbersOfDays</span><br><span class="line">)</span><br></pre></td></tr></table></figure>


</li>
<li><p><strong>内置类型</strong></p>
<p><em><strong>基础类型</strong></em></p>
<ul>
<li><p>布尔类型：bool</p>
</li>
<li><p>整型：int8，byte，int16，uint，uintptr等</p>
</li>
<li><p>浮点型：float32，float64</p>
</li>
<li><p>复数类型：complex64，complex128</p>
</li>
<li><p>字符串：string</p>
</li>
<li><p>字符类型：rune</p>
</li>
<li><p>错误类型：error</p>
</li>
</ul>
<p><em><strong>复合类型</strong></em></p>
<ul>
<li>指针（pointer）</li>
<li>数组（array）</li>
<li>切片（slice）</li>
<li>字典（map）</li>
<li>通道（chan）</li>
<li>结构体（struct）</li>
<li>接口（interface）</li>
</ul>
</li>
</ol>
<table>
<thead>
<tr>
<th>类型</th>
<th>长度（字节）</th>
<th>值范围</th>
</tr>
</thead>
<tbody><tr>
<td>int8</td>
<td>1</td>
<td>-128~127</td>
</tr>
<tr>
<td>uint8（即byte）</td>
<td>1</td>
<td>0~255</td>
</tr>
<tr>
<td>int16</td>
<td>2</td>
<td>-32768~32767</td>
</tr>
<tr>
<td>uint16</td>
<td>2</td>
<td>0~65535</td>
</tr>
<tr>
<td>int32</td>
<td>4</td>
<td>-2147483648~2147483647</td>
</tr>
<tr>
<td>uint32</td>
<td>4</td>
<td>0~4294967295</td>
</tr>
<tr>
<td>int64</td>
<td>8</td>
<td>-9223372036854775808~9223372036854775807</td>
</tr>
<tr>
<td>uint64</td>
<td>8</td>
<td>0~18446744073709551615</td>
</tr>
<tr>
<td>int</td>
<td>平台相关</td>
<td>平台相关</td>
</tr>
<tr>
<td>uint</td>
<td>平台相关</td>
<td>平台相关</td>
</tr>
<tr>
<td>uintptr</td>
<td>同指针</td>
<td>在32位平台下为4字节，64位平台下为8字节</td>
</tr>
</tbody></table>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 1、布尔类型</span></span><br><span class="line"><span class="keyword">var</span> b1 <span class="type">bool</span></span><br><span class="line">b1 = <span class="literal">true</span></span><br><span class="line">v2 := (<span class="number">1</span>==<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 2、整型</span></span><br><span class="line"><span class="keyword">var</span> v1 <span class="type">int32</span></span><br><span class="line">v2 := <span class="number">64</span></span><br><span class="line">v1 = v2        <span class="comment">//编译错误，v2会被自动推导为int类型，所以无法将int直接赋值给int32</span></span><br><span class="line">v1 = <span class="type">int32</span>(v2) <span class="comment">//编译通过</span></span><br><span class="line"><span class="comment">// 数值运算符：+、-、*、/、%</span></span><br><span class="line"><span class="comment">// 比较运算符：&gt;、&lt;、==、&gt;=、&lt;=、!=</span></span><br><span class="line"><span class="comment">// 位运算：x&lt;&lt;y、x&gt;&gt;y、x^y、x&amp;y、x|y、^x</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//3、浮点型</span></span><br><span class="line"><span class="keyword">var</span> fv1 <span class="type">float32</span></span><br><span class="line">fv1 = <span class="number">12</span></span><br><span class="line">fv2 := <span class="number">10.0</span>  <span class="comment">//类型被自动推导为float64</span></span><br><span class="line">fv1 = <span class="type">float32</span>(fv2)</span><br><span class="line"></span><br><span class="line"><span class="comment">//4、复数类型</span></span><br><span class="line"><span class="keyword">var</span> c1 <span class="type">complex64</span></span><br><span class="line">c1 = <span class="number">1.4</span> + <span class="number">13i</span></span><br><span class="line">c2 := <span class="number">3.2</span> + <span class="number">8i</span></span><br><span class="line">c3 := <span class="built_in">complex</span>(<span class="number">2.3</span> , <span class="number">8</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//5、字符串</span></span><br><span class="line"><span class="keyword">var</span> str <span class="type">string</span></span><br><span class="line">str = <span class="string">&quot;Hello Go&quot;</span></span><br><span class="line">ch = str[<span class="number">0</span>]               <span class="comment">//取第一个字符</span></span><br><span class="line">size := <span class="built_in">len</span>(str)          <span class="comment">//获取字符串长度</span></span><br><span class="line">str[<span class="number">0</span>] = <span class="string">&#x27;X&#x27;</span>              <span class="comment">//编译错误：字符串的内容不能在初始化后被修改</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//遍历字符串</span></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i&lt;<span class="built_in">len</span>(str); i++ &#123;</span><br><span class="line">    fmt.Println(i,str[i])</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//6、字符类型（byte、rune）</span></span><br><span class="line"><span class="comment">// byte 实际上时uint8的别名，代表UTF-8字符串的单个字节的值</span></span><br><span class="line"><span class="comment">// rune 代表单个Unicode字符</span></span><br><span class="line"><span class="comment">// unicode/utf8包也提供了UTF和Unicode之间的转换</span></span><br><span class="line"><span class="comment">// Go语言的多数API都假设字符串为UTF-8编码，尽管Unicode字符在标准库中由支持，但实际较少使用</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>





<h2 id="容器"><a href="#容器" class="headerlink" title="容器"></a>容器</h2><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">//1、数组</span></span><br><span class="line">[<span class="number">8</span>] <span class="type">byte</span></span><br><span class="line">[<span class="number">2</span>*N] <span class="keyword">struct</span>&#123;x,y <span class="type">int32</span>&#125;    <span class="comment">//结构体数组</span></span><br><span class="line">[<span class="number">64</span>]*<span class="type">float64</span>               <span class="comment">//浮点数指针数组</span></span><br><span class="line">[<span class="number">5</span>][<span class="number">10</span>]<span class="type">int</span>                 <span class="comment">//int二位数组</span></span><br><span class="line">[<span class="number">8</span>][<span class="number">3</span>][<span class="number">2</span>]<span class="type">float32</span>           <span class="comment">//32位浮点数三维数组</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//2、数组切片</span></span><br><span class="line"><span class="comment">//切片数据结构可以抽象为一下3个变量：一个指向原生数组的指针；数组切片中的元素个数；数组切片已分配的存储空间</span></span><br><span class="line"><span class="comment">//（1）基于数组创建切片</span></span><br><span class="line"><span class="keyword">var</span> arrayInt [<span class="number">10</span>]<span class="type">int</span> = [<span class="number">10</span>]<span class="type">int</span>&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>&#125;</span><br><span class="line"><span class="keyword">var</span> slice1 []<span class="type">int</span> = arrayInt[:<span class="number">5</span>]</span><br><span class="line"><span class="keyword">for</span> _,v := <span class="keyword">range</span> slice1 &#123;</span><br><span class="line">    fmt.Println(v)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//（2）直接创建</span></span><br><span class="line"><span class="keyword">var</span> slice2 := <span class="built_in">make</span>([]<span class="type">int</span>, <span class="number">5</span>)      <span class="comment">//创建一个初始元素个数为5的数组切片，元素初始值为0</span></span><br><span class="line"><span class="keyword">var</span> slice3 := <span class="built_in">make</span>([]<span class="type">int</span>, <span class="number">5</span>, <span class="number">10</span>)  <span class="comment">//创建一个初始元素个数为5的数组切片，元素初始值为0，并预留10个元素的存储空间</span></span><br><span class="line"><span class="keyword">var</span> slice4 := []<span class="type">int</span>&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;    <span class="comment">//直接创建并初始化包含5个元素的数组切片</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i:=<span class="number">0</span>; i &lt; <span class="built_in">len</span>(slice4); i++&#123;</span><br><span class="line">    fmt.Println(i+<span class="string">&quot;:&quot;</span> + slice4[i])</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> i, v := <span class="keyword">range</span> slice4 &#123;</span><br><span class="line">    fmt.Println(i + <span class="string">&quot;:&quot;</span> + v)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//（3）动态增减元素</span></span><br><span class="line">slice5 := <span class="built_in">make</span>([]<span class="type">int</span>,<span class="number">5</span>,<span class="number">10</span>)</span><br><span class="line">fmt.Println(<span class="built_in">len</span>(slice5))</span><br><span class="line">fmt.Println(<span class="built_in">cap</span>(slice5))</span><br><span class="line"></span><br><span class="line">slice5 = <span class="built_in">append</span>(slice5, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line">slice6 := []<span class="type">int</span>&#123;<span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>&#125;</span><br><span class="line">slice5 = <span class="built_in">append</span>(slice5, slice6...)  <span class="comment">//...表示把slice6打散然后追加入slice5,不加...则表示将slice6追加到slice5(会编译出错，类型无法转换)</span></span><br><span class="line"></span><br><span class="line">slice5 = <span class="built_in">append</span>(slice5, <span class="number">8</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>)  <span class="comment">//此时slice5已经超过了其容量，数组切片会自动分配一块足够大的内存</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//（4）基于数组切片创建数组切片</span></span><br><span class="line">slice7 := []<span class="type">int</span>&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>&#125;</span><br><span class="line">slice8 := slice7[:<span class="number">3</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">//（5）内容复制</span></span><br><span class="line">slice9 := []<span class="type">int</span>&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>&#125;</span><br><span class="line">slice10 := []<span class="type">int</span>&#123;<span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">copy</span>(slice10, slice9)      <span class="comment">//复制slice9的前三个元素到slice2</span></span><br><span class="line"><span class="built_in">copy</span>(slice9, slice10)      <span class="comment">//复制slice10的3个元素到slice9的前三个位置</span></span><br><span class="line"></span><br><span class="line">slice11 := <span class="built_in">make</span>([]<span class="type">int</span>, <span class="number">2</span>, <span class="number">4</span>)</span><br><span class="line">slice11 = <span class="built_in">append</span>(slice11, <span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line">slice12 := []<span class="type">int</span>&#123;<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>&#125;</span><br><span class="line"><span class="built_in">copy</span>(slice11, slice12)    <span class="comment">//复制slice12的前4个元素到slice11(slice11的容量填满)</span></span><br><span class="line">fmt.Println(slice12)</span><br><span class="line"></span><br><span class="line"><span class="comment">//3、map</span></span><br><span class="line"><span class="comment">// （1）创建</span></span><br><span class="line">map1 = <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="type">string</span>] <span class="type">int</span>)       </span><br><span class="line">map2 = <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="type">string</span>] <span class="type">int</span>, <span class="number">100</span>)  <span class="comment">//指定map的初始容量</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// （2）初始化赋值</span></span><br><span class="line">map3 := <span class="keyword">map</span>[<span class="type">string</span>]<span class="type">int</span>&#123;<span class="string">&quot;test1&quot;</span>: <span class="number">1</span>, <span class="string">&quot;test2&quot;</span>: <span class="number">3</span>&#125;</span><br><span class="line">map3[<span class="string">&quot;test1&quot;</span>] = <span class="number">4</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// (3)删除元素</span></span><br><span class="line">map4 := <span class="keyword">map</span>[<span class="type">string</span>]<span class="type">int</span>&#123;<span class="string">&quot;test1&quot;</span>: <span class="number">1</span>, <span class="string">&quot;test2&quot;</span>: <span class="number">3</span>&#125;</span><br><span class="line"><span class="built_in">delete</span>(map4,<span class="string">&quot;test1&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// (4)查找元素</span></span><br><span class="line">map5 := <span class="keyword">map</span>[<span class="type">string</span>]<span class="type">int</span>&#123;<span class="string">&quot;test1&quot;</span>: <span class="number">1</span>, <span class="string">&quot;test2&quot;</span>: <span class="number">3</span>&#125;</span><br><span class="line">value,ok := map5[<span class="string">&quot;test1&quot;</span>]</span><br><span class="line"><span class="keyword">if</span> ok &#123;</span><br><span class="line">    fmt.Println(value)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>





<h2 id="流程控制"><a href="#流程控制" class="headerlink" title="流程控制"></a>流程控制</h2><p>关键字列表 :<code>if</code>，<code>else</code>，<code>switch</code>，<code>case</code>，<code>defalut</code>，<code>for</code>，<code>break</code>，<code>return</code>，<code>fallthrough</code>，<code>continue</code></p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">//1、条件语句</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">testIf</span><span class="params">(x <span class="type">int</span>)</span></span> <span class="type">int</span>&#123;</span><br><span class="line">    <span class="keyword">if</span> x == <span class="number">0</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> x == <span class="number">2</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">3</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">4</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//2、选择语句</span></span><br><span class="line"><span class="comment">//（1）左括号必须跟在switch条件同一行</span></span><br><span class="line"><span class="comment">//（2）条件表达式不限制为常量或整数</span></span><br><span class="line"><span class="comment">//（3）单个case中，可以出现多个结果选项</span></span><br><span class="line"><span class="comment">//（4）Go语言不需要break来明确退出case</span></span><br><span class="line"><span class="comment">//（5）只有case中明确添加fallthrough关键字，才会继续执行下一个case</span></span><br><span class="line"><span class="comment">//（6）switch可以不设置条件表达式，此情况下，整个switch结构类似if..else..结构</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">testSwitch</span><span class="params">(x <span class="type">int</span>)</span></span> &#123;        </span><br><span class="line">    <span class="keyword">switch</span> i &#123;                  </span><br><span class="line">        <span class="keyword">case</span> <span class="number">0</span> :                </span><br><span class="line">        	fmt.Println(<span class="string">&quot;0&quot;</span>)    <span class="comment">//不需要break操作</span></span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">        	fmt.Println(<span class="string">&quot;1&quot;</span>)</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">        	<span class="keyword">fallthrough</span></span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>:             <span class="comment">//可以合并多个条件</span></span><br><span class="line">        	fmt.Println(<span class="string">&quot;...&quot;</span>)</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">        	fmt.Println(<span class="string">&quot;???&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//3、循环语句</span></span><br><span class="line"><span class="comment">// a、左花括号必须与for语句同行</span></span><br><span class="line"><span class="comment">// b、允许在虚幻条件中定义和初始化变量，但是不支持以逗号分隔的多赋值语句，必须使用平行赋值的方式初始化多个变量（a,b,c:=0,1,2）</span></span><br><span class="line"><span class="comment">// c、支持continue与break来控制循环</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//(1)常规for循环</span></span><br><span class="line">sum := <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt;= <span class="number">10</span>; i++ &#123;</span><br><span class="line">	sum += i</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(sum)</span><br><span class="line"></span><br><span class="line"><span class="comment">//（2）类似while的for循环</span></span><br><span class="line">a := <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">	a++</span><br><span class="line">	<span class="keyword">if</span> a &gt;= <span class="number">10</span> &#123;</span><br><span class="line">		<span class="keyword">break</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(a)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//4、跳转语句</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">testGoto</span><span class="params">()</span></span> &#123;</span><br><span class="line">    i := <span class="number">0</span></span><br><span class="line">    FLAG:</span><br><span class="line">    i++</span><br><span class="line">    <span class="keyword">if</span> i&lt;<span class="number">10</span> &#123;</span><br><span class="line">        <span class="keyword">goto</span> FLAG</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><p>​		函数的构成：关键字func、函数名、参数列表、返回值、函数体、返回语句</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">//1、函数定义</span></span><br><span class="line"><span class="comment">//(1)无返回值</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">funcName1</span><span class="params">(a <span class="type">int</span>,b <span class="type">string</span>)</span></span> &#123;</span><br><span class="line">    <span class="comment">// TODO</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//(2)存在返回值(可一个，可多个)</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">funcName2</span><span class="params">(a <span class="type">int</span>,b <span class="type">string</span>)</span></span> <span class="type">int</span>,<span class="type">string</span> &#123;</span><br><span class="line">    <span class="comment">// TODO</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//(3)不定参数个数类型</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">funcName3</span><span class="params">(a ...<span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">    <span class="comment">// TODO</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//(4)不定参数传递</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">funcName4</span><span class="params">(a ...<span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">    funcName3(a[<span class="number">1</span>:]...)</span><br><span class="line">    funcName3(a...)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//(5)任意类型的不定参数</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">funcName5</span><span class="params">(a ...<span class="keyword">interface</span>&#123;&#125;)</span></span> &#123;</span><br><span class="line">    <span class="comment">//TODO</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//(6)返回参数接收</span></span><br><span class="line">m,n :=  funcName2(a,b)</span><br><span class="line">_,n :=  funcName2(a,b)   <span class="comment">//_表示接收该值但不使用</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//2、匿名函数</span></span><br><span class="line"><span class="comment">//（1）匿名函数直接赋值给变量</span></span><br><span class="line">f := <span class="function"><span class="keyword">func</span><span class="params">(x, y <span class="type">int</span>)</span></span> <span class="type">int</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x + y</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//（2）直接执行匿名函数</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(ch <span class="keyword">chan</span> <span class="type">int</span>)</span></span>&#123;</span><br><span class="line">    ch &lt;- ACK</span><br><span class="line">&#125;(reply_chan) <span class="comment">//花括号后直接跟参数列表表示函数调用</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//3、闭包</span></span><br><span class="line"><span class="comment">//概念：闭包是可以包含自由（未绑定到特定对象）变量的代码块，这些变量不在这个代码块内或者任何全局上下文中定义，而是在定义代码块的环境中定义。要执行的代码块（由于自由变量包含在代码块中，所以这些自由变量以及它们引用的对象没有被释放）为自由变量提供绑定的计算环境（作用域）。</span></span><br><span class="line"><span class="comment">//价值：闭包的价值在于可以作为函数对象或者匿名函数，对于类型系统而言，这意味着不仅要表示数据还要表示代码。支持闭包的多数语言都将函数作为第一级对象，就是说这些函数可以存储到变量中作为参数传递给其他函数，最重要的是能够被函数动态创建和返回。</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h2 id="异常与错误"><a href="#异常与错误" class="headerlink" title="异常与错误"></a>异常与错误</h2><p>​		Go语言引入了关于错误处理的标准模式，即error接口，接口定义如下</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">type</span> <span class="type">error</span> <span class="keyword">interface</span> &#123;</span><br><span class="line">    Error() <span class="type">string</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>对于大多数函数，如果要返回错误，可以将error作为多种返回值的最后一个，但这并非强制要求，如下面所示：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">//1、声明函数</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">funcName</span><span class="params">(param <span class="type">int</span>)</span></span> (result <span class="type">int</span>,err <span class="type">error</span>) &#123;</span><br><span class="line">    <span class="comment">// TODO</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//2、调用函数</span></span><br><span class="line">result, err := funcName(<span class="number">1</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">    </span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//3、自定义错误</span></span><br><span class="line"><span class="keyword">type</span> NullError <span class="keyword">struct</span> &#123;</span><br><span class="line">	Message <span class="type">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(e *NullError)</span></span> Error() <span class="type">string</span> &#123;</span><br><span class="line">	<span class="keyword">return</span> e.Message</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//抛出自定义异常</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">getNum</span><span class="params">(name <span class="type">string</span>)</span></span> (result <span class="type">int</span>, err <span class="type">error</span>) &#123;</span><br><span class="line">	<span class="keyword">if</span> name == <span class="string">&quot;&quot;</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>, &amp;NullError&#123;<span class="string">&quot;name is null&quot;</span>&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">11</span>, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>​			通过上面的示例我们可以看到error就是一个正常且特殊的返回值，而<code>error</code>只是一个规范的统一接口</p>
<h2 id="defer"><a href="#defer" class="headerlink" title="defer"></a>defer</h2><p>​		关键字<code>defer</code>是go语言引入的一个新特性，有点类似与java中<code>try</code>,<code>catch</code>的<code>finally</code> ，<code>defer</code>将要执行的代码段压入栈，当函数执行完成后return之前，go然后将defer压入栈的程序取出执行，也就是说defer的执行顺序是与声明顺序逆序的。举个例子：当我们程序打开一个文件后，就可以在打开后面添加defer对文件进行关闭，避免了后续因其他处理忘记关闭文件，这是一个很巧妙的操作。当defer操作比较复杂时，我们也可以将操作封装成匿名函数。</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">CopyFile</span><span class="params">(dst, src <span class="type">string</span>)</span></span> (w <span class="type">int64</span>, err <span class="type">error</span>) &#123;</span><br><span class="line">	srcFile, err := os.Open(src)</span><br><span class="line">	<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">		<span class="keyword">return</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">defer</span> srcFile.Close()</span><br><span class="line">	dstFile, err := os.Create(dst)</span><br><span class="line">	<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">		<span class="keyword">return</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">defer</span> dstFile.Close()</span><br><span class="line">	<span class="keyword">return</span> io.Copy(dstFile, srcFile)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





<h2 id="panic-与recover"><a href="#panic-与recover" class="headerlink" title="panic()与recover()"></a>panic()与recover()</h2><p>​		当函数执行过程中调用<code>panic()</code>函数时，正常的函数执行流程将立即终止，但是函数中之前使用的defer关键字延迟执行的语句将正常展开执行，之后该函数返回到调用函数，并导致逐层向上执行<code>panic()</code>流程，知道所属的<code>goroutine</code>中所有正在执行的函数终止。同时<code>panic()</code>的参数类型为<code>interface&#123;&#125;</code>这意味着它可以接收任意类型的数据。</p>
<p>​		<code>recover()</code>函数用于终止<code>panic()</code>处理。一般情况下，<code>recover()</code>应该在一个使用<code>defer</code>关键字的函数中执行检查处理。</p>
<p>​		<code>panic()</code>与<code>recover()</code>是两个比较有意思的函数，它们最常见的场景类似于java中的异常长处理，异常时<code>try catch</code>掉，还是继续想上层<code>throws</code>。<code>panic()</code>等于向上层逐层返回可检查异常，只要没由地方抓住异常，那么就可以继续向上层抛出，然后<code>defer</code>+<code>recover()</code>相当于抓住异常，然后对异常处理。</p>
<h2 id="类型-方法"><a href="#类型-方法" class="headerlink" title="类型\方法"></a>类型\方法</h2><p>​		<code>type</code>关键字既可以用来声明一个结构体，又可以用来声明一个类型</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">//1、面向对象开发：为对象添加方法</span></span><br><span class="line"><span class="keyword">type</span> Integer <span class="type">int</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(a Integer)</span></span> Less (b Integer) <span class="type">bool</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a &lt; b</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//2、面向过程开发：提供函数</span></span><br><span class="line"><span class="keyword">type</span> Integer <span class="type">int</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Integer_Less</span><span class="params">(a Integer,b Integer)</span></span> <span class="type">bool</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a &lt; b</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>​		Go语言大多数是基于值传递的，所以我们调用函数不使用指针的话，那么调用完函数后，入参的值不会改变，所以如果我们想通过调用函数来改变参数的值，则需要使用指针，<code>*variableName</code>用来获取指针，<code>&amp;pointerName</code>获取指针指向内容的值。</p>
<p>​		基于值语义的类型包括：（1）byte，int，bool，float32，float64，string等基础类型；（2）array（数组）、struct（结构体）、pointer（指针）等</p>
<p>​		4个特别类型，看起来像引用类型：数组切片、map、channel、interface（接口）</p>
<p>示例如下：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">handle</span><span class="params">(v1 <span class="type">int</span>,v2 *<span class="type">int</span>)</span></span>&#123;</span><br><span class="line">    v1 = v1 + <span class="number">3</span></span><br><span class="line">    *v2 = *v2 + <span class="number">3</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> a = <span class="number">1</span></span><br><span class="line">	<span class="keyword">var</span> b = <span class="number">2</span></span><br><span class="line">    handle(a, &amp;b)</span><br><span class="line">	fmt.Println(a)       <span class="comment">//输出：1</span></span><br><span class="line">	fmt.Println(b)       <span class="comment">//输出：5</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>​		<em>注</em>：<code>&amp;</code>表示取地址，取到变量的地址</p>
<p>​				<code>*</code>在变量声明的时候，用来标识该变量是一个指针；用在调用过程中时，表示取该指针指向存储单元的值</p>
<h2 id="结构体"><a href="#结构体" class="headerlink" title="结构体"></a>结构体</h2><p>​		Goy语言的结构体类型Java语言的class，但是Go语言摒弃了继承在内的大量的面向对象特性，只保留了组合基础的特性。</p>
<p>​		结构体结构：type关键字、结构体名称、struct关键字、字段名称、字段类型，示例如下：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">//1、结构体声明</span></span><br><span class="line"><span class="keyword">type</span> Student <span class="keyword">struct</span>&#123;</span><br><span class="line">    name <span class="type">string</span></span><br><span class="line">    age <span class="type">int</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//2、初始化结构体</span></span><br><span class="line">student1 := <span class="built_in">new</span>(Student)</span><br><span class="line">student2 := &amp;Student&#123;&#125;</span><br><span class="line">student3 := &amp;Student&#123;<span class="string">&quot;zhangsan&quot;</span>, <span class="number">18</span>&#125;</span><br><span class="line">student4 := &amp;Student&#123;name: <span class="string">&quot;zhangsan&quot;</span>, age: <span class="number">18</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//3、匿名组合（继承）</span></span><br><span class="line"><span class="comment">//============父类==============</span></span><br><span class="line"><span class="keyword">type</span> Father <span class="keyword">struct</span>&#123;</span><br><span class="line">    Name <span class="type">string</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(father *Father)</span></span> Func1() &#123;</span><br><span class="line">    <span class="comment">// TODO</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(father *Father)</span></span> Func2() &#123;</span><br><span class="line">    <span class="comment">// TODO</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//============子类1===============</span></span><br><span class="line"><span class="keyword">type</span> Son <span class="keyword">struct</span>&#123;</span><br><span class="line">    Father</span><br><span class="line">    Age <span class="type">int</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(son *Son)</span></span> Func1() &#123;       <span class="comment">//通过调用子类方法可以调用父类方法</span></span><br><span class="line">    <span class="comment">// TODO son action</span></span><br><span class="line">    son.Father.Func1()</span><br><span class="line">    <span class="comment">// TODO son action</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">son.func1()      <span class="comment">//func1被重写了</span></span><br><span class="line">son.func2()      <span class="comment">//func2允许这样调用，其结果与下面相同</span></span><br><span class="line">son.Father.func2()</span><br><span class="line"></span><br><span class="line"><span class="comment">//============子类2===============</span></span><br><span class="line"><span class="keyword">type</span> Son2 <span class="keyword">struct</span>&#123;</span><br><span class="line">    *Father            <span class="comment">//该形式仍能够实现继承，但是Son2创建示例的时候，需要外部提供一个Father类的实例指针</span></span><br><span class="line">    Age <span class="type">int</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>​		<em>注</em>：Go语言没有像java一样通过<code>public</code>,<code>private</code>,<code>protected</code>关键字来进行访问权限的控制，Go是通过变量、函数名、方法名的首字母大小写来进行控制的：大写表示该变量、函数、方法对其他包的是开放允许访问的。</p>
<h2 id="接口"><a href="#接口" class="headerlink" title="接口"></a>接口</h2><p>​		Go语言接口与其他语言也有很大的不同，它摒弃声明式的继承，采用非侵入式的继承方式。这正好解决了Java中一个很头疼的问题：SPI（java，spring，alibaba）各自有各自的解决方案，但是大大增加了编程的难度。SPI（service provider interface）, 最著名的就是JDBC加载机制，由于Java只针对数据库驱动规定了加载机制接口，但是具体实现还需各个数据库厂商进行实现，这就造成了如何自动加载这些驱动的问题，最后java，spring，alibaba三家给出了三种不同的方式，但是也增加了代码的复杂度。而Go语言的接口非侵入式继承接口的特性，很好地解决了SPI机制，在程序上无需任何多余的操作。</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">//1、初时接口</span></span><br><span class="line"><span class="keyword">type</span> IReader <span class="keyword">interface</span> &#123;</span><br><span class="line">    Read(buf []<span class="type">byte</span>) (n <span class="type">int</span>,err <span class="type">error</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> IWriter <span class="keyword">interface</span> &#123;</span><br><span class="line">    Write(buf []<span class="type">byte</span>) (n <span class="type">int</span>,err <span class="type">error</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> ICloser <span class="keyword">interface</span> &#123;</span><br><span class="line">    Close() <span class="type">error</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> IFile <span class="keyword">interface</span> &#123;</span><br><span class="line">    Read(buf []<span class="type">byte</span>) (n <span class="type">int</span>,err <span class="type">error</span>)</span><br><span class="line">    Write(buf []<span class="type">byte</span>) (n <span class="type">int</span>,err <span class="type">error</span>)</span><br><span class="line">    Close() <span class="type">error</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> File <span class="keyword">struct</span> &#123;</span><br><span class="line">    <span class="comment">// atrribute</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(file *File)</span></span> Read(buf []<span class="type">byte</span>) (n <span class="type">int</span>,err <span class="type">error</span>) &#123;</span><br><span class="line">    <span class="comment">//TODO</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(file *File)</span></span> Write(buf []<span class="type">byte</span>) (n <span class="type">int</span>,err <span class="type">error</span>) &#123;</span><br><span class="line">    <span class="comment">//TODO</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(file *File)</span></span> Close() &#123;</span><br><span class="line">    <span class="comment">//TODO</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//上面File 自动继承了IFile,IReader，IWriter，ICloser接口</span></span><br><span class="line"><span class="keyword">var</span> file1 IFile = <span class="built_in">new</span>(File)</span><br><span class="line"><span class="keyword">var</span> reader IReader = <span class="built_in">new</span>(File)</span><br><span class="line"><span class="keyword">var</span> writer IWriter = <span class="built_in">new</span>(File)</span><br><span class="line"><span class="keyword">var</span> closer ICloser = <span class="built_in">new</span>(File)</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<ol>
<li><p><strong>接口赋值</strong></p>
<p>​		在Go与可能存在不同的包中存在两个相同的接口（可能方法顺序不一样：但这并没什么影响），那么他们的一个实现类可以说是都实现了这两个包的接口，这两个接口的变量可以相互赋值。</p>
</li>
<li><p><strong>接口查询与类型查询</strong></p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> v1 InterfaceName1 = ...</span><br><span class="line"><span class="keyword">if</span> v2,ok = v1.(InterfaceName2); ok &#123;      <span class="comment">//该语句可以判断变量是否实现了某接口：如果v1实现了InterfaceName2的接口则进行后面操作，</span></span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> v3 InterfaceName3 = ...</span><br><span class="line"><span class="keyword">switch</span> v := v3.(<span class="keyword">type</span>) &#123;                   <span class="comment">//可以通过变量.(type)获取变量类型</span></span><br><span class="line">    <span class="keyword">case</span> <span class="type">int</span> :</span><br><span class="line">    <span class="keyword">case</span> <span class="type">string</span> :</span><br><span class="line">    <span class="keyword">default</span> :</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


</li>
<li><p><strong>接口组合</strong></p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">type</span> IReader <span class="keyword">interface</span> &#123;</span><br><span class="line">    Read(buf []<span class="type">byte</span>) (n <span class="type">int</span>,err <span class="type">error</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> IWriter <span class="keyword">interface</span> &#123;</span><br><span class="line">    Write(buf []<span class="type">byte</span>) (n <span class="type">int</span>,err <span class="type">error</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> ICloser <span class="keyword">interface</span> &#123;</span><br><span class="line">    Close() <span class="type">error</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// IFile接口组合了IReader，IWriter，ICloser接口</span></span><br><span class="line"><span class="keyword">type</span> IFile接口组合了 <span class="keyword">interface</span> &#123;</span><br><span class="line">    IReader</span><br><span class="line">    IWriter</span><br><span class="line">    ICloser</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


</li>
<li><p><strong>Any类型</strong></p>
</li>
</ol>
<p>​		由于Go语言中任何对象实例都满足空接口<code>interface&#123;&#125;</code>，所以<code>interface&#123;&#125;</code>看起来像是可以指向任何对象的Any类型，如下</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> v1 <span class="keyword">interface</span>&#123;&#125; = <span class="number">1</span></span><br><span class="line"><span class="keyword">var</span> v2 <span class="keyword">interface</span>&#123;&#125; = <span class="string">&quot;abc&quot;</span></span><br><span class="line"><span class="keyword">var</span> v3 <span class="keyword">interface</span>&#123;&#125; = &amp;v2</span><br><span class="line"><span class="keyword">var</span> v4 <span class="keyword">interface</span>&#123;&#125; = <span class="keyword">struct</span>&#123;X <span class="type">int</span>&#125;&#123;<span class="number">1</span>&#125;</span><br><span class="line"><span class="keyword">var</span> v5 <span class="keyword">interface</span>&#123;&#125; = &amp;<span class="keyword">struct</span>&#123;X <span class="type">int</span>&#125;&#123;<span class="number">1</span>&#125;</span><br></pre></td></tr></table></figure>









<h1 id="并发编程"><a href="#并发编程" class="headerlink" title="并发编程"></a>并发编程</h1><h2 id="协程-Groutine"><a href="#协程-Groutine" class="headerlink" title="协程(Groutine)"></a>协程(Groutine)</h2><h2 id="通道-Channel"><a href="#通道-Channel" class="headerlink" title="通道(Channel)"></a>通道(Channel)</h2><h2 id="Select"><a href="#Select" class="headerlink" title="Select"></a>Select</h2><h2 id="线程同步"><a href="#线程同步" class="headerlink" title="线程同步"></a>线程同步</h2><h1 id="反射"><a href="#反射" class="headerlink" title="反射"></a>反射</h1><h1 id="网络编程"><a href="#网络编程" class="headerlink" title="网络编程"></a>网络编程</h1><h1 id="安全编程"><a href="#安全编程" class="headerlink" title="安全编程"></a>安全编程</h1><h1 id="内存模型以及垃圾回收"><a href="#内存模型以及垃圾回收" class="headerlink" title="内存模型以及垃圾回收"></a>内存模型以及垃圾回收</h1>]]></content>
      <categories>
        <category>Go语言</category>
      </categories>
  </entry>
  <entry>
    <title>Hive安装</title>
    <url>/2023/03/10/Hive%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><p>[toc]</p>
]]></content>
      <categories>
        <category>运维安装</category>
        <category>分布式存储与计算</category>
      </categories>
  </entry>
  <entry>
    <title>Log4j与Log4j2日志配置详解</title>
    <url>/2023/02/17/Log4j%E4%B8%8ELog4j2%E6%97%A5%E5%BF%97%E9%85%8D%E7%BD%AE%E8%AF%A6%E8%A7%A3/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><p>[toc]</p>
<h1 id="Log4j配置"><a href="#Log4j配置" class="headerlink" title="Log4j配置"></a>Log4j配置</h1><p><code>log4j.properties</code>配置样例</p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">log4j.rootLogger</span> = <span class="string">INFO, FILE, CONSOLE</span></span><br><span class="line"><span class="attr">log4j.appender.FILE</span>=<span class="string">org.apache.log4j.FileAppender</span></span><br><span class="line"><span class="attr">log4j.appender.FILE.File</span>=<span class="string">D:/logs/log.out</span></span><br><span class="line"><span class="attr">log4j.appender.FILE.ImmediateFlush</span>=<span class="string">true</span></span><br><span class="line"><span class="attr">log4j.appender.FILE.Threshold</span> = <span class="string">DEBUG</span></span><br><span class="line"><span class="attr">log4j.appender.FILE.Append</span>=<span class="string">true</span></span><br><span class="line"><span class="attr">log4j.appender.FILE.layout</span>=<span class="string">org.apache.log4j.PatternLayout</span></span><br><span class="line"><span class="attr">log4j.appender.FILE.layout.conversionPattern</span>=<span class="string">%d&#123; ABSOLUTE&#125; %5p %c&#123; 1&#125;:%L - %m%n</span></span><br><span class="line"><span class="attr">log4j.appender.CONSOLE</span>=<span class="string">org.apache.log4j.ConsoleAppender</span></span><br><span class="line"><span class="attr">log4j.appender.CONSOLE.Target</span>=<span class="string">System.out</span></span><br><span class="line"><span class="attr">log4j.appender.CONSOLE.ImmediateFlush</span>=<span class="string">true</span></span><br><span class="line"><span class="attr">log4j.appender.CONSOLE.Threshold</span> = <span class="string">DEBUG</span></span><br><span class="line"><span class="attr">log4j.appender.CONSOLE.layout</span>=<span class="string">org.apache.log4j.PatternLayout</span></span><br><span class="line"><span class="attr">log4j.appender.CONSOLE.encoding</span>=<span class="string">UTF-8</span></span><br><span class="line"><span class="attr">log4j.appender.CONSOLE.layout.conversionPattern</span>=<span class="string">%d&#123; ABSOLUTE&#125; %5p %c&#123; 1&#125;:%L - %m%n</span></span><br></pre></td></tr></table></figure>



<p><code>log4j.xml</code>配置样例</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">log4j</span>:configuration <span class="keyword">SYSTEM</span> <span class="string">&quot;log4j.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">log4j:configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">&quot;CONSOLE&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.apache.log4j.ConsoleAppender&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;target&quot;</span> <span class="attr">value</span>=<span class="string">&quot;System.out&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;immediateFlush&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;threshold&quot;</span> <span class="attr">value</span>=<span class="string">&quot;DEBUG&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;append&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">layout</span> <span class="attr">class</span>=<span class="string">&quot;org.apache.log4j.PatternLayout&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;ConversionPattern&quot;</span> <span class="attr">value</span>=<span class="string">&quot;%d - %c -%-4r [%t] %-5p %x - %m%n&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">layout</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">&quot;FILE&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.apache.log4j.FileAppender&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;File&quot;</span> <span class="attr">value</span>=<span class="string">&quot;D:/logs/log.out&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;ImmediateFlush&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;Threshold&quot;</span> <span class="attr">value</span>=<span class="string">&quot;DEBUG&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;Append&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">layout</span> <span class="attr">class</span>=<span class="string">&quot;org.apache.log4j.PatternLayout&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;ConversionPattern&quot;</span> <span class="attr">value</span>=<span class="string">&quot;%d&#123;ABSOLUTE&#125; %5p %c&#123;1&#125;:%L - %m%n&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">layout</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--单独配置某个类--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">category</span> <span class="attr">name</span>=<span class="string">&quot;cn.ling.logs&quot;</span> <span class="attr">additivity</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">level</span> <span class="attr">value</span>=<span class="string">&quot;ERROR&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">level</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">&quot;CONSOLE&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">category</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">root</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">priority</span> <span class="attr">value</span>=<span class="string">&quot;ERROR&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">&quot;CONSOLE&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">&quot;FILE&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">log4j:configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>







<h2 id="配置根Logger"><a href="#配置根Logger" class="headerlink" title="配置根Logger"></a>配置根Logger</h2><figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">log4j.rootLogger</span> = <span class="string">[ level ] , appenderName, appenderName, …</span></span><br></pre></td></tr></table></figure>

<ul>
<li><p>level指的是根logger对象的日志等级，ALL &lt; DEBUG &lt; INFO &lt; WARN &lt; ERROR &lt; FATAL &lt; OFF</p>
</li>
<li><p>Log4j建议只使用4个级别，从高到低分别为ERROR &gt; WARN &gt; INFO &gt; DEBUG；</p>
</li>
<li><p>appenderName指的是根logger对象的日志信息输出目的地，在此可以指定多个输出目的地；<br>日志输出级别INFO<br>输出目的地 FILE CONSOLE<br><code>log4j.rootLogger = INFO, FILE, CONSOLE</code></p>
</li>
</ul>
<h2 id="配置日志输出目的地"><a href="#配置日志输出目的地" class="headerlink" title="配置日志输出目的地"></a>配置日志输出目的地</h2><figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">log4j.appender.[appenderName]</span> = <span class="string">[className]</span></span><br></pre></td></tr></table></figure>

<ul>
<li><p>appenderName指的是日志信息输出目的地的名称，可自定义，需要与根Logger中的appenderName一致；</p>
</li>
<li><p>className指的是日志输出目的地处理类，必须为全限定类名；</p>
<p>常用的输出端有：</p>
<p>1）控制台（<code>org.apache.log4j.ConsoleAppender</code>）</p>
<p>2）文件（<code>org.apache.log4j.FileAppender</code>&lt;单个文件&gt;、</p>
<p>​          <code>org.apache.log4j.DailyRollingFileAppender</code>&lt;每天都产生一个日志文件&gt;、 </p>
<p>​          <code>org.apache.log4j.RollingFileAppender</code>&lt;文件大小达到指定尺寸时产生一个新的日志文件，文件名称上会自动添加数字序号&gt;）</p>
<p>​          <code>org.apache.log4j.varia.ExternallyRolledFileAppender</code>&lt;扩展了<code>RollingFileAppender</code>&gt;</p>
<p>​          </p>
<p>3）数据库（<code>org.apache.log4j.jdbc.JDBCAppender</code> ）</p>
<p>4）邮件（<code>org.apache.log4j.net.SMTPAppender</code>）</p>
<p>5）异步打印（<code>org.apache.log4j.AsyncAppender</code>）</p>
<p>6）<code>org.apache.log4j.lf5.LF5Appender</code></p>
</li>
</ul>
<p>​       7）<code>org.apache.log4j.nt.NTEventLogAppender</code></p>
<p>​       8）<code>org.apache.log4j.varia.NullAppender</code></p>
<p>​       9）<code>org.apache.log4j.rewrite.RewriteAppender</code></p>
<p>​       10）<code>org.apache.log4j.net.SocketAppender</code></p>
<p>​       11）<code>org.apache.log4j.net.SocketHubAppender</code></p>
<p>​       12）<code>org.apache.log4j.net.SyslogAppender</code></p>
<p>​       13）<code>org.apache.log4j.net.TelnetAppender</code></p>
<p>​       14）将日志信息以流格式发送到任意指定的地方（<code>org.apache.log4j.WriterAppender</code>）</p>
<h3 id="输出到文件中的配置"><a href="#输出到文件中的配置" class="headerlink" title="输出到文件中的配置"></a>输出到文件中的配置</h3><figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">log4j.appender.[appenderName]</span> = <span class="string">org.apache.log4j.FileAppender</span></span><br></pre></td></tr></table></figure>

<ul>
<li>输出为文件类型的Appender：<code>FileAppender</code>、<code>DailyRollingFileAppender</code>、<code>RollingFileAppender</code></li>
</ul>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">log4j.appender.[appenderName].File</span>=<span class="string">[D:/logs/log.out]</span></span><br></pre></td></tr></table></figure>

<ul>
<li>将日志输出到D盘的logs&#x2F;log.out文件中</li>
</ul>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">log4j.appender.[appenderName].Append</span>=<span class="string">false</span></span><br></pre></td></tr></table></figure>

<ul>
<li>将新增日志追加到文件中,默认为true为不覆盖,false为覆盖</li>
</ul>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">log4j.appender.[appenderName].BufferedIO</span>=<span class="string">true</span></span><br></pre></td></tr></table></figure>

<ul>
<li>请求的日志消息不会立即输出，存储到缓存当中，当缓存满了后才输出到磁盘文件中，默认为false,此时<code>ImmediateFlush</code>应当设置为false</li>
</ul>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">log4j.appender.[appenderName].BufferSize</span>= <span class="string">8192</span></span><br></pre></td></tr></table></figure>

<ul>
<li>缓存大小，默认为8k</li>
</ul>
<h4 id="DailyRollingFileAppender单独配置"><a href="#DailyRollingFileAppender单独配置" class="headerlink" title="DailyRollingFileAppender单独配置"></a>DailyRollingFileAppender单独配置</h4><figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">log4j.appender.[appenderName].DatePattern</span>=<span class="string">’.’yyyy-MM-dd-HH-mm</span></span><br></pre></td></tr></table></figure>

<ul>
<li>标识每天产生一个新的日志文件，当然也可以指定按月、周、时、分，具体格式如下：<br>1)’.’yyyy-MM: 每月<br>2)’.’yyyy-ww: 每周<br>3)’.’yyyy-MM-dd: 每天<br>4)’.’yyyy-MM-dd-a: 每天两次<br>5)’.’yyyy-MM-dd-HH: 每小时<br>6)’.’yyyy-MM-dd-HH-mm: 每分钟</li>
</ul>
<h4 id="RollingFileAppender单独配置"><a href="#RollingFileAppender单独配置" class="headerlink" title="RollingFileAppender单独配置"></a>RollingFileAppender单独配置</h4><figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">log4j.appender.[appenderName].MaxFileSize</span>=<span class="string">100KB</span></span><br></pre></td></tr></table></figure>

<ul>
<li>指定日志文件切割大小，默认<code>10MB</code>，单位<code>KB/MB/GB</code>；当日志文件达到指定大小后，将当前日志文件内容剪切到新的日志文件中，新的文件默认以“原文件名+.1”、“原文件名+.2”的形式命名</li>
</ul>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">log4j.appender.RFILE.MaxBackupIndex</span>=<span class="string">2</span></span><br></pre></td></tr></table></figure>

<ul>
<li>产生的切割文件最大数量，如果第二个文件超过了指定大小，那么第一个文件将会被删除</li>
</ul>
<h3 id="输出到控制台的配置"><a href="#输出到控制台的配置" class="headerlink" title="输出到控制台的配置"></a>输出到控制台的配置</h3><figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Target可选System.out,System.error</span></span><br><span class="line"><span class="attr">log4j.appender.[appenderName].Target</span>=<span class="string">System.out</span></span><br></pre></td></tr></table></figure>

<ul>
<li>Target可选配置<code>System.out</code>，<code>System.error</code>；一般使用<code>System.out</code></li>
</ul>
<h3 id="通用配置"><a href="#通用配置" class="headerlink" title="通用配置"></a>通用配置</h3><figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">log4j.appender.[appenderName].Threshold</span> = <span class="string">[DEBUG]</span></span><br></pre></td></tr></table></figure>

<ul>
<li>指定日志输出的最低级别，默认为DEBUG;如果日志请求的级别低于此级别，则不会输出此请求日志信息</li>
</ul>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">og4j.appender.[appenderName].Encoding</span>=<span class="string">UTF-8</span></span><br></pre></td></tr></table></figure>

<ul>
<li>设置日志输出的编码</li>
</ul>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">log4j.appender.[appenderName].ImmediateFlush</span>=<span class="string">true</span></span><br></pre></td></tr></table></figure>

<ul>
<li>请求的日志消息被立即输出,默认为true</li>
</ul>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">log4j.appender.[appenderName].layout</span> = <span class="string">[className]</span></span><br></pre></td></tr></table></figure>

<ul>
<li>可渲染的输出类型：</li>
</ul>
<p>  1）<code>org.apache.log4j.HTMLLayout</code>（以html表格形式布局）</p>
<p>  2） <code>org.apache.log4j.SimpleLayout</code>（简单风格布局，只包含日志信息和级别）</p>
<p>  3）<code>org.apache.log4j.PatternLayout</code>（自定义风格布局，可以包含时间，日志级别，日志类）</p>
<p>  通常使用第三个</p>
<h4 id="PatternLayout自定义配置样式"><a href="#PatternLayout自定义配置样式" class="headerlink" title="PatternLayout自定义配置样式"></a>PatternLayout自定义配置样式</h4><figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">log4j.appender.console.layout.ConversionPattern</span> = <span class="string">[%p][%d&#123;yyyy-MM-dd HH:mm:ss&#125;][%c]%m%n</span></span><br></pre></td></tr></table></figure>

<ul>
<li><p>输出样式 ：</p>
<p>  <code>%m</code>: 输出代码中指定的消息<br>  <code>%p</code>: 输出优先级，即DEBUG，INFO，WARN，ERROR，FATAL<br>  <code>%r</code>: 输出自应用启动到输出该log信息耗费的毫秒数<br>  <code>%c</code>：输出日志信息所属的日志对象，也就是getLogger()中的内容。<br>  %C：输出日志信息所属的类目；<br>  %logger：log4j中没有此格式；<br>  <code>%t</code>:  输出产生该日志事件的线程名<br>  <code>%n</code>: 输出一个回车换行符，Windows平台为”rn”，Unix平台为”n”<br>  <code>%d</code>:  输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，<br>  比如：<code>%d&#123;yyyy MM dd HH:mm:ss,SSS&#125;</code>，输出类似：<code>2002年10月18日 22:10:28,921</code><br>  <code>%x</code>: 输出和当前线程相关联的NDC(嵌套诊断环境),尤其用到像java servlets这样的多客户多线程的应用中。<br>  <code>%%</code>: 输出一个”%”字符<br>  <code>%F</code>: 输出日志消息产生时所在的文件名称<br>  <code>%M</code>: 输出产生日志信息的方法名<br>  <code>%L</code>: 输出代码中的行号<br>  <code>%l</code>: 输出日志事件的发生位置，相当于<code>%c.%M(%F:%L)</code>的组合，包括类全名、方法、文件名以及在代码中的行数。<br>  例如：<code>test.Log4jTest.main(Log4jTest.java:10)</code>。</p>
</li>
</ul>
<h2 id="钩子程序"><a href="#钩子程序" class="headerlink" title="钩子程序"></a>钩子程序</h2><p>​        log4j在开启缓存的情况下，log4j的性能得到了大幅度提升。既然缓存的优势这么明显，为什么log4j不默认开启缓存呢？<br>缓存的存在，有利有弊。利，提升系统响应性能；弊，当系统因为异常而崩溃，又或者jvm被强行关闭，从而导致缓存中的数据丢失，日志不存在，无法及时确定异常原因。我想，这个才是log4j并没有默认开启缓存的原因！<br>​       日志的存在，一方面为了记录系统请求的信息；另一方面，帮助develpoer及时发现、排除错误原因。如果连日志的完整性都不能保留，那么日志存在的意义又是什么？所以，log4j并没有将缓存设置为默认开启，只是提供了一个选项；<br>​       那么，我们如何使鱼和熊掌可以兼得呢？在log4j提供的api中暂时无法实现此需求，不过jvm向我们提供了一个方法，可以帮助我们实现，这就是jvm关闭钩子程序；<br>​       在jvm中注册一个钩子程序，当jvm关闭的时候，会执行系统中已经设置的所有通过方法addShutdownHook添加的钩子，当系统执行完这些钩子后，jvm才会关闭。</p>
<p>代码如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//创建新的Appender,继承FileAppender，在构造中添加钩子程序代码：</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HookFileAppender</span> <span class="keyword">extends</span> <span class="title class_">FileAppender</span> &#123; </span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">HookFileAppender</span><span class="params">()</span>&#123; </span><br><span class="line">        <span class="built_in">super</span>();</span><br><span class="line">        <span class="comment">//添加钩子程序：</span></span><br><span class="line">        Runtime.getRuntime().addShutdownHook(<span class="keyword">new</span> <span class="title class_">Log4jHockThread</span>());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">HookFileAppender</span><span class="params">(Layout layout, String filename)</span> <span class="keyword">throws</span> IOException &#123; </span><br><span class="line">        <span class="built_in">super</span>(layout,filename);</span><br><span class="line">        <span class="comment">//添加钩子程序：</span></span><br><span class="line">        Runtime.getRuntime().addShutdownHook(<span class="keyword">new</span> <span class="title class_">Log4jHockThread</span>());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">HookFileAppender</span><span class="params">(Layout layout, String filename, <span class="type">boolean</span> append)</span> <span class="keyword">throws</span> IOException &#123; </span><br><span class="line">        <span class="built_in">super</span>(layout,filename,append);</span><br><span class="line">        <span class="comment">//添加钩子程序：</span></span><br><span class="line">        Runtime.getRuntime().addShutdownHook(<span class="keyword">new</span> <span class="title class_">Log4jHockThread</span>());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">HookFileAppender</span><span class="params">(Layout layout, String filename, <span class="type">boolean</span> append, <span class="type">boolean</span> bufferedIO,</span></span><br><span class="line"><span class="params">                 <span class="type">int</span> bufferSize)</span> <span class="keyword">throws</span> IOException &#123; </span><br><span class="line">        <span class="built_in">super</span>(layout,filename,append,bufferedIO,bufferSize);</span><br><span class="line">        Runtime.getRuntime().addShutdownHook(<span class="keyword">new</span> <span class="title class_">Log4jHockThread</span>());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">Log4jHockThread</span> <span class="keyword">extends</span> <span class="title class_">Thread</span>&#123; </span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123; </span><br><span class="line">            <span class="comment">//jvm结束之前，运行flush操作，将日志落盘；</span></span><br><span class="line">            <span class="keyword">if</span>(qw != <span class="literal">null</span>)&#123; </span><br><span class="line">                qw.flush();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





<h1 id="Log4j2配置"><a href="#Log4j2配置" class="headerlink" title="Log4j2配置"></a>Log4j2配置</h1><p><code>log4j2.xml</code>配置详解:</p>
<p>官网文档：</p>
<p>1）Configuration配置：<a href="https://logging.apache.org/log4j/2.x/manual/configuration.html">https://logging.apache.org/log4j/2.x/manual/configuration.html</a></p>
<p>2）各种Appender配置：<a href="https://logging.apache.org/log4j/2.x/manual/appenders.html">https://logging.apache.org/log4j/2.x/manual/appenders.html</a></p>
<p>3）各种输出形式：<a href="https://logging.apache.org/log4j/2.x/manual/layouts.html">https://logging.apache.org/log4j/2.x/manual/layouts.html</a></p>
<p>4）日志过滤器：<a href="https://logging.apache.org/log4j/2.x/manual/filters.html">https://logging.apache.org/log4j/2.x/manual/filters.html</a></p>
<p>5）异步日志：<a href="https://logging.apache.org/log4j/2.x/manual/async.html">https://logging.apache.org/log4j/2.x/manual/async.html</a></p>
<p>6）Log4j SpringBoot：<a href="https://logging.apache.org/log4j/2.x/log4j-spring-boot.html">https://logging.apache.org/log4j/2.x/log4j-spring-boot.html</a></p>
<p>7）Log4j SpringCloud Config Client： <a href="https://logging.apache.org/log4j/2.x/log4j-spring-cloud-config-client.html">https://logging.apache.org/log4j/2.x/log4j-spring-cloud-config-client.html</a></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="comment">&lt;!--日志级别以及优先级排序: OFF &gt; FATAL &gt; ERROR &gt; WARN &gt; INFO &gt; DEBUG &gt; TRACE &gt; ALL --&gt;</span></span><br><span class="line"><span class="comment">&lt;!--Configuration后面的status，这个用于设置log4j2自身内部的信息输出，可以不设置，当设置成trace时，你会看到log4j2内部各种详细输出--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--monitorInterval：Log4j能够自动检测修改配置 文件和重新配置本身，可设置一个非零的间隔秒数来检测配置变更 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Configuration</span> <span class="attr">status</span>=<span class="string">&quot;WARN&quot;</span> <span class="attr">monitorInterval</span>=<span class="string">&quot;60&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 自定义一些变量 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Properties</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 变量定义 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Property</span> <span class="attr">name</span>=<span class="string">&quot;log_base_dir&quot;</span>&gt;</span>/app_data/logs/my_app<span class="tag">&lt;/<span class="name">Property</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- Appender在将日志数据写入目标位置之前，一般会将日志数据通过Layout进行格式化。PatternLayout可以使用与C语言printf函数类似的转换模式来指定输出格式。常见的配置如下：</span></span><br><span class="line"><span class="comment">        - %d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125; : 日志生成时间，输出格式为“年-月-日 时:分:秒.毫秒”</span></span><br><span class="line"><span class="comment">        - %p : 日志输出格式</span></span><br><span class="line"><span class="comment">        - %c : logger的名称</span></span><br><span class="line"><span class="comment">        - %m : 日志内容，即 logger.info(&quot;message&quot;)</span></span><br><span class="line"><span class="comment">        - %n : 换行符</span></span><br><span class="line"><span class="comment">        - %T : 线程号</span></span><br><span class="line"><span class="comment">        - %L : 日志输出所在行数</span></span><br><span class="line"><span class="comment">        - %M : 日志输出所在方法名 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Property</span> <span class="attr">name</span>=<span class="string">&quot;log_pattern&quot;</span>&gt;</span>[%d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125;][%-5p][%T][%c.%M:%L] %msg%xEx%n<span class="tag">&lt;/<span class="name">Property</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 单个日志文件最大大小，单位可以是KB, MB or GB --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Property</span> <span class="attr">name</span>=<span class="string">&quot;max_single_file_size&quot;</span>&gt;</span>1MB<span class="tag">&lt;/<span class="name">Property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 使用Appenders元素可以将日志事件数据写到各种目标位置（目前可以为控制台、文件、多种数据库API、远程套接字服务器、Apache Flume、JMS、远程UNIX Syslog daemon），其内的每个Appender都必须要有一个name属性作为唯一标识，该标识的值在Logger中通过AppenderRef来引用，从而将该Appender配置到该Logger中 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Appenders</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- Console Appender常用于将日志输出到System.out，一般用在开发环境 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Console</span> <span class="attr">name</span>=<span class="string">&quot;Console&quot;</span> <span class="attr">target</span>=<span class="string">&quot;SYSTEM_OUT&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 只接受程序中DEBUG级别的日志进行处理--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ThresholdFilter</span> <span class="attr">level</span>=<span class="string">&quot;DEBUG&quot;</span> <span class="attr">onMatch</span>=<span class="string">&quot;ACCEPT&quot;</span> <span class="attr">onMismatch</span>=<span class="string">&quot;DENY&quot;</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 在大多数情况下，Appender将格式化LogEvent的责任委托给Layout --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">PatternLayout</span> <span class="attr">pattern</span>=<span class="string">&quot;$&#123;log_pattern&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Console</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- RollingFile Appender会将日志输出到fileName属性指定的文件中，且需要指定TriggeringPolicy和RolloverStrategy。其中TriggeringPolicy决定是否生成新的日志文件，RolloverStrategy决定如何生成新的日志文件。如果没有配置RolloverStrategy，则会使用DefaultRolloverStrategy。从2.5开始，可以在DefaultRolloverStrategy中配置一个自定义的删除动作。从2.8开始，如果没有指定文件名，则会使用DirectWriteRolloverStrategy来代替DefaultRolloverStrategy --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 这个RollingFile Appender会打印出所有的DEBUG及以下级别（DEBUG、INFO、ERROR、FATAL、OFF）的信息 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">RollingFile</span> <span class="attr">name</span>=<span class="string">&quot;DebugLogRollingFile&quot;</span> <span class="attr">fileName</span>=<span class="string">&quot;$&#123;log_base_dir&#125;/my_app_debug.log&quot;</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">filePattern</span>=<span class="string">&quot;$&#123;log_base_dir&#125;/$$&#123;date:yyyy_MM_dd&#125;/my_app_debug_%d&#123;yyyy_MM_dd_HH&#125;_%i.log.gz&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ThresholdFilter</span> <span class="attr">level</span>=<span class="string">&quot;DEBUG&quot;</span> <span class="attr">onMatch</span>=<span class="string">&quot;ACCEPT&quot;</span> <span class="attr">onMismatch</span>=<span class="string">&quot;DENY&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">PatternLayout</span> <span class="attr">pattern</span>=<span class="string">&quot;$&#123;log_pattern&#125;&quot;</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- Policies表示一个CompositeTriggeringPolicy，可以组合多个TriggeringPolicy，只要内部的任意一个TriggeringPolicy满足触发条件，都会滚动日志 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Policies</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- TimeBasedTriggeringPolicy用于按时间滚动日志。只要filePattern属性值中的日期/时间模式（pattern）不再应用于当前文件时就进行日志滚动。这种规则通过interval和modulate属性来配置。interval属性指定一个整数，用于基于日期/时间模式中的最小的时间单位数滚动一次。例如，filePattern值为/app_data/logs/my_app/$$&#123;date:yyyy_MM_dd&#125;/my_app_%d&#123;yyyy_MM_dd_HH&#125;_%i.log，这里使用小时作为最小的时间单位时，假如interval参数值为4，则表示每4小时滚动一次。默认值为1。modulate表示是否调整interval属性值以便下次滚动发生在interval边界处。如果时间最小单位为小时，当前时间为早上3点，间隔为4小时，则第一次滚动将发生在早上4点时（而不是早上7点），后续滚动将发生在早上8点、中午12点、下午4点等时刻 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">TimeBasedTriggeringPolicy</span> <span class="attr">interval</span>=<span class="string">&quot;1&quot;</span> <span class="attr">modulate</span>=<span class="string">&quot;false&quot;</span>/&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- SizeBasedTriggeringPolicy用于按文件大小滚动日志。每当日志文件超过size指定的大小（一般不超过几十MB，否则使用软件打开导出的日志时很不方便），则这size大小的日志会自动存入按filePattern属性指定建立的文件夹下面并进行压缩存档 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">SizeBasedTriggeringPolicy</span> <span class="attr">size</span>=<span class="string">&quot;$&#123;max_single_file_size&#125;&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">Policies</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- DefaultRolloverStrategy可以同时接受RollingFileAppender中filePattern属性值中日期/时间和整数计数器（%i）的pattern，当日期/时间满足条件时，则会使用当前的日期/时间生成新的日志文件，如果filePattern属性值中含有一个整数计数器%i，则在每次滚动时该整数都会增加，如果filePattern属性值中同时包含了日期/时间和整数计数器（%i），计数器会在日期/时间不变时而满足其他滚动触发条件时（文件大小）开始自增，直到日期/时间发生变化时，计数器会重新自增。以.gz、.zip、.bz2、deflate、pack200或xz结尾的filePattern值，会在日志文件归档时以后缀对应的格式进行压缩。min属性指定计数器的最小值，默认为1。max属性指定计数器的最大值，一旦计数器达到了最大值，最早的归档将会在每次滚动时被删除，默认值为7。fileIndex属性如果设置为max（默认），则具有更大索引的文件比具有更小索引的文件内容更新，如果设置为min，文件将重命名且计数器将遵循Fixed Window策略，这两种情况均有可能导致批量的文件重命名，自2.8版本开始，如果fileIndex属性设置为nomax，则min和max属性值都将会被忽略，文件编号将每次递增1，每次滚动都会递增到更大的值，且没有最大文件编号的限制 --&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--&lt;DefaultRolloverStrategy max=&quot;100&quot; min=&quot;1&quot; fileIndex = &quot;nomax&quot;/&gt;--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">DefaultRolloverStrategy</span> <span class="attr">fileIndex</span>=<span class="string">&quot;nomax&quot;</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- Log4j 2.5引入了删除动作（Delete元素）。在滚动删除旧的日志文件时，相比使用DefaultRolloverStrategy的max属性，该功能可以让用户拥有更多的删除控制。删除动作可以让用户配置若干个条件来删除相对于基准目录的文件。该功能可以删除非日志文件，使用时一定要小心。可以通过testMode属性来测试配置是否会错删文件。basePath属性值用于指定删除文件的基准目录，必须显式指定。maxDepth属性指定扫描目录的最大层级，0表示仅能访问基准目录（安全限制不能访问的情况除外），Integer.MAX_VALUE值表示可以访问所有层级。默认值为1，表示仅扫描基准目录下的文件。testMode属性值如果设置为true，文件不会实际删除，而是在status logger打印一条INFO级别的消息，可以使用该功能来测试是否会错删目标文件，默认为false。--&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 这里的Delete元素配置了每次滚动都会删除基准目录下匹配“*/my_app_debug_*.log.gz”日志文件，只要9分钟以前的日志文件总大小超过2MB，或9分钟以前的日志文件文件总数超过2个就按时间顺序删除较早的日志文件。该元素可以防止日志文件所在分区的磁盘空间被占满。特别需要注意的是，只有在发生日志滚动时才会尝试进行删除，否则即使满足了删除条件，但如果没有新的滚动日志生成的话也不会发生删除操作。 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Delete</span> <span class="attr">basePath</span>=<span class="string">&quot;$&#123;log_base_dir&#125;&quot;</span> <span class="attr">maxDepth</span>=<span class="string">&quot;2&quot;</span>&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!-- Delete元素里可以指定若干个PathCondition类型的元素。如果指定了不止一个条件，则这些条件都需要在删除之前接受某个路径。这些条件可以嵌套，只有外部条件接受某个路径之后，其内部条件才会决定是否接受该路径。如果这些条件没有嵌套，则它们的执行顺序是任意的。这些条件也可以通过使用IfAll, IfAny和IfNot等组合条件进行AND、OR和NOT等逻辑运算。用户也可以创建自定义条件或使用内置条件：</span></span><br><span class="line"><span class="comment">                    - IfFileName：接受匹配正则表达式或glob的文件路径；</span></span><br><span class="line"><span class="comment">                    - IfLastModified：接受比指定时段早或一样早的文件；</span></span><br><span class="line"><span class="comment">                    - IfAccumulatedFileCount：在遍历文件树时文件总数超过文件数上限后接受路径；</span></span><br><span class="line"><span class="comment">                    - IfAccumulatedFileSize：在遍历文件树时文件总大小超过上限后接受路径；</span></span><br><span class="line"><span class="comment">                    - IfAll：如果所有内嵌条件都接受了某个路径才会接受该路径，相当于AND逻辑，其内嵌条件的执行顺序是任意的；</span></span><br><span class="line"><span class="comment">                    - IfAny：如果任意一个内嵌条件接受了某个目录就接受该目录，相当于OR逻辑，其内嵌条件的执行顺序是任意的；</span></span><br><span class="line"><span class="comment">                    - IfNot：如果内嵌条件不接受某个路径就接收该路径，相当于NOT逻辑。--&gt;</span></span><br><span class="line"></span><br><span class="line">                    <span class="comment">&lt;!-- IfFileName可以通过glob（使用受限的模式语言,比正则更简单）或regex属性（正则）来匹配相对路径（相对于Delete的basePath属性指定的基准目录）--&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!-- 当外部的条件满足时才会计算内部的条件，内部的同级条件的计算顺序是任意的。 --&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">IfFileName</span> <span class="attr">glob</span>=<span class="string">&quot;*/my_app_debug_*.log.gz&quot;</span>&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!-- IfLastModified可以通过age属性值来指定接受最后修改时间为指定时间或早于指定时间的路径，该属性的值可参考org.apache.logging.log4j.core.appender.rolling.action.Duration.parse(CharSequence text)方法的文档 --&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!-- 这里的IfLastModified指定删除达到或超过60天内的文件 --&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">IfLastModified</span> <span class="attr">age</span>=<span class="string">&quot;9m&quot;</span>&gt;</span></span><br><span class="line">                            <span class="comment">&lt;!-- 这里的IfAny内嵌了两个PathCondition，表示满足任意一个条件即可 --&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">IfAny</span>&gt;</span></span><br><span class="line">                                <span class="comment">&lt;!-- IfAccumulatedFileSize可通过exceeds属性值指定一个文件总大小上限值。如果文件数超过了该上限值则删除文件 --&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">IfAccumulatedFileSize</span> <span class="attr">exceeds</span>=<span class="string">&quot;2MB&quot;</span>/&gt;</span></span><br><span class="line">                                <span class="comment">&lt;!-- IfAccumulatedFileCount可通过exceeds属性值指定一个文件总数上限值。如果文件数超过了该上限值则删除文件 --&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">IfAccumulatedFileCount</span> <span class="attr">exceeds</span>=<span class="string">&quot;2&quot;</span>/&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">IfAny</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">IfLastModified</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">IfFileName</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">Delete</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">DefaultRolloverStrategy</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">RollingFile</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">RollingFile</span> <span class="attr">name</span>=<span class="string">&quot;InfoLogRollingFile&quot;</span> <span class="attr">fileName</span>=<span class="string">&quot;$&#123;log_base_dir&#125;/my_app_info.log&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">filePattern</span>=<span class="string">&quot;$&#123;log_base_dir&#125;/$$&#123;date:yyyy_MM_dd&#125;/my_app_info_%d&#123;yyyy_MM_dd_HH&#125;_%i.log.gz&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ThresholdFilter</span> <span class="attr">level</span>=<span class="string">&quot;INFO&quot;</span> <span class="attr">onMatch</span>=<span class="string">&quot;ACCEPT&quot;</span> <span class="attr">onMismatch</span>=<span class="string">&quot;DENY&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">PatternLayout</span> <span class="attr">pattern</span>=<span class="string">&quot;$&#123;log_pattern&#125;&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Policies</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">TimeBasedTriggeringPolicy</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">SizeBasedTriggeringPolicy</span> <span class="attr">size</span>=<span class="string">&quot;$&#123;max_single_file_size&#125;&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">Policies</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">DefaultRolloverStrategy</span> <span class="attr">fileIndex</span>=<span class="string">&quot;nomax&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Delete</span> <span class="attr">basePath</span>=<span class="string">&quot;$&#123;log_base_dir&#125;&quot;</span> <span class="attr">maxDepth</span>=<span class="string">&quot;2&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">IfFileName</span> <span class="attr">glob</span>=<span class="string">&quot;*/my_app_info_*.log.gz&quot;</span>&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!-- 这里表示匹配“*/my_app_info_*.log.gz”模式的日志文件的删除策略如下：</span></span><br><span class="line"><span class="comment">                        - 只要日志文件总数量超过5个就删除按时间顺序最早的日志文件</span></span><br><span class="line"><span class="comment">                        - 只要日志文件总大小超过10MB就会删除按时间顺序最早的日志文件</span></span><br><span class="line"><span class="comment">                        - 只要日志文件最近修改时间为9分钟前或更早就会删除按时间顺序最早的日志文件 --&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">IfAny</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">IfAccumulatedFileSize</span> <span class="attr">exceeds</span>=<span class="string">&quot;8MB&quot;</span>/&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">IfAccumulatedFileCount</span> <span class="attr">exceeds</span>=<span class="string">&quot;5&quot;</span>/&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">IfLastModified</span> <span class="attr">age</span>=<span class="string">&quot;9m&quot;</span>/&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">IfAny</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">IfFileName</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">Delete</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">DefaultRolloverStrategy</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">RollingFile</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">RollingFile</span> <span class="attr">name</span>=<span class="string">&quot;WarnLogRollingFile&quot;</span> <span class="attr">fileName</span>=<span class="string">&quot;$&#123;log_base_dir&#125;/my_app_warn.log&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">filePattern</span>=<span class="string">&quot;$&#123;log_base_dir&#125;/$$&#123;date:yyyy_MM_dd&#125;/my_app_warn_%d&#123;yyyy_MM_dd_HH&#125;_%i.log.gz&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ThresholdFilter</span> <span class="attr">level</span>=<span class="string">&quot;WARN&quot;</span> <span class="attr">onMatch</span>=<span class="string">&quot;ACCEPT&quot;</span> <span class="attr">onMismatch</span>=<span class="string">&quot;DENY&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">PatternLayout</span> <span class="attr">pattern</span>=<span class="string">&quot;$&#123;log_pattern&#125;&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Policies</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">TimeBasedTriggeringPolicy</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">SizeBasedTriggeringPolicy</span> <span class="attr">size</span>=<span class="string">&quot;$&#123;max_single_file_size&#125;&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">Policies</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">DefaultRolloverStrategy</span> <span class="attr">fileIndex</span>=<span class="string">&quot;nomax&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Delete</span> <span class="attr">basePath</span>=<span class="string">&quot;$&#123;log_base_dir&#125;&quot;</span> <span class="attr">maxDepth</span>=<span class="string">&quot;2&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">IfFileName</span> <span class="attr">glob</span>=<span class="string">&quot;*/my_app_warn_*.log.gz&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">IfAny</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">IfAccumulatedFileSize</span> <span class="attr">exceeds</span>=<span class="string">&quot;3GB&quot;</span>/&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">IfAccumulatedFileCount</span> <span class="attr">exceeds</span>=<span class="string">&quot;3000&quot;</span>/&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">IfLastModified</span> <span class="attr">age</span>=<span class="string">&quot;30d&quot;</span>/&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">IfAny</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">IfFileName</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">Delete</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">DefaultRolloverStrategy</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">RollingFile</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">RollingFile</span> <span class="attr">name</span>=<span class="string">&quot;ErrorLogRollingFile&quot;</span> <span class="attr">fileName</span>=<span class="string">&quot;$&#123;log_base_dir&#125;/my_app_error.log&quot;</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">filePattern</span>=<span class="string">&quot;$&#123;log_base_dir&#125;/$$&#123;date:yyyy_MM_dd&#125;/my_app_error_%d&#123;yyyy_MM_dd_HH&#125;_%i.log.gz&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ThresholdFilter</span> <span class="attr">level</span>=<span class="string">&quot;ERROR&quot;</span> <span class="attr">onMatch</span>=<span class="string">&quot;ACCEPT&quot;</span> <span class="attr">onMismatch</span>=<span class="string">&quot;DENY&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">PatternLayout</span> <span class="attr">pattern</span>=<span class="string">&quot;$&#123;log_pattern&#125;&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Policies</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">TimeBasedTriggeringPolicy</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">SizeBasedTriggeringPolicy</span> <span class="attr">size</span>=<span class="string">&quot;$&#123;max_single_file_size&#125;&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">Policies</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">DefaultRolloverStrategy</span> <span class="attr">fileIndex</span>=<span class="string">&quot;nomax&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Delete</span> <span class="attr">basePath</span>=<span class="string">&quot;$&#123;log_base_dir&#125;&quot;</span> <span class="attr">maxDepth</span>=<span class="string">&quot;2&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">IfFileName</span> <span class="attr">glob</span>=<span class="string">&quot;*/my_app_error_*.log.gz&quot;</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">IfAny</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">IfAccumulatedFileSize</span> <span class="attr">exceeds</span>=<span class="string">&quot;3GB&quot;</span>/&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">IfAccumulatedFileCount</span> <span class="attr">exceeds</span>=<span class="string">&quot;3000&quot;</span>/&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">IfLastModified</span> <span class="attr">age</span>=<span class="string">&quot;30d&quot;</span>/&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">IfAny</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">IfFileName</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">Delete</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">DefaultRolloverStrategy</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">RollingFile</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 记录druid的SQL语句 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">RollingFile</span> <span class="attr">name</span>=<span class="string">&quot;DruidSqlRollingFile&quot;</span> <span class="attr">fileName</span>=<span class="string">&quot;$&#123;log_base_dir&#125;/druid.log&quot;</span></span></span><br><span class="line"><span class="tag">                     <span class="attr">filePattern</span>=<span class="string">&quot;$&#123;log_base_dir&#125;/$$&#123;date:yyyy_MM_dd&#125;/druid_%d&#123;yyyy_MM_dd_HH&#125;_%i.log.gz&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">PatternLayout</span> <span class="attr">pattern</span>=<span class="string">&quot;$&#123;log_pattern&#125;&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Policies</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">TimeBasedTriggeringPolicy</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">SizeBasedTriggeringPolicy</span> <span class="attr">size</span>=<span class="string">&quot;$&#123;max_single_file_size&#125;&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">Policies</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">DefaultRolloverStrategy</span> <span class="attr">fileIndex</span>=<span class="string">&quot;nomax&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Delete</span> <span class="attr">basePath</span>=<span class="string">&quot;$&#123;log_base_dir&#125;&quot;</span> <span class="attr">maxDepth</span>=<span class="string">&quot;2&quot;</span> <span class="attr">testMode</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">IfFileName</span> <span class="attr">glob</span>=<span class="string">&quot;*/druid_*.log.gz&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">IfAny</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">IfAccumulatedFileSize</span> <span class="attr">exceeds</span>=<span class="string">&quot;3GB&quot;</span>/&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">IfAccumulatedFileCount</span> <span class="attr">exceeds</span>=<span class="string">&quot;3000&quot;</span>/&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">IfLastModified</span> <span class="attr">age</span>=<span class="string">&quot;30d&quot;</span>/&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">IfAny</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">IfFileName</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">Delete</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">DefaultRolloverStrategy</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">RollingFile</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Appenders</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--定义logger，只有定义了logger并引入的appender，appender才会生效--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Loggers</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 当Logger在配置文件中声明时，就创建了一个LoggerConfig对象，两者一一对应，LoggerConfig包含一些Filter、这些Filters用于过滤传递给任意Appender的LogEvent，它还包含一些Appender的引用。Logger本身执行无指向的动作，它仅含有一个与LoggerConfig关联的名称（通过name属性指定），root Logger具有固定的默认名称，其他Logger需要指定各自的name属性值。LoggerConfig会被分配一个日志级别，通过level属性来指定。内建的日志级别按优先级从高到底排序有：OFF &gt; FATAL &gt;ERROR &gt; WARN &gt; INFO &gt; DEBUG &gt; TRACE &gt; ALL，Log4j 2 也支持自定义的日志级别。 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Root</span> <span class="attr">level</span>=<span class="string">&quot;ALL&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">AppenderRef</span> <span class="attr">ref</span>=<span class="string">&quot;Console&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">AppenderRef</span> <span class="attr">ref</span>=<span class="string">&quot;InfoLogRollingFile&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">AppenderRef</span> <span class="attr">ref</span>=<span class="string">&quot;WarnLogRollingFile&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">AppenderRef</span> <span class="attr">ref</span>=<span class="string">&quot;DebugLogRollingFile&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">AppenderRef</span> <span class="attr">ref</span>=<span class="string">&quot;ErrorLogRollingFile&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Root</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 每个LoggerConfig的日志级别如果没有显式配置，则会继承其父级LoggerConfig的日志级别，而root LoggerConfig如果没有配置日志级别，则会为其分配一个默认的ERROR级别 --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 某个Logger所允许的每条日志打印请求都会传递给其LoggerConfig中的所有Appender，也会传递给该LoggerConfig的parent LoggerConfig中的Appender，这种现象称为相加性（Additivity）。也就是说，Appender会从LoggerConfig的继承中继承相加性。这种特性可以用来汇整某几个logger的输出，可以在声明Logger的配置文件中设置additivity=&quot;false&quot;来禁用这种叠加继承 --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--记录druid-sql的记录--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Logger</span> <span class="attr">name</span>=<span class="string">&quot;druid.sql.Statement&quot;</span> <span class="attr">level</span>=<span class="string">&quot;debug&quot;</span> <span class="attr">additivity</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">&quot;DruidSqlRollingFile&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Logger</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--过滤掉spring和mybatis的一些无用的DEBUG信息--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Logger</span> <span class="attr">name</span>=<span class="string">&quot;org.springframework&quot;</span> <span class="attr">level</span>=<span class="string">&quot;INFO&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Logger</span> <span class="attr">name</span>=<span class="string">&quot;org.mybatis&quot;</span> <span class="attr">level</span>=<span class="string">&quot;INFO&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--log4j2 自带过滤日志--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Logger</span> <span class="attr">name</span>=<span class="string">&quot;org.apache.catalina.startup.DigesterFactory&quot;</span> <span class="attr">level</span>=<span class="string">&quot;error&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Logger</span> <span class="attr">name</span>=<span class="string">&quot;org.apache.catalina.util.LifecycleBase&quot;</span> <span class="attr">level</span>=<span class="string">&quot;error&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Logger</span> <span class="attr">name</span>=<span class="string">&quot;org.apache.coyote.http11.Http11NioProtocol&quot;</span> <span class="attr">level</span>=<span class="string">&quot;warn&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Logger</span> <span class="attr">name</span>=<span class="string">&quot;org.apache.sshd.common.util.SecurityUtils&quot;</span> <span class="attr">level</span>=<span class="string">&quot;warn&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Logger</span> <span class="attr">name</span>=<span class="string">&quot;org.apache.tomcat.util.net.NioSelectorPool&quot;</span> <span class="attr">level</span>=<span class="string">&quot;warn&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Logger</span> <span class="attr">name</span>=<span class="string">&quot;org.crsh.plugin&quot;</span> <span class="attr">level</span>=<span class="string">&quot;warn&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Logger</span> <span class="attr">name</span>=<span class="string">&quot;org.crsh.ssh&quot;</span> <span class="attr">level</span>=<span class="string">&quot;warn&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Logger</span> <span class="attr">name</span>=<span class="string">&quot;org.eclipse.jetty.util.component.AbstractLifeCycle&quot;</span> <span class="attr">level</span>=<span class="string">&quot;error&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Logger</span> <span class="attr">name</span>=<span class="string">&quot;org.hibernate.validator.internal.util.Version&quot;</span> <span class="attr">level</span>=<span class="string">&quot;warn&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Logger</span> <span class="attr">name</span>=<span class="string">&quot;org.springframework.boot.actuate.autoconfigure.CrshAutoConfiguration&quot;</span> <span class="attr">level</span>=<span class="string">&quot;warn&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Logger</span> <span class="attr">name</span>=<span class="string">&quot;org.springframework.boot.actuate.endpoint.jmx&quot;</span> <span class="attr">level</span>=<span class="string">&quot;warn&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Logger</span> <span class="attr">name</span>=<span class="string">&quot;org.thymeleaf&quot;</span> <span class="attr">level</span>=<span class="string">&quot;warn&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Loggers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="Log4j2基础配置"><a href="#Log4j2基础配置" class="headerlink" title="Log4j2基础配置"></a>Log4j2基础配置</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Configuration</span> <span class="attr">status</span>=<span class="string">&quot;WARN&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Appenders</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Console</span> <span class="attr">name</span>=<span class="string">&quot;Console&quot;</span> <span class="attr">target</span>=<span class="string">&quot;SYSTEM_OUT&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">PatternLayout</span> <span class="attr">pattern</span>=<span class="string">&quot;%d&#123;HH:mm:ss.SSS&#125; [%t] %-5level %logger&#123;36&#125; - %msg%n&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Console</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Appenders</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Loggers</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Root</span> <span class="attr">level</span>=<span class="string">&quot;error&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">AppenderRef</span> <span class="attr">ref</span>=<span class="string">&quot;Console&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Root</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Loggers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h2 id="Log4j2加载配置的顺序"><a href="#Log4j2加载配置的顺序" class="headerlink" title="Log4j2加载配置的顺序"></a>Log4j2加载配置的顺序</h2><ol>
<li>从系统属性<code>log4j2.configurationFile</code>获取配置文件URI<ul>
<li>可以是本地文件，也可以是网络文件。通过配置<code>log4j2.Configuration.allowedProtocols</code>（ 可选配置https, file, jar）来指定使用什么协议加载文件<code>http://</code>、<code>file://</code>等），</li>
<li>同时如果使用http协议加载时如果用到了鉴权：<ul>
<li>可以使用 <code>log4j2.Configuration.username</code> 和<code>log4j2.Configuration.password</code></li>
<li>或者使用<code>log4j2.Configuration.authenticationProvider</code>来指定鉴权的类名（<code>AuthenticationProvider</code>的子类）</li>
</ul>
</li>
</ul>
</li>
<li><code>log4j2-test.properties</code>：在找不到<code>log4j2.configurationFile</code>的情况下使用该配置文件</li>
<li><code>log4j2-test.yaml</code>或者<code>log4j2-test.yml</code>:在找不到<code>log4j2-test.properties</code>的情况下使用该配置文件</li>
<li><code>log4j2-test.json</code>或者<code>log4j2-test.jsn</code>:在找不到<code>log4j2-test.yaml</code>的情况下使用该配置文件</li>
<li><code>log4j2-test.xml</code>：在找不到<code>log4j2-test.json</code>的情况下使用该配置文件</li>
<li><code>log4j2.properties</code>：在找不到<code>log4j2-test.xml</code>的情况下使用该配置文件</li>
<li><code>log4j2.yaml</code>或<code>log4j2.yml</code>：在找不到<code>log4j2.properties</code>的情况下使用该配置文件</li>
<li><code>log4j2.json</code>或<code>log4j2.jsn</code>：在找不到<code>log4j2.yaml</code>的情况下使用该配置文件</li>
<li><code>log4j2.xml</code>：在找不到<code>log4j2.json</code>的情况下使用该配置文件</li>
<li>当上述配置文件都找不到时，则使用DefaultConfiguration的默认配置</li>
</ol>
<h2 id="Log4j2提供了根据自定义环境来使用不同的Log4j2配置（Arbiter）"><a href="#Log4j2提供了根据自定义环境来使用不同的Log4j2配置（Arbiter）" class="headerlink" title="Log4j2提供了根据自定义环境来使用不同的Log4j2配置（Arbiter）"></a>Log4j2提供了根据自定义环境来使用不同的Log4j2配置（Arbiter）</h2><p>我们实际使用日志系统时需要根据不同的环境来使用不同配置的Log4j2配置，这就用到了log4j2重要的属性arbiter配置，常用的Arbiter有<code>SystemPropertyArbiter </code>，<code>ScriptArbiter</code>，<code>SpringProfile </code></p>
<ol>
<li><p>SystemPropertyArbiter使用</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Configuration</span> <span class="attr">name</span>=<span class="string">&quot;ConfigTest&quot;</span> <span class="attr">status</span>=<span class="string">&quot;ERROR&quot;</span> <span class="attr">monitorInterval</span>=<span class="string">&quot;5&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Appenders</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">SystemPropertyArbiter</span> <span class="attr">propertyName</span>=<span class="string">&quot;env&quot;</span> <span class="attr">propertyValue</span>=<span class="string">&quot;dev&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">Console</span> <span class="attr">name</span>=<span class="string">&quot;Out&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">PatternLayout</span> <span class="attr">pattern</span>=<span class="string">&quot;%m%n&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">Console</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">SystemPropertyArbiter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">SystemPropertyArbiter</span> <span class="attr">propertyName</span>=<span class="string">&quot;env&quot;</span> <span class="attr">propertyValue</span>=<span class="string">&quot;prod&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">List</span> <span class="attr">name</span>=<span class="string">&quot;Out&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">List</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">SystemPropertyArbiter</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">  <span class="tag">&lt;/<span class="name">Appenders</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Loggers</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Logger</span> <span class="attr">name</span>=<span class="string">&quot;org.apache.test&quot;</span> <span class="attr">level</span>=<span class="string">&quot;trace&quot;</span> <span class="attr">additivity</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">AppenderRef</span> <span class="attr">ref</span>=<span class="string">&quot;Out&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Logger</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Root</span> <span class="attr">level</span>=<span class="string">&quot;error&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">AppenderRef</span> <span class="attr">ref</span>=<span class="string">&quot;Out&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Root</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Loggers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>


</li>
<li><p><code>ScriptArbiter</code>配合<code>Select</code>使用</p>
</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Configuration</span> <span class="attr">name</span>=<span class="string">&quot;ConfigTest&quot;</span> <span class="attr">status</span>=<span class="string">&quot;ERROR&quot;</span> <span class="attr">monitorInterval</span>=<span class="string">&quot;5&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Appenders</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Select</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ScriptArbiter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ScriptFile</span> <span class="attr">language</span>=<span class="string">&quot;JavaScript&quot;</span> <span class="attr">path</span>=<span class="string">&quot;src/test/resources/scripts/prodtest.js&quot;</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Console</span> <span class="attr">name</span>=<span class="string">&quot;Out&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">PatternLayout</span> <span class="attr">pattern</span>=<span class="string">&quot;%m%n&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Console</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">ScriptArbiter</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">DefaultArbiter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">List</span> <span class="attr">name</span>=<span class="string">&quot;Out&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">List</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">DefaultArbiter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Select</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Appenders</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Loggers</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Logger</span> <span class="attr">name</span>=<span class="string">&quot;org.apache.test&quot;</span> <span class="attr">level</span>=<span class="string">&quot;trace&quot;</span> <span class="attr">additivity</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">AppenderRef</span> <span class="attr">ref</span>=<span class="string">&quot;Out&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Logger</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Root</span> <span class="attr">level</span>=<span class="string">&quot;error&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">AppenderRef</span> <span class="attr">ref</span>=<span class="string">&quot;Out&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Root</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Loggers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>



<ol start="3">
<li>SpringProfile使用示例</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Configuration</span> <span class="attr">name</span>=<span class="string">&quot;ConfigTest&quot;</span> <span class="attr">status</span>=<span class="string">&quot;ERROR&quot;</span> <span class="attr">monitorInterval</span>=<span class="string">&quot;5&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Appenders</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;<span class="name">SpringProfile</span> <span class="attr">name</span>=<span class="string">&quot;dev | staging&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">Console</span> <span class="attr">name</span>=<span class="string">&quot;Out&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">PatternLayout</span> <span class="attr">pattern</span>=<span class="string">&quot;%m%n&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">Console</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">SpringProfile</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">SpringProfile</span> <span class="attr">name</span>=<span class="string">&quot;prod&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">List</span> <span class="attr">name</span>=<span class="string">&quot;Out&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">List</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">SpringProfile</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">  <span class="tag">&lt;/<span class="name">Appenders</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Loggers</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Logger</span> <span class="attr">name</span>=<span class="string">&quot;org.apache.test&quot;</span> <span class="attr">level</span>=<span class="string">&quot;trace&quot;</span> <span class="attr">additivity</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">AppenderRef</span> <span class="attr">ref</span>=<span class="string">&quot;Out&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Logger</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Root</span> <span class="attr">level</span>=<span class="string">&quot;error&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">AppenderRef</span> <span class="attr">ref</span>=<span class="string">&quot;Out&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Root</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Loggers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h2 id="使用针对某个类进行单独的日志设置"><a href="#使用针对某个类进行单独的日志设置" class="headerlink" title="使用针对某个类进行单独的日志设置"></a>使用针对某个类进行单独的日志设置</h2><p>以下示例就是针对<code>com.foo.Bar</code>该类的日志进行设置日志等级以及输出央视</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Configuration</span> <span class="attr">status</span>=<span class="string">&quot;WARN&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Appenders</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Console</span> <span class="attr">name</span>=<span class="string">&quot;Console&quot;</span> <span class="attr">target</span>=<span class="string">&quot;SYSTEM_OUT&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">PatternLayout</span> <span class="attr">pattern</span>=<span class="string">&quot;%d&#123;HH:mm:ss.SSS&#125; [%t] %-5level %logger&#123;36&#125; - %msg%n&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Console</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Appenders</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Loggers</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Logger为可选配置，additivity属性用于，默认为ture：那么当Root和Logger都能关联到该类时则会重复打印两次日志，如果关联过多可能会出现大量重复日志，所以该属性建议关闭&#x27;false&#x27; --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Logger</span> <span class="attr">name</span>=<span class="string">&quot;com.foo.Bar&quot;</span> <span class="attr">level</span>=<span class="string">&quot;trace&quot;</span> <span class="attr">additivity</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">AppenderRef</span> <span class="attr">ref</span>=<span class="string">&quot;Console&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Logger</span>&gt;</span></span><br><span class="line">     <span class="comment">&lt;!-- Root为必选配置，而且不支持name属性，且不支持additivity属性  --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Root</span> <span class="attr">level</span>=<span class="string">&quot;error&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">AppenderRef</span> <span class="attr">ref</span>=<span class="string">&quot;Console&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Root</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Loggers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h2 id="Configuration配置属性"><a href="#Configuration配置属性" class="headerlink" title="Configuration配置属性"></a><code>Configuration</code>配置属性</h2><p>通过配置<code>Configuration</code>的<code>monitorInterval</code>来配置配置文件刷新的时间间隔</p>
<table>
<thead>
<tr>
<th align="left">属性名称</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left">advertiser</td>
<td align="left">(建议属性)用于FileAppender或者SocketAppender 的配置，只有一个值可填写：<code>multicastdns</code></td>
</tr>
<tr>
<td align="left">dest</td>
<td align="left">文件路径，URL或者用于stderr的<code>err</code>, 用于stdout的<code>out</code></td>
</tr>
<tr>
<td align="left">monitorInterval</td>
<td align="left">检查Log4j2配置文件最小的时间间隔，单位（秒）</td>
</tr>
<tr>
<td align="left">name</td>
<td align="left">配置的名称</td>
</tr>
<tr>
<td align="left">packages</td>
<td align="left">(该属性已经在Log4j 3.0中移除里了)该插件用于扫描log4j注解的类，而且仅仅在首次类加载（classloader ）时进行扫描，后续不会二次扫描。</td>
</tr>
<tr>
<td align="left">schema</td>
<td align="left">schema文件的URL，用于严格校验XML文件的合法性。</td>
</tr>
<tr>
<td align="left">shutdownHook</td>
<td align="left">Log4j2的钩子，默认值<code>enable</code>,可以使用<code>disable</code>禁用。指定 Log4j 是否应在 JVM 关闭时自动关闭</td>
</tr>
<tr>
<td align="left">shutdownTimeout</td>
<td align="left">指定appender在JVM关闭前多少毫秒内关闭。默认值为0。（注：异步写入日志时立即关闭appender可能或导致部门日志丢失） ，如果 <code>shutdownHook</code>设置为<code>disable</code>  ，那么该属性则不生效。</td>
</tr>
<tr>
<td align="left">status</td>
<td align="left">日志级别：”off”, “trace”, “debug”, “info”, “warn”, “error”, “fatal”, “all”。</td>
</tr>
<tr>
<td align="left">strict</td>
<td align="left">是否严格校验XML的格式。<code>true</code>,<code>false</code></td>
</tr>
<tr>
<td align="left">verbose</td>
<td align="left">加载插件时启用诊断信息</td>
</tr>
</tbody></table>
<h2 id="配置Filter（配置过滤器，而非打印日志过滤器）"><a href="#配置Filter（配置过滤器，而非打印日志过滤器）" class="headerlink" title="配置Filter（配置过滤器，而非打印日志过滤器）"></a>配置Filter（配置过滤器，而非打印日志过滤器）</h2><p>Log4j2允许配置filter的4种方式：</p>
<ol>
<li>于<code>appenders</code>,<code>loggers </code>,<code>properties </code>同级的标签：在传入LoggerConfig前对配置进行过滤</li>
<li><code>Logger</code>的子标签：用于Logger的过滤器</li>
<li><code>Appender</code>的子标签：用于Appender的事件的过滤</li>
<li><code>Appender</code>的关联标签处：用于决定Appender是否应用于Logger</li>
</ol>
<p>示例如下：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Configuration</span> <span class="attr">status</span>=<span class="string">&quot;debug&quot;</span> <span class="attr">name</span>=<span class="string">&quot;XMLConfigTest&quot;</span> <span class="attr">packages</span>=<span class="string">&quot;org.apache.logging.log4j.test&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Property</span> <span class="attr">name</span>=<span class="string">&quot;filename&quot;</span>&gt;</span>target/test.log<span class="tag">&lt;/<span class="name">Property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Properties</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--过滤器1--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ThresholdFilter</span> <span class="attr">level</span>=<span class="string">&quot;trace&quot;</span>/&gt;</span></span><br><span class="line"> </span><br><span class="line">  <span class="tag">&lt;<span class="name">Appenders</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Console</span> <span class="attr">name</span>=<span class="string">&quot;STDOUT&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">PatternLayout</span> <span class="attr">pattern</span>=<span class="string">&quot;%m MDC%X%n&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Console</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Console</span> <span class="attr">name</span>=<span class="string">&quot;FLOW&quot;</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- this pattern outputs class name and line number --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">PatternLayout</span> <span class="attr">pattern</span>=<span class="string">&quot;%C&#123;1&#125;.%M %m %ex%n&quot;</span>/&gt;</span></span><br><span class="line">       <span class="comment">&lt;!--过滤器2--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">filters</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">MarkerFilter</span> <span class="attr">marker</span>=<span class="string">&quot;FLOW&quot;</span> <span class="attr">onMatch</span>=<span class="string">&quot;ACCEPT&quot;</span> <span class="attr">onMismatch</span>=<span class="string">&quot;NEUTRAL&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">MarkerFilter</span> <span class="attr">marker</span>=<span class="string">&quot;EXCEPTION&quot;</span> <span class="attr">onMatch</span>=<span class="string">&quot;ACCEPT&quot;</span> <span class="attr">onMismatch</span>=<span class="string">&quot;DENY&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">filters</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Console</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">File</span> <span class="attr">name</span>=<span class="string">&quot;File&quot;</span> <span class="attr">fileName</span>=<span class="string">&quot;$&#123;filename&#125;&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">PatternLayout</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>%d %p %C&#123;1.&#125; [%t] %m%n<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">PatternLayout</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">File</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Appenders</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">  <span class="tag">&lt;<span class="name">Loggers</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Logger</span> <span class="attr">name</span>=<span class="string">&quot;org.apache.logging.log4j.test1&quot;</span> <span class="attr">level</span>=<span class="string">&quot;debug&quot;</span> <span class="attr">additivity</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--过滤器3--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ThreadContextMapFilter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">KeyValuePair</span> <span class="attr">key</span>=<span class="string">&quot;test&quot;</span> <span class="attr">value</span>=<span class="string">&quot;123&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">ThreadContextMapFilter</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">AppenderRef</span> <span class="attr">ref</span>=<span class="string">&quot;STDOUT&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Logger</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;<span class="name">Logger</span> <span class="attr">name</span>=<span class="string">&quot;org.apache.logging.log4j.test2&quot;</span> <span class="attr">level</span>=<span class="string">&quot;debug&quot;</span> <span class="attr">additivity</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">Property</span> <span class="attr">name</span>=<span class="string">&quot;user&quot;</span>&gt;</span>$&#123;sys:user.name&#125;<span class="tag">&lt;/<span class="name">Property</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">AppenderRef</span> <span class="attr">ref</span>=<span class="string">&quot;File&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--过滤器4--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ThreadContextMapFilter</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">KeyValuePair</span> <span class="attr">key</span>=<span class="string">&quot;test&quot;</span> <span class="attr">value</span>=<span class="string">&quot;123&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ThreadContextMapFilter</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">AppenderRef</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">AppenderRef</span> <span class="attr">ref</span>=<span class="string">&quot;STDOUT&quot;</span> <span class="attr">level</span>=<span class="string">&quot;error&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Logger</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;<span class="name">Root</span> <span class="attr">level</span>=<span class="string">&quot;trace&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">AppenderRef</span> <span class="attr">ref</span>=<span class="string">&quot;STDOUT&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Root</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Loggers</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">Configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h2 id="自定义属性配置于使用"><a href="#自定义属性配置于使用" class="headerlink" title="自定义属性配置于使用"></a>自定义属性配置于使用</h2><p>属性配置前缀：</p>
<table>
<thead>
<tr>
<th align="left">Prefix</th>
<th align="left">Context</th>
</tr>
</thead>
<tbody><tr>
<td align="left">base64</td>
<td align="left">base64加密的数据，使用方式  <code>$&#123;base64:Base64_encoded_data&#125;</code>. 例如: <code>$&#123;base64:SGVsbG8gV29ybGQhCg==&#125;</code> 表示<code>Hello World!</code>.</td>
</tr>
<tr>
<td align="left">bundle</td>
<td align="left">属性集合，类似Map。使用方式： <code>$&#123;bundle:BundleName:BundleKey&#125;</code>. 例如: <code>$&#123;bundle:com.domain.Messages:MyKey&#125;</code>.</td>
</tr>
<tr>
<td align="left">ctx</td>
<td align="left">线程上下文（Thread Context Map (MDC)）</td>
</tr>
<tr>
<td align="left">date</td>
<td align="left">使用当前日期、时间 ，通过设置日期格式</td>
</tr>
<tr>
<td align="left">env</td>
<td align="left">获取系统变量属性，使用方式： <code>$&#123;env:ENV_NAME&#125;</code> 或者 <code>$&#123;env:ENV_NAME:-default_value&#125;</code>.</td>
</tr>
<tr>
<td align="left">jndi</td>
<td align="left">从JNDI上下文中获取对应的值。需要设置系统属性<code>log4j2.enableJndiLookup</code>为<code>true</code></td>
</tr>
<tr>
<td align="left">jvmrunargs</td>
<td align="left">通过JMX获取JVM的输入参数（非main方法的输入参数），程序中可以通过使用<code>RuntimeMXBean.getInputArguments()</code>获取。该前缀在安卓中无法使用。</td>
</tr>
<tr>
<td align="left">log4j</td>
<td align="left">从Log4j的配置属性中获取。使用方式 <code>$&#123;log4j:configLocation&#125;</code> 或者<code>$&#123;log4j:configParentLocation&#125;</code></td>
</tr>
<tr>
<td align="left">main</td>
<td align="left">通过<code>MapLookup.setMainArguments(String[])</code> 设置的值</td>
</tr>
<tr>
<td align="left">map</td>
<td align="left">从Map中获取某一属性</td>
</tr>
<tr>
<td align="left">sd</td>
<td align="left">从结构化的数据中获取对应的值。A value from a StructuredDataMessage. The key “id” will return the name of the StructuredDataId without the enterprise number. The key “type” will return the message type. Other keys will retrieve individual elements from the Map.</td>
</tr>
<tr>
<td align="left">sys</td>
<td align="left">系统属性，使用方式 <code>$&#123;sys:some.property&#125;</code> 或者 <code>$&#123;sys:some.property:-default_value&#125;</code>.</td>
</tr>
</tbody></table>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Configuration</span> <span class="attr">status</span>=<span class="string">&quot;debug&quot;</span> <span class="attr">name</span>=<span class="string">&quot;RoutingTest&quot;</span> <span class="attr">packages</span>=<span class="string">&quot;org.apache.logging.log4j.test&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Property</span> <span class="attr">name</span>=<span class="string">&quot;filename&quot;</span>&gt;</span>target/rolling1/rollingtest-$$&#123;sd:type&#125;.log<span class="tag">&lt;/<span class="name">Property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Properties</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ThresholdFilter</span> <span class="attr">level</span>=<span class="string">&quot;debug&quot;</span>/&gt;</span></span><br><span class="line"> </span><br><span class="line">  <span class="tag">&lt;<span class="name">Appenders</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Console</span> <span class="attr">name</span>=<span class="string">&quot;STDOUT&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">PatternLayout</span> <span class="attr">pattern</span>=<span class="string">&quot;%m%n&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ThresholdFilter</span> <span class="attr">level</span>=<span class="string">&quot;debug&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Console</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Routing</span> <span class="attr">name</span>=<span class="string">&quot;Routing&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">Routes</span> <span class="attr">pattern</span>=<span class="string">&quot;$$&#123;sd:type&#125;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Route</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">RollingFile</span> <span class="attr">name</span>=<span class="string">&quot;Rolling-$&#123;sd:type&#125;&quot;</span> <span class="attr">fileName</span>=<span class="string">&quot;$&#123;filename&#125;&quot;</span></span></span><br><span class="line"><span class="tag">                       <span class="attr">filePattern</span>=<span class="string">&quot;target/rolling1/test1-$&#123;sd:type&#125;.%i.log.gz&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">PatternLayout</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>%d %p %c&#123;1.&#125; [%t] %m%n<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">PatternLayout</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">SizeBasedTriggeringPolicy</span> <span class="attr">size</span>=<span class="string">&quot;500&quot;</span> /&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">RollingFile</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Route</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Route</span> <span class="attr">ref</span>=<span class="string">&quot;STDOUT&quot;</span> <span class="attr">key</span>=<span class="string">&quot;Audit&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">Routes</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Routing</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Appenders</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">  <span class="tag">&lt;<span class="name">Loggers</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Logger</span> <span class="attr">name</span>=<span class="string">&quot;EventLogger&quot;</span> <span class="attr">level</span>=<span class="string">&quot;info&quot;</span> <span class="attr">additivity</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">AppenderRef</span> <span class="attr">ref</span>=<span class="string">&quot;Routing&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Logger</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;<span class="name">Root</span> <span class="attr">level</span>=<span class="string">&quot;error&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">AppenderRef</span> <span class="attr">ref</span>=<span class="string">&quot;STDOUT&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Root</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Loggers</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;/<span class="name">Configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>





<h2 id="使用Scripts"><a href="#使用Scripts" class="headerlink" title="使用Scripts"></a>使用Scripts</h2><p>可以使用的标签：</p>
<ol>
<li><code>&lt;script&gt;</code>：可以包含Script文本</li>
<li><code>&lt;scriptFile&gt;</code>：</li>
<li><code>&lt;scriptRef&gt;</code></li>
</ol>
<p>使用示例：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Configuration</span> <span class="attr">status</span>=<span class="string">&quot;debug&quot;</span> <span class="attr">name</span>=<span class="string">&quot;RoutingTest&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Scripts</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Script</span> <span class="attr">name</span>=<span class="string">&quot;selector&quot;</span> <span class="attr">language</span>=<span class="string">&quot;javascript&quot;</span>&gt;</span><span class="language-handlebars"><span class="language-xml">&lt;![CDATA[</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">            var result;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">            if (logEvent.getLoggerName().equals(&quot;JavascriptNoLocation&quot;)) &#123;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">                result = &quot;NoLocation&quot;;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">            &#125; else if (logEvent.getMarker() != null &amp;&amp; logEvent.getMarker().isInstanceOf(&quot;FLOW&quot;)) &#123;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">                result = &quot;Flow&quot;;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">            &#125;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">            result;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">            ]]&gt;</span></span><span class="tag">&lt;/<span class="name">Script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ScriptFile</span> <span class="attr">name</span>=<span class="string">&quot;groovy.filter&quot;</span> <span class="attr">path</span>=<span class="string">&quot;scripts/filter.groovy&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Scripts</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">  <span class="tag">&lt;<span class="name">Appenders</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Console</span> <span class="attr">name</span>=<span class="string">&quot;STDOUT&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ScriptPatternSelector</span> <span class="attr">defaultPattern</span>=<span class="string">&quot;%d %p %m%n&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ScriptRef</span> <span class="attr">ref</span>=<span class="string">&quot;selector&quot;</span>/&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">PatternMatch</span> <span class="attr">key</span>=<span class="string">&quot;NoLocation&quot;</span> <span class="attr">pattern</span>=<span class="string">&quot;[%-5level] %c&#123;1.&#125; %msg%n&quot;</span>/&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">PatternMatch</span> <span class="attr">key</span>=<span class="string">&quot;Flow&quot;</span> <span class="attr">pattern</span>=<span class="string">&quot;[%-5level] %c&#123;1.&#125; ====== %C&#123;1.&#125;.%M:%L %msg ======%n&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">ScriptPatternSelector</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">PatternLayout</span> <span class="attr">pattern</span>=<span class="string">&quot;%m%n&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Console</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Appenders</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">  <span class="tag">&lt;<span class="name">Loggers</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Logger</span> <span class="attr">name</span>=<span class="string">&quot;EventLogger&quot;</span> <span class="attr">level</span>=<span class="string">&quot;info&quot;</span> <span class="attr">additivity</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ScriptFilter</span> <span class="attr">onMatch</span>=<span class="string">&quot;ACCEPT&quot;</span> <span class="attr">onMisMatch</span>=<span class="string">&quot;DENY&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">Script</span> <span class="attr">name</span>=<span class="string">&quot;GroovyFilter&quot;</span> <span class="attr">language</span>=<span class="string">&quot;groovy&quot;</span>&gt;</span><span class="language-javascript">&lt;![<span class="variable constant_">CDATA</span>[</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">if</span> (logEvent.<span class="title function_">getMarker</span>() != <span class="literal">null</span> &amp;&amp; logEvent.<span class="title function_">getMarker</span>().<span class="title function_">isInstanceOf</span>(<span class="string">&quot;FLOW&quot;</span>)) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">return</span> <span class="literal">true</span>;</span></span><br><span class="line"><span class="language-javascript">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (logEvent.<span class="title function_">getContextMap</span>().<span class="title function_">containsKey</span>(<span class="string">&quot;UserId&quot;</span>)) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">return</span> <span class="literal">true</span>;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line"><span class="language-javascript">            ]]&gt;</span></span><br><span class="line"><span class="language-javascript">          </span><span class="tag">&lt;/<span class="name">Script</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ScriptFilter</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">AppenderRef</span> <span class="attr">ref</span>=<span class="string">&quot;STDOUT&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Logger</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;<span class="name">Root</span> <span class="attr">level</span>=<span class="string">&quot;error&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ScriptFilter</span> <span class="attr">onMatch</span>=<span class="string">&quot;ACCEPT&quot;</span> <span class="attr">onMisMatch</span>=<span class="string">&quot;DENY&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ScriptRef</span> <span class="attr">ref</span>=<span class="string">&quot;groovy.filter&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">ScriptFilter</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">AppenderRef</span> <span class="attr">ref</span>=<span class="string">&quot;STDOUT&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Root</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Loggers</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;/<span class="name">Configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>运维安装</category>
        <category>日志系统</category>
      </categories>
  </entry>
  <entry>
    <title>Mac卸载Java</title>
    <url>/2022/12/14/Mac%E5%8D%B8%E8%BD%BDJava/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><p>打开命令好终端执行以下命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo rm -fr /Library/Internet\ Plug-Ins/JavaAppletPlugin.plugin</span><br><span class="line"></span><br><span class="line">sudo rm -fr /Library/PreferencesPanes/JavaControlPanel.prefPane</span><br><span class="line"></span><br><span class="line">sudo rm -fr /Library/Application\ Support/Java</span><br><span class="line"></span><br><span class="line"># /Library/Java/JavaVirtualMachines 目录下为安装的所有版本JDK</span><br><span class="line">sudo rm -rf /Library/Java</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>mac</tag>
        <tag>开发</tag>
      </tags>
  </entry>
  <entry>
    <title>Minio安装</title>
    <url>/2023/03/10/Minio%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><p>[toc]</p>
<h1 id="安装准备"><a href="#安装准备" class="headerlink" title="安装准备"></a>安装准备</h1><h1 id="单磁盘单应用安装"><a href="#单磁盘单应用安装" class="headerlink" title="单磁盘单应用安装"></a>单磁盘单应用安装</h1><h1 id="多磁盘但应用安装"><a href="#多磁盘但应用安装" class="headerlink" title="多磁盘但应用安装"></a>多磁盘但应用安装</h1><h1 id="多磁盘多应用安装"><a href="#多磁盘多应用安装" class="headerlink" title="多磁盘多应用安装"></a>多磁盘多应用安装</h1>]]></content>
      <categories>
        <category>运维安装</category>
        <category>分布式存储</category>
      </categories>
  </entry>
  <entry>
    <title>RabbitMQ安装</title>
    <url>/2023/03/10/RabbitMQ%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><p>[toc]</p>
]]></content>
      <categories>
        <category>运维安装</category>
        <category>MQ</category>
        <category>RabbitMQ</category>
      </categories>
  </entry>
  <entry>
    <title>Redis7.0安装</title>
    <url>/2023/02/27/Redis7.0%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><p>[toc]</p>
<h1 id="安装准备"><a href="#安装准备" class="headerlink" title="安装准备"></a>安装准备</h1><p>下载地址：<a href="https://download.redis.io/redis-stable.tar.gz">https://download.redis.io/redis-stable.tar.gz</a></p>
<h1 id="编译源码文件"><a href="#编译源码文件" class="headerlink" title="编译源码文件"></a>编译源码文件</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 切换到安装编译目录</span></span><br><span class="line"><span class="built_in">cd</span> /opt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解压文件</span></span><br><span class="line">tar -zxvf 下载路径/redis-stable.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译安装redis</span></span><br><span class="line"><span class="built_in">cd</span> redis-stable</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure>



<h1 id="Redis默认安装路径"><a href="#Redis默认安装路径" class="headerlink" title="Redis默认安装路径"></a>Redis默认安装路径</h1><p>（1）redis源码编译默认的安装路径<code>/usr/local/bin</code></p>
<p>（2）配置文件可以将源码编译文件中的<code>redis.conf</code>、<code>sentinel.conf</code>拷贝放在<code>/etc/redis</code>目录下，</p>
<p>（3）启动时指定配置命令：<code>redis-server /etc/redis/redis.conf</code></p>
]]></content>
      <categories>
        <category>运维安装</category>
        <category>缓存</category>
      </categories>
  </entry>
  <entry>
    <title>MySQL备份之ercona-xtrabackup</title>
    <url>/2023/02/25/MySQL%E5%A4%87%E4%BB%BD%E4%B9%8Bercona-xtrabackup/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><h1 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h1><p>下载地址：</p>
<p>xtrabackup 8.0 EL7版本：<a href="https://downloads.percona.com/downloads/Percona-XtraBackup-8.0/Percona-XtraBackup-8.0.32-25/binary/redhat/7/x86_64/percona-xtrabackup-80-8.0.32-25.1.el7.x86_64.rpm">https://downloads.percona.com/downloads/Percona-XtraBackup-8.0/Percona-XtraBackup-8.0.32-25/binary/redhat/7/x86_64/percona-xtrabackup-80-8.0.32-25.1.el7.x86_64.rpm</a></p>
<p>xtrabackup 8.0 EL8版本：<a href="https://downloads.percona.com/downloads/Percona-XtraBackup-8.0/Percona-XtraBackup-8.0.32-25/binary/redhat/8/x86_64/percona-xtrabackup-80-8.0.32-25.1.el8.x86_64.rpm">https://downloads.percona.com/downloads/Percona-XtraBackup-8.0/Percona-XtraBackup-8.0.32-25/binary/redhat/8/x86_64/percona-xtrabackup-80-8.0.32-25.1.el8.x86_64.rpm</a></p>
<p>xtrabackup 2.4  EL7版本：<a href="https://downloads.percona.com/downloads/Percona-XtraBackup-2.4/Percona-XtraBackup-2.4.27/binary/redhat/7/x86_64/percona-xtrabackup-24-2.4.27-1.el7.x86_64.rpm">https://downloads.percona.com/downloads/Percona-XtraBackup-2.4/Percona-XtraBackup-2.4.27/binary/redhat/7/x86_64/percona-xtrabackup-24-2.4.27-1.el7.x86_64.rpm</a></p>
<p>xtrabackup 2.4  EL8版本：<a href="https://downloads.percona.com/downloads/Percona-XtraBackup-2.4/Percona-XtraBackup-2.4.27/binary/redhat/8/x86_64/percona-xtrabackup-24-2.4.27-1.el8.x86_64.rpm">https://downloads.percona.com/downloads/Percona-XtraBackup-2.4/Percona-XtraBackup-2.4.27/binary/redhat/8/x86_64/percona-xtrabackup-24-2.4.27-1.el8.x86_64.rpm</a></p>
<p>当前Xtrabackup存在两个版本：Xtrabackup 2.4.x与8.0.x，分别用于备份MySQL 5.x与MySQL 8.0.x 版本。</p>
<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>执行以下命令安装：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 本文使用的是el7版本的linux</span></span><br><span class="line">rpm -ivh percona-xtrabackup-80-8.0.32-25.1.el7.x86_64.rpm</span><br></pre></td></tr></table></figure>



<h2 id="安装报错"><a href="#安装报错" class="headerlink" title="安装报错"></a>安装报错</h2><blockquote>
<p>warning: percona-xtrabackup-80-8.0.32-25.1.el7.x86_64.rpm: Header V4 RSA&#x2F;SHA256 Signature, key ID 8507efa5: NOKEY<br>error: Failed dependencies:<br>libev.so.4()(64bit) is needed by percona-xtrabackup-80-8.0.32-25.1.el7.x86_64<br>perl(DBD::mysql) is needed by percona-xtrabackup-80-8.0.32-25.1.el7.x86_64<br>perl(Digest::MD5) is needed by percona-xtrabackup-80-8.0.32-25.1.el7.x86_64</p>
</blockquote>
<p>解决：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 1、首先安装Perl相关的库</span></span><br><span class="line">yum install perl-DBD-MySQL -y</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2、安装perl-Digest-MD5</span></span><br><span class="line">yum install perl-Digest-MD5</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3、然后安装libev.so.4，无法使用yum安装libev.so.4，libev.so属于libev-devel下的</span></span><br><span class="line"><span class="comment"># 可以使用yum安装libev-devel，</span></span><br><span class="line"><span class="comment"># 或者下载rpm包安装:	http://mirror.centos.org/centos/7/extras/x86_64/Packages/libev-devel-4.15-7.el7.x86_64.rpm</span></span><br><span class="line">yum install libev-devel -y</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>



<p>注：rpm包搜索<br>1、<a href="https://rpmfind.net/linux/rpm2html/search.php?query=&submit=Search+...&system=&arch=">https://rpmfind.net/linux/rpm2html/search.php?query=&amp;submit=Search+...&amp;system=&amp;arch=</a></p>
<p>2、<a href="https://pkgs.org/">https://pkgs.org/</a></p>
<h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><blockquote>
<ol>
<li>全量备份</li>
<li>增量备份</li>
<li>压缩备份</li>
<li>加密备份</li>
</ol>
</blockquote>
<h2 id="参数详解"><a href="#参数详解" class="headerlink" title="参数详解"></a>参数详解</h2><blockquote>
<p>innobackupex innobackupex是xtrabackup的软链接。Innobackupex仍然支持2.2版本所有功能和语法，但现在已被废弃，并将在下一个主要版本中删除。 xtrabackup 一个编译的C二进制文件，它提供了备份整个MySQL数据库实例的功能，包括MyISAM、InnoDB和XtraDB表。 xbcrypt 用于加密和解密备份文件的实用程序。 xbstream 允许流和从xbstream格式提取文件的实用程序。 xbcloud 实用程序，用于从&#x2F;到云下载和上传xbstream存档的全部或部分。  强烈推荐使用xtrabackup工具进行日常备份。</p>
<p>常用参数如下：</p>
<p>1）–backup   执行备份必须的选项 </p>
<p>2）–target-dir   指定备份到该目录，如果不存在目录，会自动创建（注意不能是级联目录都不存在）    </p>
<p>3）DSN（-h -P -u -p -S）      指定ip，port，user，password，socket等    </p>
<p>4）以下两个参数控制当系统中出现长事务时xtrabackup执行FTWRL锁的行为</p>
<p>–ftwrl-wait-threshold&#x3D;SECONDS 依赖于–ftwrl-wait-timeout&#x3D;SECONDS，默认值60s，当–ftwrl-wait-timeout&#x3D;0时，该参数不生效 </p>
<p>–ftwrl-wait-timeout&#x3D;SECONDS,默认值0，表示不关注长事务，直接执行FTWRL锁。如果非0，表示xtrabackup通过show processlist的方式，获取是否存在sql已经执行超过–ftwrl-wait-threshold 的值，如果超过了，则在执行FTWRL锁之前等待–ftwrl-wait-timeout时间，如果该sql未执行完成，xtrabackup进程退出备份。如果一个慢sql刚刚开始执行，执行时间还未超过–ftwrl-wait-threshold 的值，那么xtrabackup还是会执行FTWRL锁，这时候执行FTWRL还是会被block住。</p>
<p>5） –apply-log-only    增量备份时，在prepare阶段应用redo日志   </p>
<p>6）–binlog-info   此选项控制xtrabackup备份工具应如何检索与备份对应二进制日志坐标，一般备份无需指定该参数，默认即可   </p>
<p>OFF: 不获取binlog坐标，不会生成xtrabackup_binlog_info文件   </p>
<p>ON: 遍历binlog文件获取坐标，生成xtrabackup_binlog_info文件   </p>
<p>LOCKLESS:目前只在Percona Server实现，官方MySQL版本不支持该值   </p>
<p>AUTO:默认值，在ON和LOCKLESS之间自动选择，优先选择LOCKLESS，如果不支持LOCKLESS，那么选择ON </p>
<p>7）–compress   此选项告诉xtrabackup使用指定的压缩算法压缩所有输出数据，包括事务日志文件和元数据文件。 目前唯一支持的算法是quicklz，   结果文件具有qpress存档格式，如*.qp格式    </p>
<p>8）–compress-threads&#x3D;    此选项指定xtrabackup用于并行数据压缩的工作线程数。 此选项默认为1。 并行压缩可以与并行文件复制–parallel一起使用。    例如， –parallel&#x3D;4 –compress –compress-threads&#x3D;2 将创建4个I&#x2F;O线程，这些线程将读取数据并将其管道到2个压缩线程。  </p>
<p>9）–copy-back   将先前备份的所有文件从备份目录复制到实例的数据目录。    </p>
<p>10）–move-back   将先前备份的所有文件从备份目录move到实例的数据目录。 </p>
<p>11）–databases&#x3D;   此选项指定应备份的数据库和表列表。 该选项接受表单“databasename1[.table_name1]databasename2[.table_name2]…”的列表]</p>
<p>12）–databases-exclude&#x3D;name 不包括基于名称的数据库，操作方式与–databases相同，但匹配的名称不包括在备份中。 请注意，此选项比–databases具有更高的优先级。 </p>
<p>13）–databases-file&#x3D;   此选项指定文件的路径，该文件包含应备份的数据库和表列表。 该文件可以包含表单databasename1[.table_name1]的列表元素，每行一个元素。 </p>
<p>14）–decompress    解压.qp文件，可以跟–parallel配合使用，采用多线程解压 </p>
<p>15）–defaults-file&#x3D;[MY.CNF]    指定my.cnf的路径     </p>
<p>16）–export    用来恢复单个表     </p>
<p>17）–parallel&#x3D;    采用多线程备份，可以搭配copy-back，–decompress     </p>
<p>18）–prepare    应用redlo日志，达到数据一致性     </p>
<p>19）–safe-slave-backup 当指定时，xtrabackup将在运行FLUSH TABLES WITH READ LOCK之前停止从SQL线程，并等待直到SHOW状态中的Slave_open_temp_tables为零才开始备份。  如果没有打开的临时表，将进行备份，否则将启动和停止SQL线程，直到没有打开的临时表。 如果Slave_open_temp_tables在xtrabackup-safe-slave-backup-timeout秒后没有变为零， 则备份将失败。 备份完成后将重新启动从SQL线程。这个选项是为了处理复制临时表问题而实现的，row格式不存在该问题。    </p>
<p>20）–slave-info 此选项在备份从服务器时非常有用。 它打印主服务器的二进制日志位置。 它还将二进制日志坐标写入xtrabackup_slave_info文件，作为Change MASTER命令。  可以通过xtrabackup_slave_info文件中的二进制日志位置的CHANGE MASTER命令来设置此主服务器的新从服务器。 </p>
<p>21）–throttle&#x3D;  用来限制带宽，默认大小10MB, 如果–throttle&#x3D;1表示带宽为10MB&#x2F;S</p>
</blockquote>
<h2 id="全量备份"><a href="#全量备份" class="headerlink" title="全量备份"></a>全量备份</h2><p>1、备份</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建备份目录</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /var/local/mysqlback</span><br><span class="line"><span class="comment"># 修改目录权限</span></span><br><span class="line"><span class="built_in">chown</span> -R mysql:mysql /var/local/mysqlback</span><br><span class="line"><span class="comment"># 全量备份</span></span><br><span class="line">innobackupex --user=数据库账号 --password=<span class="string">&#x27;数据库密码&#x27;</span> /var/local/mysqlback</span><br></pre></td></tr></table></figure>



<p>2、恢复</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 1、模拟破坏</span></span><br><span class="line">systemctl stop mysqld</span><br><span class="line"><span class="comment"># 删除所有数据</span></span><br><span class="line"><span class="built_in">rm</span> -rf /var/lib/mysql/* </span><br><span class="line"><span class="built_in">rm</span> -rf /var/log/mysqld.log</span><br><span class="line"><span class="built_in">rm</span> -rf /var/log/mysql-slow/slow.log</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2、回滚事务:</span></span><br><span class="line">innobackupex --apply-log /var/local/mysqlback/2023-3-0*</span><br><span class="line"><span class="comment"># 备注：为什么会有回滚这一项呢？个人理解是，备份出数据时，类似在备份包外加了一个&#x27;锁&#x27;，而回滚则是&#x27;去锁&#x27;的过程，&#x27;去锁&#x27;后才能把数据恢复到库目录。这也正是为什么在导出包时要做个压缩备份，应为&#x27;去锁&#x27;后备份包就不完整了，打包后更安全，假如恢复失败，还可以恢复备份包。</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 3、恢复数据</span></span><br><span class="line">innobackupex --copy-back /var/local/mysqlback/2023-3-0*</span><br></pre></td></tr></table></figure>



<h2 id="增量备份"><a href="#增量备份" class="headerlink" title="增量备份"></a>增量备份</h2><p>1、备份</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 首先全量备份一次</span></span><br><span class="line">innobackupex --user=数据库账号 --password=<span class="string">&#x27;数据库密码&#x27;</span> /xtrabackup/</span><br><span class="line"><span class="comment"># 假设全量生成的备份包为2023-3-0</span></span><br><span class="line"><span class="comment"># 第一次增量备份</span></span><br><span class="line">innobackupex --user=数据库账号 --password=<span class="string">&#x27;数据库密码&#x27;</span> --incremental /xtrabackup/ --incremental-basedir=/local/mysqlback/2023-3-0</span><br><span class="line"><span class="comment">#（基于全量的包）</span></span><br><span class="line"><span class="comment"># 假设第一次增量生成的包为 2023-3-1 </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 第二次增量备份</span></span><br><span class="line">innobackupex --user=数据库账号 --password=<span class="string">&#x27;数据库密码&#x27;</span> --incremental /xtrabackup/ --incremental-basedir=/local/mysqlback/2023-3-1</span><br><span class="line"><span class="comment">#（基于第一次增量包）</span></span><br><span class="line"><span class="comment"># 假设第二次增量生成的包为 2023-3-2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#第三次增量备份</span></span><br><span class="line">innobackupex --user=数据库账号 --password=<span class="string">&#x27;数据库密码&#x27;</span> --incremental /xtrabackup/ --incremental-basedir=/local/mysqlback/2023-3-2</span><br><span class="line"><span class="comment">#（基于第二次增量包）</span></span><br><span class="line"><span class="comment"># 假设第三次增量生成的包为 2023-3-3</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>2、恢复</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 首先回滚备份包</span></span><br><span class="line"><span class="comment"># 1. 先回滚全量的包</span></span><br><span class="line">innobackupex --apply-log --redo-only /local/mysqlback/2023-3-0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 回滚第一次增量包</span></span><br><span class="line">innobackupex --apply-log --redo-only /local/mysqlback/2023-3-0    --incremental-dir=/local/mysqlback/2023-3-1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3. 回滚第二次增量包</span></span><br><span class="line">innobackupex --apply-log --redo-only /local/mysqlback/2023-3-0    --incremental-dir=/local/mysqlback/2023-3-2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4. 回滚第三次增量包</span></span><br><span class="line">innobackupex --apply-log --redo-only /local/mysqlback/2023-3-0    --incremental-dir=/local/mysqlback/2023-3-3</span><br><span class="line"></span><br><span class="line"><span class="comment"># 备注：此时回滚的所有增量数据都到了第一次备份的全量包里  这时数据还没有到达库指定目录</span></span><br><span class="line"><span class="comment"># 接下来我们进行恢复。</span></span><br><span class="line"><span class="comment">#5. 恢复回滚好的 第一次全量包</span></span><br><span class="line"></span><br><span class="line">innobackupex --copy-back /xtrabackup/2023-3-0</span><br></pre></td></tr></table></figure>



<h2 id="差异备份"><a href="#差异备份" class="headerlink" title="差异备份"></a>差异备份</h2><p>1、备份</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 1、首先进行一次完全备份</span></span><br><span class="line">innobackupex --user=数据库账号 --password=<span class="string">&#x27;数据库密码&#x27;</span> /local/mysqlback</span><br><span class="line"><span class="comment"># 假设完全备份的包是2023-3-0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 进行第一次差异备份</span></span><br><span class="line">innobackupex --user=数据库账号 --password=<span class="string">&#x27;数据库密码&#x27;</span> --incremental /local/mysqlback --incremental-basedir=/local/mysqlback/2023-3-0</span><br><span class="line"><span class="comment"># 假设第一次差异备份包是2023-3-1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2、进行第二次差异备份</span></span><br><span class="line">innobackupex --user=数据库账号 --password=<span class="string">&#x27;数据库密码&#x27;</span> --incremental /local/mysqlback --incremental-basedir=/local/mysqlback/2023-3-1  <span class="comment">#还是基于# 第一次的全备</span></span><br><span class="line"><span class="comment"># 假设第二次差异备份的包是2023-3-2</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 3、进行第三次差异备份</span></span><br><span class="line">innobackupex --user=数据库账号 --password=<span class="string">&#x27;数据库密码&#x27;</span> --incremental /local/mysqlback --incremental-basedir=/local/mysqlback/2023-3-1  <span class="comment">#还是基于# 第一次的全备</span></span><br><span class="line"><span class="comment"># 假设第三次差异备份的包是2023-3-3</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 4、进行第四次差异备份</span></span><br><span class="line">innobackupex --user=数据库账号 --password=<span class="string">&#x27;数据库密码&#x27;</span> --incremental /local/mysqlback --incremental-basedir=/local/mysqlback/2023-3-1  </span><br><span class="line"><span class="comment"># 还是基于# 第一次的全备</span></span><br><span class="line"><span class="comment"># 假设第四次差异备份的包是2023-3-4</span></span><br></pre></td></tr></table></figure>



<p>2、恢复</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 假设恢复到第三次差异备份的数据</span></span><br><span class="line"><span class="comment"># 我们回滚时候只需要回 &#x27;滚完全备份包&#x27; 和 &#x27;第三次差异包&#x27; 备份即可。</span></span><br><span class="line"><span class="comment"># 1. 回滚</span></span><br><span class="line"><span class="comment"># 回滚全量备份包</span></span><br><span class="line">innobackupex --apply-log --redo-only /xtrabackup/2023-3-0</span><br><span class="line"><span class="comment"># 回滚第三次差异备份包</span></span><br><span class="line">innobackupex --apply-log --redo-only /xtrabackup/2023-3-0 --incremental-dir=/xtrabacku/2023-3-3</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.进行恢复</span></span><br><span class="line"><span class="comment"># 恢复回滚好的 第一次全量包</span></span><br><span class="line">innobackupex --copy-back /xtrabackup/2023-3-0</span><br></pre></td></tr></table></figure>





<blockquote>
<p>You can download full text of the license on <a href="http://www.gnu.org/licenses/gpl-2.0.txt">http://www.gnu.org/licenses/gpl-2.0.txt</a></p>
<p>Usage: [xtrabackup [–defaults-file&#x3D;#] –backup | xtrabackup [–defaults-file&#x3D;#] –prepare] [OPTIONS]</p>
<p>Default options are read from the following files in the given order:<br>&#x2F;etc&#x2F;my.cnf &#x2F;etc&#x2F;mysql&#x2F;my.cnf &#x2F;usr&#x2F;etc&#x2F;my.cnf ~&#x2F;.my.cnf<br>The following groups are read: xtrabackup mysqld<br>The following options may be given as the first argument:<br>–print-defaults                               Print the program argument list and exit.<br>–no-defaults                                   Don’t read default options from any option file, except for login file.<br>–defaults-file&#x3D;#                             Only read default options from the given file #.<br>–defaults-extra-file&#x3D;#                   Read this file after the global files are read.<br>–defaults-group-suffix&#x3D;#              Also read groups with concat(group, suffix)<br>–login-path&#x3D;#                                 Read this path from the login file.<br>  -v, –version                                   print xtrabackup version information<br>  –target-dir&#x3D;name                        destination directory<br>  –backup                                        take backup to target-dir<br>  –stats                                             calc statistic of datadir (offline mysqld is recommended)<br>  –prepare                                       prepare a backup for starting mysql server on the backup.<br>  –export                                          create files to import to another database when prepare.<br>  –apply-log-only                            stop recovery process not to progress LSN after applying log when prepare.<br>  –print-param                                print parameter of mysqld needed for copyback.<br>  –use-memory&#x3D;#                          The value is used instead of buffer_pool_size<br>  –throttle&#x3D;#                                   limit count of IO operations (pairs of read&amp;write) per second to IOS values (for ‘–backup’)<br>  –log[&#x3D;name]                                 Ignored option for MySQL option compatibility<br>  –log-copy-interval&#x3D;#                   time interval between checks done by log copying thread in milliseconds (default is 1 second).<br>  –extra-lsndir&#x3D;name                    (for –backup): save an extra copy of the xtrabackup_checkpoints file in this directory.<br>  –incremental-lsn&#x3D;name             (for –backup): copy only .ibd pages newer than specified LSN ‘high:low’. ##ATTENTION##: If a wrong LSN value is specified, it is impossible to diagnose this, causing the backup to be unusable. Be careful!<br>  –incremental-basedir&#x3D;name     (for –backup): copy only .ibd pages newer than backup at specified directory.<br>  –incremental-dir&#x3D;name              (for –prepare): apply .delta files and logfile in the specified directory.<br>  –to-archived-lsn&#x3D;#                      Don’t apply archived logs with bigger log sequence number.<br>  –tables&#x3D;name                               filtering by regexp for table names.<br>  –tables-file&#x3D;name                        filtering by list of the exact database.table name in the file.<br>  –databases&#x3D;name                       filtering by list of databases.<br>  –databases-file&#x3D;name                 filtering by list of databases in the file.<br>  –tables-exclude&#x3D;name                filtering by regexp for table names. Operates the same way as –tables, but matched names are excluded from backup. Note that this option has a higher priority than  –tables.</p>
<p>  –databases-exclude&#x3D;name         Excluding databases based on name, Operates the same way as –databases, but matched names are excluded from backup. Note that this option has a higher priority than –databases.</p>
<p>  –create-ib-logfile                          ** not work for now** creates ib_logfile* also after  ‘–prepare’. ### If you want create ib_logfile*, only re-execute this command in same options. ###</p>
<p>  –stream&#x3D;name                              Stream all backup files to the standard output in the specified format. Currently supported formats are ‘tar’ and ‘xbstream’.</p>
<p>  –compress[&#x3D;name]                      Compress individual backup files using the specified compression algorithm. Currently the only supported algorithm is ‘quicklz’. It is also the default algorithm,  i.e. the one used when –compress is used without an argument.</p>
<p>  –compress-threads&#x3D;#                  Number of threads for parallel data compression. The default value is 1.<br>  –compress-chunk-size&#x3D;#             Size of working buffer(s) for compression threads in bytes. The default value is 64K.<br>  –encrypt&#x3D;name                              Encrypt individual backup files using the specified encryption algorithm.<br>  –encrypt-key&#x3D;name                       Encryption key to use.<br>  –encrypt-key-file&#x3D;name                File which contains encryption key to use.<br>  –encrypt-threads&#x3D;#                       Number of threads for parallel data encryption. The default value is 1.<br>  –encrypt-chunk-size&#x3D;#                 Size of working buffer(S) for encryption threads in bytes. The default value is 64K.<br>  –compact                                        Create a compact backup by skipping secondary index pages.<br>  –rebuild-indexes                            Rebuild secondary indexes in InnoDB tables after applying the log. Only has effect with –prepare.<br>  –rebuild-threads&#x3D;#                       Use this number of threads to rebuild indexes in a compact backup. Only has effect with –prepare and –rebuild-indexes.</p>
<p>  –incremental-force-scan              Perform a full-scan incremental backup even in the presence of changed page bitmap data<br>  –close-files                                      do not keep files opened. Use at your own risk.<br>  –core-file                                         Write core on fatal signals<br>  –copy-back                                     Copy all the files in a previously made backup from the backup directory to their original locations.<br>  –move-back                                    Move all the files in a previously made backup from the backup directory to the actual datadir location. Use with caution, as it removes backup files.</p>
<p>  –galera-info                                    This options creates the xtrabackup_galera_info file which contains the local node state at the time of the backup. Option should be used when performing the backup of Percona-XtraDB-Cluster. Has no effect when backup locks are used to create the backup.</p>
<p>  –slave-info                                      This option is useful when backing up a replication slave server. It prints the binary log position and name of the master server. It also writes this information to the “xtrabackup_slave_info” file as a “CHANGE MASTER” command. A new slave for this master can be set up by starting a slave server on this backup and issuing a “CHANGE MASTER” command with the binary log position saved in the “xtrabackup_slave_info” file.</p>
<p>  –no-lock                                           Use this option to disable table lock with “FLUSH TABLES WITH READ LOCK”. Use it only if ALL your tables are InnoDB and you DO NOT CARE about the binary log position of the backup. This option shouldn’t be used if there are any DDL statements being executed or if any updates are happening on non-InnoDB tables (this includes the system MyISAM tables in the mysql database), otherwise it could lead to an inconsistent backup. If you are considering to use –no-lock because your backups are failing to acquire the lock, this could be because of incoming replication events preventing the lock from succeeding. Please try using –safe-slave-backup to momentarily stop the replication slave thread, this may help the backup to succeed and you then don’t need to resort to using this option.</p>
<p>  –lock-ddl                                          Issue LOCK TABLES FOR BACKUP if it is supported by server at the beginning of the backup to block all DDL operations.</p>
<p>  –lock-ddl-timeout&#x3D;#                      If LOCK TABLES FOR BACKUP does not return within given timeout, abort the backup.<br>  –lock-ddl-per-table                        Lock DDL for each table before xtrabackup starts the copy phase and until the backup is completed.<br>  –backup-lock-timeout&#x3D;#              Timeout in seconds for attempts to acquire metadata locks.<br>  –backup-lock-retry-count&#x3D;#        Number of attempts to acquire metadata locks.<br>  –dump-innodb-buffer-pool          Instruct MySQL server to dump innodb buffer pool by issuing a SET GLOBAL innodb_buffer_pool_dump_now&#x3D;ON<br>  –dump-innodb-buffer-pool-timeout&#x3D;#    This option specifies the number of seconds xtrabackup waits for innodb buffer pool dump to complete<br>  –dump-innodb-buffer-pool-pct&#x3D;#         This option specifies the percentage of buffer pool to be dumped </p>
<p>  –safe-slave-backup                         Stop slave SQL thread and wait to start backup until Slave_open_temp_tables in “SHOW STATUS” is zero. If there are no open temporary tables, the backup will take place, otherwise the SQL thread will be started and stopped until there are no open temporary tables. The backup will fail if Slave_open_temp_tables does not become zero after –safe-slave-backup-timeout seconds. The slave SQL thread will be restarted when the backup finishes.</p>
<p>  –rsync                                               Uses the rsync utility to optimize local file transfers. When this option is specified, innobackupex uses rsync to copy all non-InnoDB files instead of spawning a separate cp for each file, which can be much faster for servers with a large number of databases or tables.  This option cannot be used together with –stream.</p>
<p>  –force-non-empty-directories       This option, when specified, makes –copy-back or  –move-back transfer files to non-empty directories. Note that no existing files will be overwritten. If –copy-back or –nove-back has to copy a file from the backup directory which already exists in the destination directory, it will still fail with an error.</p>
<p>  –no-version-check                           This option disables the version check which is enabled by the –version-check option.<br>  –tables-compatibility-check           This option enables engine compatibility warning.  (Defaults to on; use –skip-tables-compatibility-check to disable.)</p>
<p>  –no-backup-locks                             This option controls if backup locks should be used instead of FLUSH TABLES WITH READ LOCK on the backup stage. The option has no effect when backup locks are not supported by the server. This option is enabled by default, disable with –no-backup-locks.</p>
<p>  –decompress                                    Decompresses all files with the .qp extension in a backup previously made with the –compress option.<br>  -u, –user&#x3D;name                                This option specifies the MySQL username used when  connecting to the server, if that’s not the current user. The option accepts a string argument. See mysql –help for details.</p>
<p>  -H, –host&#x3D;name                                This option specifies the host to use when connecting to the database server with TCP&#x2F;IP.  The option accepts a string argument. See mysql –help for details.</p>
<p>  -P, –port&#x3D;#                                         This option specifies the port to use when connecting to the database server with TCP&#x2F;IP.  The option accepts a string argument. See mysql –help for details.</p>
<p>  -p, –password[&#x3D;name]                     This option specifies the password to use when connecting to the database. It accepts a string argument.  See mysql –help for details.</p>
<p>  -S, –socket&#x3D;name                              This option specifies the socket to use when connecting to the local database server with a UNIX domain socket.  The option accepts a string argument. See mysql –help for details.</p>
<p>  –incremental-history-name&#x3D;name     This option specifies the name of the backup series stored in the PERCONA_SCHEMA.xtrabackup_history history record to base an incremental backup on. Xtrabackup will search the history table looking for the most recent (highest innodb_to_lsn), successful backup in the series and take the to_lsn value to use as the starting lsn for the incremental backup. This will be mutually exclusive with –incremental-history-uuid, –incremental-basedir and –incremental-lsn. If no valid lsn can be found (no series by that name, no successful backups by that name) xtrabackup will return with an error. It is used with the –incremental option.</p>
<p>  –incremental-history-uuid&#x3D;name       This option specifies the UUID of the specific history record stored in the PERCONA_SCHEMA.xtrabackup_history to base an incremental backup on. –incremental-history-name, –incremental-basedir and –incremental-lsn. If no valid lsn can be found (no success record with that uuid) xtrabackup will return with an error. It is used with the –incremental option.</p>
<p>  –decrypt&#x3D;name                                      Decrypts all files with the .xbcrypt extension in a backup previously made with –encrypt option.<br>  –remove-original                               Remove .qp and .xbcrypt files after decryption and decompression.<br>  –ftwrl-wait-query-type&#x3D;name         This option specifies which types of queries are allowed to complete before innobackupex will issue the global lock. Default is all.</p>
<p>  –kill-long-query-type&#x3D;name            This option specifies which types of queries should be killed to unblock the global lock. Default is “SELECT”.<br>  –history[&#x3D;name]                                This option enables the tracking of backup history in the PERCONA_SCHEMA.xtrabackup_history table. An optional history series name may be specified that will be placed with the history record for the current backup being taken.</p>
<p>  –kill-long-queries-timeout&#x3D;#            This option specifies the number of seconds innobackupex waits between starting FLUSH TABLES WITH READ LOCK and killing those queries that block it. Default is 0 seconds, which means innobackupex will not attempt to kill any queries.</p>
<p>  –ftwrl-wait-timeout&#x3D;#                        This option specifies time in seconds that innobackupex should wait for queries that would block FTWRL before running it. If there are still such queries when the timeout expires, innobackupex terminates with an error. Default is 0, in which case innobackupex does not wait for queries to complete and starts FTWRL immediately.</p>
<p>  –ftwrl-wait-threshold&#x3D;#                     This option specifies the query run time threshold which is used by innobackupex to detect long-running queries with a non-zero value of –ftwrl-wait-timeout. FTWRL is not started until such long-running queries exist. This option has no effect if –ftwrl-wait-timeout is 0. Default value is 60 seconds.</p>
<p>  –debug-sleep-before-unlock&#x3D;#        This is a debug-only option used by the XtraBackup test suite.<br>  –safe-slave-backup-timeout&#x3D;#         How many seconds –safe-slave-backup should wait for Slave_open_temp_tables to become zero. (default 300)<br>  –binlog-info[&#x3D;name]                           This option controls how XtraBackup should retrieve server’s binary log coordinates corresponding to the backup. Possible values are OFF, ON, LOCKLESS and AUTO. See the XtraBackup manual for more information</p>
<p>  –reencrypt-for-server-id&#x3D;#                Re-encrypt tablespace keys for given server-id.<br>  –check-privileges                                 Check database user privileges before performing any query.<br>  –read-buffer-size[&#x3D;#]                          Set datafile read buffer size, given value is scaled up to page size. Default is 10Mb.<br>  –ssl-mode&#x3D;name                                 SSL connection mode.<br>  –ssl                                                         Deprecated. Use –ssl-mode instead.  (Defaults to on; use –skip-ssl to disable.)<br>  –ssl-verify-server-cert                         Deprecated. Use –ssl-mode&#x3D;VERIFY_IDENTITY instead.<br>  –ssl-ca&#x3D;name                                      CA file in PEM format.<br>  –ssl-capath&#x3D;name                              CA directory.<br>  –ssl-cert&#x3D;name                                    X509 cert in PEM format.<br>  –ssl-cipher&#x3D;name                                SSL cipher to use.<br>  –ssl-key&#x3D;name                                     X509 key in PEM format.<br>  –ssl-crl&#x3D;name                                       Certificate revocation list.<br>  –ssl-crlpath&#x3D;name                               Certificate revocation list path.<br>  –tls-version&#x3D;name                               TLS version to use, permitted values are: TLSv1, TLSv1.1, TLSv1.2<br>  –server-public-key-path&#x3D;name          File path to the server public RSA key in PEM format.<br>  -h, –datadir&#x3D;name                               Path to the database root.<br>  -t, –tmpdir&#x3D;name                                 Path for temporary files. Several paths may be specified, separated by a colon (:), in this case they are used in a round-robin fashion.</p>
<p>  –parallel&#x3D;#                                            Number of threads to use for parallel datafiles transfer. The default value is 1.<br>  –log[&#x3D;name]                                          Ignored option for MySQL option compatibility<br>  –log-bin[&#x3D;name]                                   Base name for the log sequence<br>  –innodb[&#x3D;name]                                   Ignored option for MySQL option compatibility<br>  –innodb-adaptive-hash-index            Enable InnoDB adaptive hash index (enabled by default).  Disable with –skip-innodb-adaptive-hash-index.  (Defaults to on; use –skip-innodb-adaptive-hash-index to disable.)</p>
<p>  –innodb-autoextend-increment&#x3D;#    Data file autoextend increment in megabytes<br>  –innodb-buffer-pool-size&#x3D;#                The size of the memory buffer InnoDB uses to cache data and indexes of its tables.<br>  –innodb-checksums                              Enable InnoDB checksums validation (enabled by default). Disable with –skip-innodb-checksums. (Defaults to on; use –skip-innodb-checksums to disable.)</p>
<p>  –innodb-data-file-path&#x3D;name             Path to individual files and their sizes.<br>  –innodb-data-home-dir&#x3D;name           The common part for InnoDB table spaces.<br>  –innodb-doublewrite                            Enable InnoDB doublewrite buffer (enabled by default). Disable with –skip-innodb-doublewrite.  (Defaults to on; use –skip-innodb-doublewrite to disable.)</p>
<p>  –innodb-io-capacity[&#x3D;#]                        Number of IOPs the server can do. Tunes the background IO rate<br>  –innodb-file-io-threads&#x3D;#                     Number of file I&#x2F;O threads in InnoDB.<br>  –innodb-read-io-threads&#x3D;#                  Number of background read I&#x2F;O threads in InnoDB.<br>  –innodb-write-io-threads&#x3D;#                 Number of background write I&#x2F;O threads in InnoDB.<br>  –innodb-file-per-table                           Stores each InnoDB table to an .ibd file in the database dir.<br>  –innodb-flush-log-at-trx-commit[&#x3D;#]  Set to 0 (write and flush once per second), 1 (write and flush at each commit) or 2 (write at commit, flush once per second).</p>
<p>  –innodb-flush-method&#x3D;name              With which method to flush data.<br>  –innodb-force-recovery&#x3D;#                    Helps to save your data in case the disk image of the database becomes corrupt.<br>  –innodb-log-arch-dir&#x3D;name                  Where full logs should be archived.<br>  –innodb-log-buffer-size&#x3D;#                    The size of the buffer which InnoDB uses to write log to the log files on disk.<br>  –innodb-log-file-size&#x3D;#                          Size of each log file in a log group.<br>  –innodb-log-files-in-group&#x3D;#               Number of log files in the log group. InnoDB writes to the files in a circular fashion. Value 3 is recommended here.</p>
<p>  –innodb-log-group-home-dir&#x3D;name    Path to InnoDB log files.<br>  –innodb-max-dirty-pages-pct&#x3D;#           Percentage of dirty pages allowed in bufferpool.<br>  –innodb-open-files&#x3D;#                             How many files at the maximum InnoDB keeps open at the same time.<br>  –innodb-use-native-aio                          Use native AIO if supported on this platform.<br>  –innodb-page-size&#x3D;#                              The universal page size of the database.<br>  –innodb-log-block-size&#x3D;#                       The log block size of the transaction log file. Changing for created log file is not supported. Use on your own risk!</p>
<p>  –innodb-fast-checksum                          Change the algorithm of checksum for the whole of datapage to 4-bytes word based.<br>  –innodb-doublewrite-file&#x3D;name           Path to special datafile for doublewrite buffer. (default is : not used)<br>  –innodb-buffer-pool-filename&#x3D;name  Filename to&#x2F;from which to dump&#x2F;load the InnoDB buffer pool<br>  –debug-sync&#x3D;name                                 Debug sync point. This is only used by the xtrabackup test suite<br>  -#, –debug[&#x3D;name]                                  Output debug log. Default all ib_log output to stderr. To redirect all ib_log output to separate file, use –debug&#x3D;d,ib_log:o,&#x2F;tmp&#x2F;xtrabackup.trace</p>
<p>  –innodb-checksum-algorithm&#x3D;name   The algorithm InnoDB uses for page checksumming. [CRC32, STRICT_CRC32, INNODB, STRICT_INNODB, NONE, STRICT_NONE]</p>
<p>  –innodb-log-checksum-algorithm&#x3D;name    The algorithm InnoDB uses for log checksumming. [CRC32, STRICT_CRC32, INNODB, STRICT_INNODB, NONE, STRICT_NONE]</p>
<p>  –innodb-undo-directory&#x3D;name              Directory where undo tablespace files live, this path can be absolute.<br>  –innodb-undo-tablespaces&#x3D;#                 Number of undo tablespaces to use.<br>  –defaults-group&#x3D;name                            defaults group in config file (default “mysqld”).<br>  –open-files-limit&#x3D;#                                    the maximum number of file descriptors to reserve with setrlimit().<br>  –redo-log-version&#x3D;#                                 Redo log version of the backup. For –prepare only.<br>  –server-id&#x3D;#                                              The server instance being backed up<br>  –transition-key[&#x3D;name]                           Transition key to encrypt tablespace keys with.<br>  –xtrabackup-plugin-dir&#x3D;name                Directory for xtrabackup plugins.<br>  –generate-new-master-key                     Generate new master key when doing copy-back.<br>  –generate-transition-key                         Generate transition key and store it into keyring.</p>
<p>Variables (–variable-name&#x3D;value)  and boolean options {FALSE|TRUE}  Value (after reading options)</p>
<hr>
<p>datadir                                                  &#x2F;opt&#x2F;mysqldata<br>tmpdir                                                   &#x2F;tmp<br>parallel                                                 1<br>log                                                         (No default value)<br>log-bin                                                  (No default value)<br>innodb                                                  (No default value)<br>innodb-adaptive-hash-index            TRUE<br>innodb-autoextend-increment         8<br>innodb-buffer-pool-size                     8388608<br>innodb-checksums                             TRUE<br>innodb-data-file-path                          (No default value)<br>innodb-data-home-dir                        (No default value)<br>innodb-doublewrite                           TRUE<br>innodb-io-capacity                              200<br>innodb-file-io-threads                        4<br>innodb-read-io-threads                     4<br>innodb-write-io-threads                    4<br>innodb-file-per-table                          FALSE<br>innodb-flush-log-at-trx-commit        1<br>innodb-flush-method                          (No default value)<br>innodb-force-recovery                       0<br>innodb-log-arch-dir                            (No default value)<br>innodb-log-buffer-size                      16777216<br>innodb-log-file-size                            50331648<br>innodb-log-files-in-group                  2<br>innodb-log-group-home-dir             (No default value)<br>innodb-max-dirty-pages-pct            75<br>innodb-open-files                              300<br>innodb-use-native-aio                       FALSE<br>innodb-page-size                               16384<br>innodb-log-block-size                        512<br>innodb-fast-checksum                       FALSE<br>innodb-doublewrite-file                    (No default value)<br>innodb-buffer-pool-filename           (No default value)<br>debug-sync                                          (No default value)<br>debug                                                   (No default value)<br>innodb-checksum-algorithm            innodb<br>innodb-log-checksum-algorithm     innodb<br>innodb-undo-directory                      (No default value)<br>innodb-undo-tablespaces                 0<br>defaults-group                                    mysqld<br>open-files-limit                                    0<br>redo-log-version                                 1<br>server-id                                               0<br>xtrabackup-plugin-dir                        (No default value)<br>generate-new-master-key                 FALSE<br>generate-transition-key                     FALSE</p>
<p>Variables (–variable-name&#x3D;value) and boolean options {FALSE|TRUE}  Value (after reading options)</p>
<hr>
<p>version                                                FALSE<br>target-dir                                            &#x2F;usr&#x2F;local&#x2F;apache-tomcat-8.5.85&#x2F;lib&#x2F;xtrabackup_backupfiles&#x2F;<br>backup                                                FALSE<br>stats                                                     FALSE<br>prepare                                               FALSE<br>export                                                  FALSE<br>apply-log-only                                    FALSE<br>print-param                                        FALSE<br>use-memory                                      104857600<br>throttle                                                0<br>log                                                       (No default value)<br>log-copy-interval                               1000<br>extra-lsndir                                        (No default value)<br>incremental-lsn                                 (No default value)<br>incremental-basedir                         (No default value)<br>incremental-dir                                 (No default value)<br>to-archived-lsn                                 0<br>tables                                                 (No default value)<br>tables-file                                          (No default value)<br>databases                                         (No default value)<br>databases-file                                  (No default value)<br>tables-exclude                                 (No default value)<br>databases-exclude                         (No default value)<br>create-ib-logfile                               FALSE<br>stream                                              (No default value)<br>compress                                         (No default value)<br>compress-threads                          1<br>compress-chunk-size                     65536<br>encrypt                                             NONE<br>encrypt-key-file                              (No default value)<br>encrypt-threads                             1<br>encrypt-chunk-size                        65536<br>compact                                          FALSE<br>rebuild-indexes                              FALSE<br>rebuild-threads                              1<br>incremental-force-scan                FALSE<br>close-files                                        FALSE<br>copy-back                                        FALSE<br>move-back                                      FALSE<br>galera-info                                      FALSE<br>slave-info                                        FALSE<br>no-lock                                            FALSE<br>lock-ddl                                           FALSE<br>lock-ddl-timeout                           31536000<br>lock-ddl-per-table                         FALSE<br>backup-lock-timeout                    31536000<br>backup-lock-retry-count              0<br>dump-innodb-buffer-pool           FALSE<br>dump-innodb-buffer-pool-timeout   10<br>dump-innodb-buffer-pool-pct             0<br>safe-slave-backup                         FALSE<br>rsync                                                FALSE<br>force-non-empty-directories       FALSE<br>no-version-check                           FALSE<br>tables-compatibility-check           TRUE<br>no-backup-locks                            FALSE<br>decompress                                   FALSE<br>user                                                (No default value)<br>host                                                (No default value)<br>port                                                 0<br>socket                                             &#x2F;opt&#x2F;mysqldata&#x2F;mysql.sock<br>incremental-history-name          (No default value)<br>incremental-history-uuid            (No default value)<br>decrypt                                           NONE<br>remove-original                            FALSE<br>ftwrl-wait-query-type                  ALL<br>kill-long-query-type                     SELECT<br>kill-long-queries-timeout            0<br>ftwrl-wait-timeout                        0<br>ftwrl-wait-threshold                     60<br>debug-sleep-before-unlock         0<br>safe-slave-backup-timeout         300<br>binlog-info                                     auto<br>reencrypt-for-server-id               0<br>check-privileges                           FALSE<br>read-buffer-size                          10485760<br>ssl                                                  TRUE<br>ssl-verify-server-cert                  FALSE<br>ssl-ca                                            (No default value)<br>ssl-capath                                    (No default value)<br>ssl-cert                                         (No default value)<br>ssl-cipher                                     (No default value)<br>ssl-key                                          (No default value)<br>ssl-crl                                            (No default value)<br>ssl-crlpath                                    (No default value)<br>tls-version                                    TLSv1,TLSv1.1,TLSv1.2<br>server-public-key-path              (No default value)</p>
</blockquote>
]]></content>
      <categories>
        <category>运维安装</category>
        <category>数据库备份</category>
        <category>MySQL</category>
      </categories>
  </entry>
  <entry>
    <title>Tomcat中catalina.out按日期输出到文件</title>
    <url>/2023/03/02/Tomcat%E4%B8%AD%E7%9A%84catalina.out%E6%8C%89%E6%97%A5%E6%9C%9F%E8%BE%93%E5%87%BA%E5%88%B0%E6%96%87%E4%BB%B6/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><p>[toc]</p>
<h1 id="安装Cronolog"><a href="#安装Cronolog" class="headerlink" title="安装Cronolog"></a>安装Cronolog</h1><h2 id="YUM安装"><a href="#YUM安装" class="headerlink" title="YUM安装"></a>YUM安装</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># yum安装</span></span><br><span class="line">yum install cronolog</span><br></pre></td></tr></table></figure>



<h2 id="RPM安装"><a href="#RPM安装" class="headerlink" title="RPM安装"></a>RPM安装</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 下载RPM包 </span></span><br><span class="line"><span class="comment"># el7包：https://rpmfind.net/linux/epel/7/x86_64/Packages/c/cronolog-1.6.2-14.el7.x86_64.rpm</span></span><br><span class="line"><span class="comment"># el8包：https://rpmfind.net/linux/epel/8/Everything/x86_64/Packages/c/cronolog-1.6.2-34.el8.x86_64.rpm</span></span><br><span class="line">wget https://rpmfind.net/linux/epel/7/x86_64/Packages/c/cronolog-1.6.2-14.el7.x86_64.rpm</span><br><span class="line"><span class="comment"># rpm安装</span></span><br><span class="line">sudo rpm -ivh cronolog-1.6.2-14.el7.x86_64.rpm</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h1 id="修改tomcat-x2F-bin目录下的catalina-sh文件"><a href="#修改tomcat-x2F-bin目录下的catalina-sh文件" class="headerlink" title="修改tomcat&#x2F;bin目录下的catalina.sh文件"></a>修改tomcat&#x2F;bin目录下的catalina.sh文件</h1><p>修改第500行和510行（即start命令模式下）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 修改前</span></span><br><span class="line">      org.apache.catalina.startup.Bootstrap <span class="string">&quot;<span class="variable">$@</span>&quot;</span> start \</span><br><span class="line">      &gt;&gt; <span class="string">&quot;<span class="variable">$CATALINA_OUT</span>&quot;</span> 2&gt;&amp;1 <span class="string">&quot;&amp;&quot;</span></span><br><span class="line"><span class="comment"># 修改后</span></span><br><span class="line">      org.apache.catalina.startup.Bootstrap <span class="string">&quot;<span class="variable">$@</span>&quot;</span> start 2&gt;&amp;1 \</span><br><span class="line">      |/usr/local/sbin/cronolog <span class="string">&quot;<span class="variable">$CATALINA_BASE</span>&quot;</span>/logs/catalina.%Y-%m-%d.out&gt;&gt; /dev/null 2&gt;&amp;1 &amp;</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 将touch &quot;$CATALINA_OUT&quot;注释掉,由于该语句在IF语句中，所以增加一条语句continue</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>





<h1 id="重启tomcat"><a href="#重启tomcat" class="headerlink" title="重启tomcat"></a>重启tomcat</h1>]]></content>
      <categories>
        <category>Tomcat</category>
      </categories>
  </entry>
  <entry>
    <title>Zookeeper安装</title>
    <url>/2023/03/10/Zookeeper%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><p>[toc]</p>
]]></content>
      <categories>
        <category>运维安装</category>
        <category>分布式存储</category>
      </categories>
  </entry>
  <entry>
    <title>chrome在windows使用无痕模式</title>
    <url>/2022/12/14/chrome%E5%9C%A8windows%E4%BD%BF%E7%94%A8%E6%97%A0%E7%97%95%E6%A8%A1%E5%BC%8F/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><h1 id="桌面图标无痕打开"><a href="#桌面图标无痕打开" class="headerlink" title="桌面图标无痕打开"></a>桌面图标无痕打开</h1><pre><code>     chrome桌面图标默认使用无痕模式这个教程最多，具体修改方式如下：
</code></pre>
<p>​         鼠标右键点击chrome的桌面快捷方式，选择属性，打开后，选择快捷方式属性，然后修改目标栏的值，</p>
<p>在<code>C:\Program Files (x86)\Google\Chrome\Application\chrome.exe</code>后面添加 -incognito</p>
<h1 id="任务栏图标无痕打开"><a href="#任务栏图标无痕打开" class="headerlink" title="任务栏图标无痕打开"></a>任务栏图标无痕打开</h1><p>​		这个修改的教程就相对较少了，修改方式如下：</p>
<p>​		打开<code>C:\Users\XXXX\AppData\Roaming\Microsoft\Internet Explorer\Quick Launch\User Pinned\TaskBar</code>路径，在下面找到chrome的快捷图标，修改方式与chrome桌面桌面图标修改方式相同：右键chrome图标，选择属性，打开后，选择快捷方式属性，然后修改目标栏的值，在<code>C:\Program Files (x86)\Google\Chrome\Application\chrome.exe</code>后面添加<code> -incognito</code></p>
<h1 id="外部链接无痕打开"><a href="#外部链接无痕打开" class="headerlink" title="外部链接无痕打开"></a>外部链接无痕打开</h1><p>​		1、按下<code>Win+R</code>键，在打开的运行对话框中输入<code>regedit</code>,然后回车开发系统注册表；</p>
<p>​		2、按照顺序展开注册表<code>HKEY_CLASSES_ROOT\ChromeHTML\shell\open\command</code>,在右侧的内容中，双击“默认”，弹出编辑字符串。在“数值数据”一栏中后面添加 <code>--incognito</code>参数。例如：<code>&quot;C:\Program Files (x86)\Google\Chrome\Application\chrome.exe&quot; -- &quot;%1&quot;</code>修改为<code>&quot;C:\Program Files (x86)\Google\Chrome\Application\chrome.exe&quot; --incognito -- &quot;%1&quot;</code></p>
<p><em>注意：如果<code>C:\Program Files (x86)\Google\Chrome\Application\chrome.exe</code>被引号引起来，在在引号后面添加<code>-incognito</code>。另外<code>-incognito</code>前面有一个空格</em></p>
]]></content>
      <tags>
        <tag>windows</tag>
      </tags>
  </entry>
  <entry>
    <title>tomcat安全加固</title>
    <url>/2023/03/01/Tomcat%E5%AE%89%E5%85%A8%E5%8A%A0%E5%9B%BA/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><p>[toc]</p>
<h1 id="Tomcat结构"><a href="#Tomcat结构" class="headerlink" title="Tomcat结构"></a>Tomcat结构</h1><p>Tomcat的初始目录结构：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/usr/local/tomcat #主目录即安装的目录</span><br><span class="line">├── bin   #存放启动和关闭Tomcat的脚本文件</span><br><span class="line">├── conf  #存放Tomcat服务器的各种配置文件(后面单介绍)</span><br><span class="line">├── lib   #存放tomcat服务器支撑的jar包</span><br><span class="line">├── logs  #存放Tomcat的日志文件</span><br><span class="line">├── temp  #存放Tomcat运行时产生的临时文件</span><br><span class="line">├── webapps #web应用虽在目录，即供外界访问的web资源的存放目录,就是Web发布目录</span><br><span class="line">│   ├── docs #帮助文档目录</span><br><span class="line">│   ├── examples #Servlet and JSP Examples案例目录</span><br><span class="line">│   ├── host-manager #主机管理目录</span><br><span class="line">│   ├── manager  #应用程序管理目录</span><br><span class="line">│   └── ROOT  #应用程序放置地址</span><br><span class="line">└── work #Tomcat的工作目录,存放jsp编译后产生的class文件</span><br></pre></td></tr></table></figure>



<p>Tomcat全局配置目录结构：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">├── catalina.policy #权限控制配置文件</span><br><span class="line">├── catalina.properties #Tomcat属性配置文件</span><br><span class="line">├── context.xml  #上下文配置文件（selinux）</span><br><span class="line">├── jaspic-providers.xml</span><br><span class="line">├── jaspic-providers.xsd</span><br><span class="line">├── logging.properties #日志log相关配置文件</span><br><span class="line">├── server.xml  #主配置文件(如修改监听端口,开启关闭额外的服务,设置网站根目录，虚拟主机，开启https等功能)</span><br><span class="line">├── tomcat-users.xml #manager-gui管理用户配置文件（Tomcat安装后生成的管理界面，该文件可开启访问）</span><br><span class="line">├── tomcat-users.xsd</span><br><span class="line">└── web.xml #Tomcat的servlet，servlet-mapping，filter，MIME等相关配置</span><br></pre></td></tr></table></figure>



<p>Tomcat WebApp目录结构：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">webAppName--- #-Web应用所在目录</span><br><span class="line">  |---- #html、jsp、css、js等文件，根目录下的文件外界可以直接访问</span><br><span class="line">  |---- #WEB-INF目录 (应用配置文件存放)</span><br><span class="line">    |---------classes目录 #(java类)</span><br><span class="line">    |---------lib目录  #(java类运行所需的jar包)</span><br><span class="line">    |---------conf目录 #(数据库以及其他配置文件存放目录)</span><br><span class="line">    |---------web.xml  #(web应用的配置文件)</span><br><span class="line">#注意:WEB-INF 这个目录下的文件外界无法直接访问，由web服务器负责调用</span><br></pre></td></tr></table></figure>



<p>Tomcat默认端口：</p>
<ul>
<li>8005:用于SHUTDOWN指令来关闭Tomcat时使用;</li>
<li>8009:用于Apache连接Tomcat时候专用端口采用AJP协议;</li>
<li>8080:用于HTTP协议远程访问端口即Web页面访问端口;</li>
</ul>
<h1 id="内核优化"><a href="#内核优化" class="headerlink" title="内核优化"></a>内核优化</h1><p>需要调整的内核参数</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt;&gt; /etc/sysctl.conf &lt;&lt; <span class="string">EOF</span></span><br><span class="line"><span class="string"># cat /proc/sys/net/core/netdev_max_backlog</span></span><br><span class="line"><span class="string"># 默认值：1000</span></span><br><span class="line"><span class="string"># 作用：网卡设备将请求放入队列的长度</span></span><br><span class="line"><span class="string">net.core.netdev_max_backlog = 32768</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># cat /proc/sys/net/core/somaxconn</span></span><br><span class="line"><span class="string"># 默认值：128</span></span><br><span class="line"><span class="string"># 作用：已经成功建立连接的套接字将要进入队列的长度</span></span><br><span class="line"><span class="string">net.core.somaxconn = 32768</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># cat /proc/sys/net/core/rmem_default</span></span><br><span class="line"><span class="string"># 默认值：212992</span></span><br><span class="line"><span class="string"># 作用：默认的TCP数据接收窗口大小（字节）</span></span><br><span class="line"><span class="string">net.core.rmem_default = 8388608</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># cat /proc/sys/net/core/wmem_default</span></span><br><span class="line"><span class="string"># 默认值：212992</span></span><br><span class="line"><span class="string"># 作用：默认的TCP数据发送窗口大小（字节）</span></span><br><span class="line"><span class="string">net.core.wmem_default = 8388608</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># cat /proc/sys/net/core/rmem_max</span></span><br><span class="line"><span class="string"># 默认值：212992</span></span><br><span class="line"><span class="string"># 作用：最大的TCP数据接收窗口大小（字节）</span></span><br><span class="line"><span class="string">net.core.rmem_max = 16777216</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># cat /proc/sys/net/core/wmem_max</span></span><br><span class="line"><span class="string"># 默认值：212992</span></span><br><span class="line"><span class="string"># 作用：最大的TCP数据发送窗口大小（字节）</span></span><br><span class="line"><span class="string">net.core.wmem_max = 16777216</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># cat /proc/sys/net/ipv4/ip_local_port_range</span></span><br><span class="line"><span class="string"># 默认值：32768   61000</span></span><br><span class="line"><span class="string"># 作用：可用端口的范围</span></span><br><span class="line"><span class="string">net.ipv4.ip_local_port_range = 1024  65535</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># cat /proc/sys/net/ipv4/route/gc_timeout</span></span><br><span class="line"><span class="string"># 默认值 300</span></span><br><span class="line"><span class="string"># 作用：路由缓存刷新频率，当一个路由失败后多长时间跳到另一个路由</span></span><br><span class="line"><span class="string">net.ipv4.route.gc_timeout = 100</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># cat /proc/sys/net/ipv4/tcp_fin_timeout</span></span><br><span class="line"><span class="string"># 默认 60</span></span><br><span class="line"><span class="string"># 作用：表示如果套接字由本端要求关闭，这个参数决定了它保持在FIN-WAIT-2状态的时间</span></span><br><span class="line"><span class="string">net.ipv4.tcp_fin_timeout = 30 </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># cat /proc/sys/net/ipv4/tcp_keepalive_time </span></span><br><span class="line"><span class="string"># 默认值：7200</span></span><br><span class="line"><span class="string"># 作用：间隔多久发送1次keepalive探测包</span></span><br><span class="line"><span class="string">net.ipv4.tcp_keepalive_time = 1200  </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># cat /proc/sys/net/ipv4/tcp_timestamps </span></span><br><span class="line"><span class="string"># 默认值：1</span></span><br><span class="line"><span class="string"># 作用：TCP时间戳，时间戳必须要开启，否则下面的 TIME_WAIT 重用和快速回收无效</span></span><br><span class="line"><span class="string">net.ipv4.tcp_timestamps = 1</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># cat /proc/sys/net/ipv4/tcp_tw_recycle</span></span><br><span class="line"><span class="string"># 默认值：0</span></span><br><span class="line"><span class="string"># 作用：表示开启TCP连接中TIME-WAIT sockets的快速回收，默认为0，表示关闭。</span></span><br><span class="line"><span class="string">net.ipv4.tcp_tw_recycle = 1</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">######################## cat /proc/sys/net/ipv4/tcp_tw_reuse</span></span><br><span class="line"><span class="string"># 默认值：0</span></span><br><span class="line"><span class="string"># 作用：针对 TIME-WAIT，做为客户端可以启用（例如，作为nginx-proxy前端代理，要访问后端的服务）</span></span><br><span class="line"><span class="string">net.ipv4.tcp_tw_reuse = 1</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># cat /proc/sys/net/ipv4/tcp_syn_retries</span></span><br><span class="line"><span class="string"># 默认值 2</span></span><br><span class="line"><span class="string"># 作用：在内核放弃建立连接之前发送SYN包的数量。</span></span><br><span class="line"><span class="string">net.ipv4.tcp_syn_retries = 1</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># cat /proc/sys/net/ipv4/tcp_synack_retries</span></span><br><span class="line"><span class="string"># 默认值 2</span></span><br><span class="line"><span class="string"># 作用：为了打开对端的连接，内核需要发送一个SYN并附带一个回应前面一个SYN的ACK。也就是所谓三次握手中的第二次握手。这个设置决定了内核放弃连接之前发送SYN+ACK包的数量。</span></span><br><span class="line"><span class="string">net.ipv4.tcp_synack_retries = 1</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># cat /proc/sys/net/ipv4/tcp_mem</span></span><br><span class="line"><span class="string">#确定 TCP 栈应该如何反映内存使用；每个值的单位都是内存页（通常是 4KB）。</span></span><br><span class="line"><span class="string">#第一个值是内存使用的下限。</span></span><br><span class="line"><span class="string">#第二个值是内存压力模式开始对缓冲区使用应用压力的上限。</span></span><br><span class="line"><span class="string">#第三个值是内存上限。在这个层次上可以将报文丢弃，从而减少对内存的使用。对于较大的 BDP 可以增大这些值（但是要记住，其单位是内存页，而不是字节）。</span></span><br><span class="line"><span class="string">net.ipv4.tcp_mem = 94500000    915000000   927000000</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># cat /proc/sys/net/ipv4/tcp_max_orphans</span></span><br><span class="line"><span class="string"># 默认值 16384</span></span><br><span class="line"><span class="string"># 作用：系统中最多有多少个TCP套接字不被关联到任何一个用户文件句柄上。如果超过这个数字，孤儿连接将即刻被复位并打印出警告信息。这个限制仅仅是为了防止简单 的DoS攻击，你绝对不能过分依靠它或者人为地减小这个值，更应该增加这个值(如果增加了内存之后)。</span></span><br><span class="line"><span class="string">net.ipv4.tcp_max_orphans = 3276800</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># cat /proc/sys/net/ipv4/tcp_max_syn_backlog</span></span><br><span class="line"><span class="string"># 默认值：128</span></span><br><span class="line"><span class="string"># 作用：增大SYN队列的长度，容纳更多连接</span></span><br><span class="line"><span class="string">net.ipv4.tcp_max_syn_backlog = 65535</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"><span class="comment">#执行使内核参数生效</span></span><br><span class="line">sysctl -p</span><br></pre></td></tr></table></figure>









<h1 id="性能调优"><a href="#性能调优" class="headerlink" title="性能调优"></a>性能调优</h1><h2 id="JVM调优"><a href="#JVM调优" class="headerlink" title="JVM调优"></a>JVM调优</h2><h3 id="JVM环境参数"><a href="#JVM环境参数" class="headerlink" title="JVM环境参数"></a>JVM环境参数</h3><table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">描述</th>
<th align="left">备注</th>
</tr>
</thead>
<tbody><tr>
<td align="left">-server</td>
<td align="left">Server 模式启动应用慢但是极大程度提高运行性能，特别是在稳定期过后。</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">-client</td>
<td align="left">Cliet  模式启动应用快。</td>
<td align="left">JVM默认使用该模式</td>
</tr>
</tbody></table>
<h3 id="JVM内存调优"><a href="#JVM内存调优" class="headerlink" title="JVM内存调优"></a>JVM内存调优</h3><table>
<thead>
<tr>
<th>参数</th>
<th>描述说明</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>-Xms</td>
<td>堆的初始可用内存大小，单位（m、g）</td>
<td>-Xms2g</td>
</tr>
<tr>
<td>-Xmx</td>
<td>堆的最大可用内存大小，单位（m、g）</td>
<td>-Xms8g<br/>设置与Xms相同的内存大小 , 为减少程序运行时进行的垃圾回收次数和空间扩展</td>
</tr>
<tr>
<td>-Xmn</td>
<td>设置年轻代内存大小，单位(m、g)</td>
<td>-Xmn256m</td>
</tr>
<tr>
<td>-Xss</td>
<td>设置每个线程的栈Stack大小，单位（m、g）</td>
<td>-Xss128k<br/>越大我们能递归调用的方法数量越多，但是空间越大创建时间越长</td>
</tr>
<tr>
<td>-XX:NewRatio</td>
<td>设置年轻代（Eden区与两个Survivor区）与老年代的比值</td>
<td>-XX:NewRatio&#x3D;4</td>
</tr>
<tr>
<td>-XX:SurvivorRatio</td>
<td>设置Eden区与一个Survior区的大小比值</td>
<td>-XX:SurvivorRatio&#x3D;4</td>
</tr>
<tr>
<td>-XX:PermSize</td>
<td>设置持久代大小为16m, 持久代一般固定的内存大小为64m。</td>
<td>JDK8.0后被删除</td>
</tr>
<tr>
<td>-XX:MaxPermSize</td>
<td>设置最大持久代大小为16m, 默认是物理内存的1&#x2F;4最大1024m。</td>
<td>JDK8.0后被删除</td>
</tr>
<tr>
<td>-XX:MaxTenuringThreshold</td>
<td>设置垃圾最大年龄存活</td>
<td>如果设置为0的话则年轻代对象不经过Survivor区，直接进入年老代, 对于年老代比较多的应用可以提高效率。 <br/>如果将此值设置为一个较大值，则年轻代对象会在Survivor区进行多次复制，这样可以增加对象再年轻代的存活时间，增加在年轻代即被回收的概论。</td>
</tr>
</tbody></table>
<h3 id="JVM垃圾回收调优"><a href="#JVM垃圾回收调优" class="headerlink" title="JVM垃圾回收调优"></a>JVM垃圾回收调优</h3><table>
<thead>
<tr>
<th>垃圾回收器</th>
<th>描述说明</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>-XX:+UseSerialGc</td>
<td><strong>串行垃圾回收</strong>：即在整个扫描和复制过程采用单线程的方式来进行，适用于单CPU、新生代空间较小及对暂停时间要求不是非常高的应用上，是client级别默认的GC方式，主要在JDK1.5之前的垃圾回收方式。</td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>-XX:+UseParallelGC</td>
<td><strong>并行垃圾回收</strong>：即在整个扫描和复制过程采用多线程的方式来进行，适用于多CPU、对暂停时间要求较短的应用上，是server级别默认采用的GC方式。此配置仅对年轻代有效。该配置只能让年轻代使用并发收集，而年老代仍旧使用串行收集。</td>
<td></td>
</tr>
<tr>
<td>-XX:ParallelGCThreads&#x3D;4</td>
<td>配置并行收集器(Gc)的线程数，即：同时多少个线程一起进行垃圾回收。此值最好配置与处理器数目相等。</td>
<td></td>
</tr>
<tr>
<td>-XX:+UseParallelGCThreads&#x3D;8</td>
<td>并行收集器线程数同时有多少个线程进行垃圾回收一般与CPU数量相等</td>
<td>JDK8后被删除</td>
</tr>
<tr>
<td>-XX:+UseParallelOldGC</td>
<td>配置年老代垃圾收集方式为并行收集, JDK6.0支持对年老代并行收集。</td>
<td></td>
</tr>
<tr>
<td>-XX:MaxGCPauseMillis</td>
<td>设置每次年轻代垃圾回收的最长时间，如果无法满足此时间，JVM会自动调整年轻代大小，以满足此值。</td>
<td>-XX:MaxGCPauseMillis&#x3D;100</td>
</tr>
<tr>
<td>-XX:+UseAdaptiveSizePolicy</td>
<td>设置此选项后，并行收集器会自动选择年轻代区大小和相应的Survivor区比例，以达到目标系统规定的最低相应时间或者收集频率等，此值建议使用并行收集器时一直打开。</td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>-XX:+UseConcMarkSweepGC</td>
<td>代表垃圾回收策略为并发收集器</td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>-XX:PrintGC</td>
<td>每次触发GC的时候打印相关日志</td>
<td></td>
</tr>
<tr>
<td>-XX:+PrintGCDetails</td>
<td>更详细的GC日志</td>
<td></td>
</tr>
<tr>
<td>-XX:+HeapDumpOnOutOfMemoryError</td>
<td>堆异常报错输出</td>
<td></td>
</tr>
<tr>
<td>-XX:HeapDumpPath</td>
<td>设置在dump heap时将文件dump到哪里。默认是当前目录下 java_pidpid.hprof这样形式的文件。</td>
<td>-XX:HeapDumpPath&#x3D;path</td>
</tr>
<tr>
<td>-XX:+UseCMSCompactAtFullCollection</td>
<td>开启内存空间压缩和整理，防止过多内存碎片</td>
<td></td>
</tr>
<tr>
<td>-Djava.awt.headless</td>
<td>windows系统可不用设置,适用于Linux系统与图形操作有关，如生成验证码含义是当前的是无显示器的服务器，应用中如果获取系统显示有关的参数会抛出异常</td>
<td></td>
</tr>
<tr>
<td>-Dfile.encoding&#x3D;UTF-8</td>
<td>设置字符集避免日志中出现乱码</td>
<td></td>
</tr>
<tr>
<td>-Dsun.jnu.encoding</td>
<td>设置字符集避免日志中出现乱码</td>
<td></td>
</tr>
<tr>
<td>-Duser.timezone</td>
<td>时区设置</td>
<td></td>
</tr>
</tbody></table>
<p>配置示例</p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="comment">#Linux#</span></span><br><span class="line"><span class="attr">$vim</span> <span class="string">/usr/local/tomcat8/bin/catalina.sh</span></span><br><span class="line"><span class="comment">#在OS specific support. $var _must_ be set to either true or false.110行下面添加</span></span><br><span class="line"><span class="attr">JAVA_OPTS</span>=<span class="string">&quot;-server </span></span><br><span class="line"><span class="attr">-Xms1024m</span> <span class="string"></span></span><br><span class="line"><span class="attr">-Xmx1024m</span> <span class="string"></span></span><br><span class="line"><span class="attr">-Xmn256m</span></span><br><span class="line"><span class="attr">-XX</span>:<span class="string">NewRatio=4</span></span><br><span class="line"><span class="attr">-XX</span>:<span class="string">SurvivorRatio=4</span></span><br><span class="line"><span class="attr">-XX</span>:<span class="string">+UseParallelGC</span></span><br><span class="line"><span class="attr">-XX</span>:<span class="string">ParallelGCThreads=4</span></span><br><span class="line"><span class="attr">-XX</span>:<span class="string">+UseParallelOldGC </span></span><br><span class="line"><span class="attr">-XX</span>:<span class="string">+UseParallelOldGC</span></span><br><span class="line"><span class="attr">&quot;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">#Windows#</span></span><br><span class="line"><span class="attr">$vim</span> <span class="string">/usr/local/tomcat8/bin/catalina.bat</span></span><br><span class="line"><span class="comment">#在/bin目录下的catalina.bat可以直接通过Tomcat设置JVM内存参数</span></span><br><span class="line"><span class="attr">set</span> <span class="string">&quot;JAVA_OPTS=%JAVA_OPT% -server -Xms2048m -Xmx2048m -XX:PermSize=256m -XX:MaxPermSize=512m -Djava.awt.headless=true&quot;</span></span><br></pre></td></tr></table></figure>



<p><em>注意事项:</em></p>
<ul>
<li>java 8开始<code>PermSize</code>被<code>MetaspaceSize</code>代替，MetaspaceSize共享heap不会再有<code>java.lang.OutOfMemoryError：PermGen space</code>可以不设置</li>
<li>java8 开始已经移除<code>MaxPermSize/UseParallelGCThreads=8</code></li>
<li>Java 提供的垃圾回收机制虚拟机的堆大小决定了虚拟机花费在收集垃圾上的时间和频度并且收集垃圾可以接受的速度与应用有关<ul>
<li>如果堆(heap)的空间很大，那么完全垃圾收集（FULL GC）就会很慢，但是频度会降低。</li>
<li>如果在客户系统中把堆的大小和内存的需要一致，完全收集就很快，但是会更加频繁。</li>
<li><code>推荐把-Xms设置为应用所需的最小值，这样会产生高效的垃圾回收</code>。</li>
</ul>
</li>
</ul>
<h2 id="Tomcat调优"><a href="#Tomcat调优" class="headerlink" title="Tomcat调优"></a>Tomcat调优</h2><p>虽然tomcat也可以作web服务器但其处理静态html的速度比不上Nginx服务,并且为了更好的进行设置负载均衡,还是得和Nginx进行联用;</p>
<p>因此我们可以把 Nginx 和 Tomcat 集成起来, 将html与jsp的功能部分进行明确分工, 让tomcat只处理jsp部分，或者也可以由其它的由 apache, IIS 等这些 web服务器处理，由此大大节省了tomcat有限的工作线程。</p>
<h3 id="Connector元素属性优化（service-xml配置）"><a href="#Connector元素属性优化（service-xml配置）" class="headerlink" title="Connector元素属性优化（service.xml配置）"></a>Connector元素属性优化（service.xml配置）</h3><ol>
<li>特殊配置详解</li>
</ol>
<ul>
<li><p>禁用DNS查询</p>
<ul>
<li><p>优化：<code>enableLookups=&quot;false&quot;</code></p>
</li>
<li><p>描述：除DNS查询对性能的影响我们可以关闭DNS查询</p>
</li>
<li><p>结果：节省了网络带宽、查询时间和内存，而且更小的流量会使日志数据也会变得更少，显而易见也节省了硬盘空间</p>
</li>
</ul>
</li>
<li><p>调整线程数</p>
<ul>
<li>优化： 修改 <code>minProcessors</code> 和<code>maxProcessors</code> 的值来控制线程数</li>
<li>描述：可通过应用程序的连接器（Connector）进行性能控制的参数是创建的处理请求的线程数。在Java中线程是程序运行时的路径，是在一个程序中与其它控制线程无关的、能够独立运行的代码段。但是应防止流量不可控制（或者恶意的服务攻击），从而导致超出了虚拟机使用内存的大小；web server允许的最大连接数还受制于操作系统的内核参数设置，通常Windows是2000个左右，Linux是1000个左右。</li>
<li>结果：它们共享相同的地址空间。多线程帮助程序员写出CPU最大利用率的高效程序，使空闲时间保持最低，从而接受更多的请求。</li>
</ul>
</li>
<li><p>NIO配置</p>
<ul>
<li>优化：<code>protocol=&quot;org.apache.coyote.http11.Http11NioProtocol&quot;</code></li>
<li>描述:NIO （No-blocking I&#x2F;O）从JDK 1.4起，NIO API作为一个基于缓冲区，并能提供非阻塞I&#x2F;O操作的API被引入[LD6];TOMCAT可以支持高并发的企业级应用,配置良好的tomcat都会使用APR(Apache Portable Runtime),APR是Apache HTTP Server2.x的核心，它是高度可移植的本地库，它使用高性能的UXIN I&#x2F;O操作，低性能的java io操作。</li>
<li>结果：NIO使用单线程(单个CPU)或者只使用少量的多线程(多CPU)来接受Socket，而由线程池来处理堵塞在pipe或者队列里的请求。只要OS可以接受TCP的连接，web服务器就可以处理该请求。大大提高了web服务器的可伸缩性。</li>
</ul>
</li>
<li><p>ARP配置</p>
<ul>
<li>优化：<code>protocol=&quot;org.apache.coyote.http11.Http11AprProtocol&quot;</code></li>
<li>描述：Tomcat APR 模式也是 Tomcat 在高并发下的首选运行模式</li>
<li>结果：调用 httpd 核心链接库来读取或文件传输，从而提高 tomcat 对静态文件的处理性能</li>
</ul>
</li>
</ul>
<ol start="2">
<li><p>其他属性详解</p>
<table>
<thead>
<tr>
<th>Connector属性</th>
<th>说明</th>
<th>默认值</th>
</tr>
</thead>
<tbody><tr>
<td>port</td>
<td>Tomcat启动监听端口</td>
<td>Default 8080</td>
</tr>
<tr>
<td>protocol</td>
<td>Tomcat的3种运行状态协议</td>
<td>Default bio HTTP&#x2F;1.1</td>
</tr>
<tr>
<td>acceptCount</td>
<td>监听端口队列最大数，满了之后客户请求会被拒绝（不能小于maxSpareThreads）</td>
<td>Default 100，建议设置1000</td>
</tr>
<tr>
<td>maxThreads</td>
<td>当前可以同时处理的最大用户访问数最大连接数配置（并发能力）</td>
<td>Default 200 ，建议设置1000</td>
</tr>
<tr>
<td>minSpareThreads</td>
<td>Tomcat初始化时创建的socket线程数，线程的最小运行数目</td>
<td>Default 10 ，建议设置1000</td>
</tr>
<tr>
<td>maxSpareThreads</td>
<td>Tomcat连接器的最大空闲socket线程数,一旦创建的线程超过这个值将会关闭socket</td>
<td>建议设置1000</td>
</tr>
<tr>
<td>minProcessors</td>
<td>服务器创建时的最小处理线程数</td>
<td>建议设置 100</td>
</tr>
<tr>
<td>maxProcessors</td>
<td>服务器同时最大处理线程数</td>
<td>建议设置 1000</td>
</tr>
<tr>
<td>enableLookups</td>
<td>支持域名解析可把ip地址解析为主机名</td>
<td>建议设置false 关闭DNS反向查询</td>
</tr>
<tr>
<td>compression</td>
<td>是否打开压缩功能</td>
<td>on</td>
</tr>
<tr>
<td>compressionMinSize</td>
<td>压缩的最小字节</td>
<td>2048</td>
</tr>
<tr>
<td>compressableMimeType</td>
<td>压缩的MImeType类型</td>
<td>text&#x2F;html,text&#x2F;xml,text&#x2F;javascript,text&#x2F;css,text&#x2F;plain</td>
</tr>
<tr>
<td>connectionTimeout</td>
<td>代表连接超时时间，单位为毫秒</td>
<td>默认值为60000。通常情况下设置为30000</td>
</tr>
<tr>
<td>disableUploadTimeout</td>
<td>标志允许servlet在一个servlet执行的时候，使用一个不同的更长的连接超时。</td>
<td>建议设为false</td>
</tr>
<tr>
<td>keepAliveTimeout</td>
<td>长连接超时时间</td>
<td>常常设置-1永不过期</td>
</tr>
<tr>
<td>URIEncoding</td>
<td>URL统一编码</td>
<td>utf-8</td>
</tr>
<tr>
<td>redirectPort</td>
<td>在需要基于安全通道的场合，把客户请求转发到基于SSL的redirectPort端口</td>
<td>8443</td>
</tr>
<tr>
<td>prestartminSpareThreads</td>
<td>在 Tomcat 初始化的时候就初始化 minSpareThreads 的</td>
<td></td>
</tr>
<tr>
<td>maxQueueSize</td>
<td>最大的等待队列数，超过则拒绝请求</td>
<td></td>
</tr>
</tbody></table>
<p>server.xml Connector配置详解</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">&lt;!‐‐ 将注释打开（注释没打开的情况下默认10个线程，最小10，最大200）‐‐&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">Executor</span> <span class="attr">name</span>=<span class="string">&quot;tomcatThreadPool&quot;</span> <span class="attr">namePrefix</span>=<span class="string">&quot;catalina‐exec‐&quot;</span> </span></span><br><span class="line"><span class="tag"><span class="attr">maxThreads</span>=<span class="string">&quot;500&quot;</span> <span class="attr">minSpareThreads</span>=<span class="string">&quot;50&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">prestartminSpareThreads</span>=<span class="string">&quot;true&quot;</span> <span class="attr">maxQueueSize</span>=<span class="string">&quot;100&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Connector</span> </span></span><br><span class="line"><span class="tag"><span class="attr">port</span>=<span class="string">&quot;8080&quot;</span> </span></span><br><span class="line"><span class="tag">&lt;!‐‐ <span class="attr">默认BIO</span>/<span class="attr">建议采用NIO或者arp提高并发处理能力</span> <span class="attr">--</span>&gt;</span></span><br><span class="line">protocol=&quot;HTTP/1.1&quot;</span><br><span class="line"></span><br><span class="line">&lt;!‐‐ 网络连接超时，单位：毫秒。设置为0表示永不超时(不推荐)) --&gt;</span><br><span class="line">connectionTimeout=&quot;30000&quot;</span><br><span class="line">maxHttpHeaderSize=&quot;32768&quot;</span><br><span class="line">redirectPort=&quot;8443&quot;</span><br><span class="line"></span><br><span class="line">&lt;!‐‐ 当前可以同时处理的最大用户访问数最大连接数配置（并发能力） --&gt;</span><br><span class="line">maxThreads=&quot;1000&quot;</span><br><span class="line"></span><br><span class="line">&lt;!‐‐ Tomcat初始化时创建的线程数。最小空闲线程连接数用于优化线程池 --&gt;</span><br><span class="line">minSpareThreads=&quot;100&quot; </span><br><span class="line"></span><br><span class="line">&lt;!‐‐ 一旦创建的线程超过这个值，Tomcat就会关闭不再需要的socket线程。 --&gt;</span><br><span class="line">maxSpareThreads=&quot;1000&quot;</span><br><span class="line"></span><br><span class="line">acceptorThreadCount=&quot;2&quot; </span><br><span class="line"></span><br><span class="line">&lt;!‐‐ 当所有的线程以分配，仍然允许连接进来，但是出于等待状态的用户数。 --&gt;</span><br><span class="line">&lt;!‐‐ 等待线程数+工作线程数=总的可最大连接数,超过这个数的请求将不予处理。 --&gt;</span><br><span class="line">acceptCount=&quot;2000&quot;</span><br><span class="line">minProcessors=&quot;100&quot;</span><br><span class="line">maxProcessors=&quot;2000&quot;</span><br><span class="line"></span><br><span class="line">&lt;!‐‐ 为了消除DNS查询对性能的影响我们可以关闭DNS查询，关闭该功能在一定程度上提高了Tomcat服务器的性能; --&gt;</span><br><span class="line">enableLookups=&quot;false&quot;</span><br><span class="line">maxKeepAliveRequests=&quot;-1&quot;</span><br><span class="line">keepAliveTimeout=&quot;-1&quot;</span><br><span class="line">disableUploadTimeout=&quot;false&quot;</span><br><span class="line">connectionUploadTimeout=&quot;150000&quot;</span><br><span class="line">useSendfile=&quot;false&quot; </span><br><span class="line"></span><br><span class="line">&lt;!‐‐ Tomcat 压缩配置，建议在前端 nginx 上开启压缩。Tomcat 作为应用服务器本身就很繁忙了。--&gt;</span><br><span class="line">compression=&quot;on&quot;</span><br><span class="line">compressionMinSize=&quot;2048&quot;</span><br><span class="line">compressableMimeType=&quot;text/html,text/xml,application/javascript,application/json,text/javascript,text/css,text/plain,image/gif,image/png&quot;</span><br><span class="line">URIEncoding=&quot;UTF-8&quot; /&gt;</span><br></pre></td></tr></table></figure></li>
</ol>
<ol start="3">
<li><p>arp模式进行高并发选择</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 1、现在arp源码包</span></span><br><span class="line"><span class="built_in">cd</span> /usr/local/src</span><br><span class="line">wget https://mirrors.tuna.tsinghua.edu.cn/apache/apr/apr-1.7.2.tar.gz</span><br><span class="line">wget https://mirrors.tuna.tsinghua.edu.cn/apache/apr/apr-util-1.6.3.tar.gz</span><br><span class="line"></span><br><span class="line">tar -zxvf apr-1.7.2.tar.gz &amp;&amp; tar -zxvf apr-util-1.6.3.tar.gz</span><br><span class="line"><span class="comment"># 2、编译安装</span></span><br><span class="line"><span class="built_in">cd</span> apr-1.7.2</span><br><span class="line">./configure --prefix=/usr/local/apr</span><br><span class="line">make -j 2 &amp;&amp; make install</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> apr-util-1.6.3</span><br><span class="line">./configure --prefix=/usr/local/apr-util --with-apr=/usr/local/apr/</span><br><span class="line">make -j2 &amp;&amp; make install</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3、添加apr path环境变量</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;export LD_LIBRARY_PATH=/usr/local/apr/lib&quot;</span> &gt; /etc/profile</span><br><span class="line"><span class="built_in">source</span> /etc/profile</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4、配置arp模式</span></span><br><span class="line">vi tomcat目录/conf/server.xml</span><br><span class="line"><span class="comment"># 设置文件内容如下</span></span><br><span class="line">&lt;Connector port=<span class="string">&quot;8080&quot;</span> protocol=<span class="string">&quot;org.apache.coyote.http11.Http11AprProtocol&quot;</span></span><br><span class="line">               connectionTimeout=<span class="string">&quot;20000&quot;</span></span><br><span class="line">               redirectPort=<span class="string">&quot;8443&quot;</span> /&gt;</span><br><span class="line"><span class="comment"># 注意如果SSLEngine设置off会导致报错</span></span><br><span class="line">&lt;Listener className=<span class="string">&quot;org.apache.catalina.core.AprLifecycleListener&quot;</span> SSLEngine=<span class="string">&quot;on&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 5、启动日志查看</span></span><br><span class="line"><span class="built_in">cat</span> apache-tomcat/logs/catalina.out</span><br><span class="line">12-Sep-2019 12:37:47.381 INFO [main] org.apache.coyote.AbstractProtocol.start Starting ProtocolHandler [<span class="string">&quot;http-apr-10.10.107.222-8080&quot;</span>]</span><br><span class="line">12-Sep-2019 12:37:47.417 INFO [main] org.apache.coyote.AbstractProtocol.start Starting ProtocolHandler [<span class="string">&quot;https-openssl-apr-443&quot;</span>]</span><br><span class="line">12-Sep-2019 12:37:47.419 INFO [main] org.apache.catalina.startup.Catalina.start Server startup <span class="keyword">in</span> 891 ms</span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
</ol>
<ol start="4">
<li><p>启用外部连接池</p>
<p>描述：执行器（线程池）在tomcat中每一个用户请求都是一个线程，所以可以使用线程池提高性能。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 去掉下面两个元素注释并修改maxThreads： --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Executor</span> <span class="attr">name</span>=<span class="string">&quot;tomcatThreadPool&quot;</span> <span class="attr">namePrefix</span>=<span class="string">&quot;catalina-exec-&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">maxThreads</span>=<span class="string">&quot;300&quot;</span> <span class="attr">minSpareThreads</span>=<span class="string">&quot;4&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Connector</span> <span class="attr">executor</span>=<span class="string">&quot;tomcatThreadPool&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">port</span>=<span class="string">&quot;8080&quot;</span> <span class="attr">protocol</span>=<span class="string">&quot;org.apache.coyote.http11.Http11NioProtocol&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">maxThreads</span>=<span class="string">&quot;1000&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">minSpareThreads</span>=<span class="string">&quot;100&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">maxSpareThreads</span>=<span class="string">&quot;200&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">acceptCount</span>=<span class="string">&quot;1000&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">disableUploadTimeout</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">connectionTimeout</span>=<span class="string">&quot;30000&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">URIEncoding</span>=<span class="string">&quot;UTF-8&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">enableLookups</span>=<span class="string">&quot;false&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">compression</span>=<span class="string">&quot;on&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">compressionMinSize</span>=<span class="string">&quot;2048&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">compressableMimeType</span>=<span class="string">&quot;text/html,text/xml,text/javascript,text/css,text/plain,image/gif,image/jpg,image/png&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">redirectPort</span>=<span class="string">&quot;8443&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>


</li>
<li><p>禁用自动检测更新加载</p>
<p>Context元素reloadable属性会监视在 <code>web-inf/classes</code> 和<code>web-inf/lib</code> 目录下class文件的改动，如果监测到有class文件被更新的，服务器会自动重新加载web应用。 </p>
<p>在开发和调试阶段,将其改为<code>true</code>但是一般像Eclipse等开发环境都会默认改为<code>true</code></p>
<p>在正式发布阶段，应将其该为<code>false</code>可以降低Tomcat的运行负荷，提高Tomcat的运行性能</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vi conf/server.xml</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 在&lt;/Host&gt;之前加入类似以下内容：（重启生效）</span></span><br><span class="line">&lt;context path=<span class="string">&quot;/bbs&quot;</span> docbase=<span class="string">&quot;bbs&quot;</span>  reloadable=<span class="string">&quot;false&quot;</span>/&gt;</span><br></pre></td></tr></table></figure></li>
</ol>
<ol start="6">
<li><p>增大随机数熵池</p>
<p>描述：当你执行了 .&#x2F;startup.sh 或者 .&#x2F;catalina.sh start 后等待时间过长能要几分钟才能正常提供服务。 原因：在apache-tomcat 官方文档：如何让 tomcat 启动更快里面提到了一些启动时的优化项，其中一项是关于随机数生成时，采用的”熵源”(entropy source)的策略。</p>
<p>使用伪随机函数生成器:</p>
<ul>
<li>通过修改 Tomcat 启动文件 <code>-Djava.security.egd=file:/dev/urandom</code></li>
<li>通过修改 JRE 中的 <code>java.security</code> 文件 <code>securerandom.source=file:/dev/urand</code></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">JAVA_OPTS=<span class="string">&quot;-server -Xms1024m -Xmx2048m -XX:+UseConcMarkSweepGC -XX:CMSInitiatingOccupancyFraction=80 -XX:-PrintGC -XX:-PrintGCDetails -XX:-PrintGCTimeStamps  -Djava.security.egd=file:/dev/urandom&quot;</span></span><br></pre></td></tr></table></figure>

<p>增大&#x2F;dev&#x2F;random的熵池（推荐）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装熵池服务 rngd</span></span><br><span class="line">yum -y install rng-tools</span><br><span class="line">systemctl start rngd</span><br><span class="line">systemctl <span class="built_in">enable</span> rngd</span><br></pre></td></tr></table></figure>

<p>启动服务后观察 <code>cat/proc/sys/kernel/random/entropy_avail</code> 基本在三千左右。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> /proc/sys/kernel/random/entropy_avail</span><br><span class="line">3311</span><br></pre></td></tr></table></figure></li>
</ol>
<h1 id="安全加固"><a href="#安全加固" class="headerlink" title="安全加固"></a>安全加固</h1><h2 id="身份鉴别"><a href="#身份鉴别" class="headerlink" title="身份鉴别"></a>身份鉴别</h2><ol>
<li><p>口令复杂度,不同用户不同账号</p>
<p>描述：口令要求：长度至少8位，并包括数字、小写字母、大写字母和特殊符号4类中至少3类。 修改tomcat配置文件&#x2F;conf&#x2F;tomcat-users.xml配置文件，要求usr1密码必须满足复杂度要求。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">user</span> <span class="attr">username</span>=<span class="string">&quot;Tomcat1&quot;</span> <span class="attr">password</span>=<span class="string">&quot;12345qwe&quot;</span> <span class="attr">roles</span>=<span class="string">&quot;manager-gui&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">user</span> <span class="attr">username</span>=<span class="string">&quot;Tomcat2&quot;</span> <span class="attr">password</span>=<span class="string">&quot;12345qwe&quot;</span> <span class="attr">roles</span>=<span class="string">&quot;admin-gui&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>


</li>
<li><p>安全配置manager登录页面并且删除多余账号</p>
<p>描述：Tomcat的主要管理界面被称为Manager应用程序</p>
<p>如果不使用manager来管理部署应用,建议修改tomcat配置文件<code>/conf/tomcat-users.xml</code>配置文件来禁用或者删除manager文件夹</p>
<p>如果使用该功能我们需要进行配置口令以及强密码包括访问控制,删除与工作无关的帐号以及应用。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#1.配置强密码登录manager后面</span></span><br><span class="line">vi tomcat_user.xml</span><br><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span><br><span class="line">&lt;tomcat-users xmlns=<span class="string">&quot;http://tomcat.apache.org/xml&quot;</span></span><br><span class="line">              xmlns:xsi=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span><br><span class="line">              xsi:schemaLocation=<span class="string">&quot;http://tomcat.apache.org/xml tomcat-users.xsd&quot;</span></span><br><span class="line">              version=<span class="string">&quot;1.0&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">#角色如下并且要记得只赋予最小权限：</span></span><br><span class="line"><span class="comment"># manager-gui：可以访问web界面</span></span><br><span class="line"><span class="comment"># manager-status：只可以访问“Server Status”页面</span></span><br><span class="line"><span class="comment"># manager-script：可以脚本文本界面和“Server Status”页面</span></span><br><span class="line"><span class="comment"># manager-jmx：可以访问JMX代理界面和“Server Status”页面</span></span><br><span class="line">  &lt;role rolename=<span class="string">&quot;manager-gui&quot;</span>/&gt;</span><br><span class="line">  <span class="comment">#host-manager页面</span></span><br><span class="line">  &lt;role rolename=<span class="string">&quot;admin-gui&quot;</span>/&gt;</span><br><span class="line">  &lt;!--密码复杂度需要满足等保要求--&gt;</span><br><span class="line">  &lt;user username=<span class="string">&quot;admin&quot;</span> password=<span class="string">&quot;@weiyigeek@&quot;</span> roles=<span class="string">&quot;manager-gui,admin-gui&quot;</span>/&gt;</span><br><span class="line">&lt;/tomcat-users&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">#2.访问控制设定(其实默认只能本机访问)</span></span><br><span class="line">$/opt/tomcat/apache-tomcat-8.5.45/webapps/manager/META-INF/</span><br><span class="line"><span class="comment">#采用正则添加匹配</span></span><br><span class="line">&lt;Valve className=<span class="string">&quot;org.apache.catalina.valves.RemoteAddrValve&quot;</span> allow=<span class="string">&quot;127\.\d+\.\d+\.\d+|::1|0:0:0:0:0:0:0:1&quot;</span> /&gt;</span><br></pre></td></tr></table></figure>


</li>
<li><p>Tomcat虚拟主机管理器安全配置并且删除多余账号</p>
<p>描述：与manager管理一样如果使用的话进需要进行安全配置</p>
<p>不使用的话建议删除webapps应用目录下的<code>host-manager</code></p>
<p>使用需要进行安全配置</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#登录密码配置</span></span><br><span class="line">vi conf/tomcat-users.xml</span><br><span class="line">&lt;role rolename=<span class="string">&quot;admin-gui&quot;</span>/&gt;</span><br><span class="line">&lt;user username=<span class="string">&quot;tomcat&quot;</span> password=<span class="string">&quot;s3cret&quot;</span> roles=<span class="string">&quot;admin-gui&quot;</span>/&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">#访问配置(其实默认只能本机访问)</span></span><br><span class="line">&lt;Valve className=<span class="string">&quot;org.apache.catalina.valves.RemoteAddrValve&quot;</span> allow=<span class="string">&quot;127\.\d+\.\d+\.\d+|::1|0:0:0:0:0:0:0:1|10\.\d+\.\d+\.\d+&quot;</span> /&gt;</span><br></pre></td></tr></table></figure>


</li>
<li><p>非root启动服务</p>
<p>描述：建议使用专用用户 tomcat 或者 nobody 用户来启动 Tomcat，为了防止 Tomcat 被植入 web shell 程序后，可以修改项目文件。 因此我们要将 Tomcat 和项目的属主做分离（常常使upload目录可以有上传权限,但是不能有执行的权限）,他也无法创建和编辑项目文件。</p>
</li>
</ol>
<h2 id="访问控制"><a href="#访问控制" class="headerlink" title="访问控制"></a>访问控制</h2><p>描述：Tomcat提供了防止恶意攻击或禁止某些机器访问的设置，限制手段来防止恶意的服务攻击; 可以让你过滤来自请求的主机或IP地址，并允许或拒绝哪些主机&#x2F;IP。与之类似的在Apache的httpd文件里有对每个目录的允许&#x2F;拒绝指定。</p>
<p>1.Context.xml访问控制设置 Tomcat提供了两个参数供你配置：<code>RemoteHostValve</code> 和<code>RemoteAddrValve</code>。 例如: 你可以把Admin Web application设置成只允许本地访问设置如下：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Context</span> <span class="attr">path</span>=<span class="string">&quot;/path/to/secret_files&quot;</span> &gt;</span></span><br><span class="line"># 如果没有给出允许主机的指定，那么与拒绝主机匹配的主机就会被拒绝，除此之外的都是允许的</span><br><span class="line">  <span class="tag">&lt;<span class="name">Valve</span> <span class="attr">className</span>=<span class="string">&quot;org.apache.catalina.valves.RemoteAddrValve&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">allow</span>=<span class="string">&quot;10.0.172.109&quot;</span> <span class="attr">deny</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Context</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h2 id="安全审计"><a href="#安全审计" class="headerlink" title="安全审计"></a>安全审计</h2><p><em>增加记录日志功能</em> </p>
<p>描述：Tomcat的日志文件存放于logs文件夹，里面包含了多种类型的日志，主要分为两类：</p>
<p>-<br>  一是运行中的日志，它主要记录运行的一些信息，尤其是一些异常错误日志信息。</p>
<ul>
<li>二是访问日志信息，它记录的访问的时间，IP，访问的资料等相关信息。</li>
</ul>
<p>各个日志文件的作用：</p>
<ul>
<li>localhost.2023-03-10.log：程序异常没有被捕获的时候抛出的地方</li>
<li>catalina.2023-03-10.log：程序的输出，tomcat的运行日志</li>
<li>manager.2023-03-10.log：manager项目专有的</li>
<li>host-manager.2023-03-10.log：manager项目专有的</li>
<li>localhost_access_log.2023-03-10.txt：访问日志记录</li>
</ul>
<p>编辑tomcat配置文件server.xml配置文件将以下内容的注释标记：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Access log processes all example.</span></span><br><span class="line"><span class="comment">            Documentation at: /docs/config/valve.html</span></span><br><span class="line"><span class="comment">            <span class="doctag">Note:</span> The pattern used is equivalent to using pattern=&quot;common&quot; --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Valve</span> <span class="attr">className</span>=<span class="string">&quot;org.apache.catalina.valves.AccessLogValve&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">directory</span>=<span class="string">&quot;logs&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">prefix</span>=<span class="string">&quot;localhost_access_log&quot;</span> <span class="attr">suffix</span>=<span class="string">&quot;.txt&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">pattern</span>=<span class="string">&quot;%h %l %u %t <span class="symbol">&amp;quot;</span>%r<span class="symbol">&amp;quot;</span> %s %b&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">  每个字段的含义为</span></span><br><span class="line"><span class="comment">192.168.228.1 - - [29/Sep/2017:11:26:10 +0800] &quot;GET / HTTP/1.1&quot; 200 11418</span></span><br><span class="line"><span class="comment">%h：远程主机名或IP地址：192.168.228.1</span></span><br><span class="line"><span class="comment">%l：远程用户名，始终为“-”</span></span><br><span class="line"><span class="comment">%u：已验证的远程用户，如果没有则为“-”</span></span><br><span class="line"><span class="comment">%t：访问日期和时间：[29/Sep/2017:11:26:10 +0800]</span></span><br><span class="line"><span class="comment">%r：http请求中的第一行：GET / HTTP/1.1</span></span><br><span class="line"><span class="comment">%s：http状态码：200</span></span><br><span class="line"><span class="comment">%b：发送的字节数：11418</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br></pre></td></tr></table></figure>

<p>属性解释：</p>
<ul>
<li>Directory:日志文件放置的目录，在tomcat下面有个logs文件夹，那里面是专门放置日志文件的，也可以修改为其他路径；</li>
<li>Prefix:这个是日志文件的名称前缀，日志名称为localhost_access_log.2008-10-22.txt，前面的前缀就是这个localhost_access_log。</li>
<li>Suffix: 文件后缀名。</li>
<li>Pattern:common方式时，将记录访问源IP、本地服务器IP、记录日志服务器IP、访问方式、发送字节数、本地接收端口、访问URL地址等相关信息在日志文件中。</li>
<li>resolveHosts:值为true时，tomcat会将这个服务器IP地址通过DNS转换为主机名，如果是false，就直接写服务器IP地址。</li>
</ul>
<p>Tomcat的运行日志有以下7个级别：</p>
<blockquote>
<p> SEVERE &gt; WARNING &gt; INFO &gt; CONFIG &gt; FINE &gt; FINER &gt; FINEST  </p>
</blockquote>
<h2 id="资源控制"><a href="#资源控制" class="headerlink" title="资源控制"></a>资源控制</h2><h3 id="移除默认应用程序"><a href="#移除默认应用程序" class="headerlink" title="移除默认应用程序"></a>移除默认应用程序</h3><p>描述：Tomcat可能自带一些默认的web应用程序。如果不是一定需要，必须将它们移除。 移除${tomcat_home}&#x2F;webapps中所有的默认的web应用程序有：<code>ROOT、Documentation、Examples、Host Manager和Manager</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#如果不是一定需要，必须将它们移除。</span></span><br><span class="line"><span class="built_in">rm</span> -rf /opt/tomcat/apache-tomcat-8.5.45/webapps/*</span><br></pre></td></tr></table></figure>



<h3 id="错误页面重定向"><a href="#错误页面重定向" class="headerlink" title="错误页面重定向"></a>错误页面重定向</h3><p>描述：编辑tomcat配置文件&#x2F;conf&#x2F;web.xml文件,在最后一行之前加入以下内容,然后需要重新启动tomcat服务;</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">error-page</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 配置实现了将404未找到jsp网页的错误导向noFile.htm页面,还可以添加其多的错误代码导向页面，如403，500 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">error-code</span>&gt;</span>404<span class="tag">&lt;/<span class="name">error-code</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">location</span>&gt;</span>/noFile.htm<span class="tag">&lt;/<span class="name">location</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">error-page</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">error-page</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--配置实现了当jsp网页出现java.lang.NullPointerException导常时，转向error.jsp错误页面 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">exception-type</span>&gt;</span>java.lang.NullPointerException<span class="tag">&lt;/<span class="name">exception-type</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">location</span>&gt;</span>/error.jsp<span class="tag">&lt;/<span class="name">location</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">error-page</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>当出现<code>NullPointerException</code>异常时tomcat会把网页导入到<code>error.jsp</code>，且会打印出出错信息。</p>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%@ pageerrorPage=<span class="string">&quot;/error.jsp&quot;</span> %&gt;</span><br><span class="line">典型的error.jsp错误页面的程序写法如下:</span><br><span class="line">&lt;%@ pagecontentType=<span class="string">&quot;text/html;charset=GB2312&quot;</span>%&gt;</span><br><span class="line">&lt;%@ pageisErrorPage=<span class="string">&quot;true&quot;</span>%&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">  &lt;title&gt;错误页面&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;出错了：&lt;/p&gt;错误信息:&lt;%= exception.getMessage() %&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">Stack Trace is :</span><br><span class="line">  &lt;pre&gt;</span><br><span class="line">    &lt;font color=<span class="string">&quot;red&quot;</span>&gt;&lt;%</span><br><span class="line">    java.io.CharArrayWritercw = <span class="keyword">new</span> <span class="title class_">java</span>.io.CharArrayWriter();</span><br><span class="line">    java.io.PrintWriterpw = <span class="keyword">new</span> <span class="title class_">java</span>.io.PrintWriter(cw,<span class="literal">true</span>);</span><br><span class="line">    exception.printStackTrace(pw);</span><br><span class="line">    out.println(cw.toString());</span><br><span class="line">    %&gt;</span><br><span class="line">    &lt;/font&gt;</span><br><span class="line">  &lt;/pre&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<p>补充事项：</p>
<ul>
<li>如果Manager应用程序没被移除，必须手动将位于 <code>CATALINA_HOME/webapps/manager/WEB-INF/jsp/</code> 的错误页面里的Tomcat版本信息移除。</li>
</ul>
<h3 id="限制访问Tomcat文件夹"><a href="#限制访问Tomcat文件夹" class="headerlink" title="限制访问Tomcat文件夹"></a>限制访问Tomcat文件夹</h3><p>描述：Tomcat文件夹只能由tomcat用户本身访问，尤其是对于目录tomcathome&#x2F;conf&#x2F;和{tomcat_home}&#x2F;webapps当不需要通过应用程序服务器自动部署时，标准配置就是将所有Tomcat文件的所有者设置为root，并且所属群组设置为Tomcat,然后用chmod 740仅允许root用户编辑文件并允许Tomcat用户读取文件。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#(注意点)例外是临时和工作目录的所有者应该是Tomcat用户而不是root用户。</span></span><br><span class="line"><span class="built_in">chown</span> root:tomcat /opt/tomcat</span><br><span class="line"><span class="built_in">chmod</span> 740 <span class="variable">$&#123;tomcat_home&#125;</span>/conf</span><br><span class="line"><span class="built_in">chmod</span> 740 <span class="variable">$&#123;tomcat_home&#125;</span>/webapp</span><br></pre></td></tr></table></figure>



<h3 id="会话超时"><a href="#会话超时" class="headerlink" title="会话超时"></a>会话超时</h3><p>描述：所有的web应用程序的会话超时必须设置为20分钟可通过编辑 <code>CATALINA_HOME/conf/web.xml</code> 文件并做以下配置来实现：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Tomcat8默认的超时时间是半个小时 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">session-config</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">session-timeout</span>&gt;</span>20<span class="tag">&lt;/<span class="name">session-timeout</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">session-config</span>&gt;</span></span><br></pre></td></tr></table></figure>





<h2 id="入侵防范"><a href="#入侵防范" class="headerlink" title="入侵防范"></a>入侵防范</h2><h3 id="防止缓慢的http拒绝服务攻击与限制监听网络接口"><a href="#防止缓慢的http拒绝服务攻击与限制监听网络接口" class="headerlink" title="防止缓慢的http拒绝服务攻击与限制监听网络接口"></a>防止缓慢的http拒绝服务攻击与限制监听网络接口</h3><p>描述：不要让连接器（connector）监听服务器上所有可用的网络接口和IP地址，而要让连接器监听指定的网络接口和IP地址采用address属性,防止应用程序意外地运行在某个开放的网络接口上。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#将默认值20000改成10000即可单位ms注意需要根据实际需求更改</span></span><br><span class="line">vi conf/server.xml</span><br><span class="line">&lt;Connector port=<span class="string">&quot;8080&quot;</span> protocol=<span class="string">&quot;HTTP/1.1&quot;</span> </span><br><span class="line">connectionTimeout=<span class="string">&quot;10000&quot;</span> </span><br><span class="line">redirectPort=<span class="string">&quot;8443&quot;</span> address=<span class="string">&quot;127.0.0.1&quot;</span> /&gt;</span><br></pre></td></tr></table></figure>



<h3 id="禁用tomcat的AJP协议（8-5-51之前的版本默认开启后续则禁用）"><a href="#禁用tomcat的AJP协议（8-5-51之前的版本默认开启后续则禁用）" class="headerlink" title="禁用tomcat的AJP协议（8.5.51之前的版本默认开启后续则禁用）"></a>禁用tomcat的AJP协议（8.5.51之前的版本默认开启后续则禁用）</h3><p>描述：AJP（Apache JServer Protocol）AJPv13协议是面向包的。 WEB服务器和Servlet容器通过TCP连接来交互, 为了节省SOCKET创建的昂贵代价，WEB服务器会尝试维护一个永久TCP连接到servlet容器，并且在多个请求和响应周期过程会重用连接。</p>
<p>实际上我们一般使用Nginx+Tomcat架构所以用不着Ajp协议可以将其禁用。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#  编辑server.xml进行注释配置</span></span><br><span class="line">vi conf/server.xml</span><br><span class="line">&lt;!-- &lt;Connector port=<span class="string">&quot;8009&quot;</span> protocol=<span class="string">&quot;AJP/1.3&quot;</span> redirectPort=<span class="string">&quot;8443&quot;</span> /&gt; --&gt;</span><br></pre></td></tr></table></figure>

<p><img src="/picture/request_tomcat_jsp_flow.png" alt="Web客户访问Tomcat服务器上的JSP组件的两种方式" loading="lazy"></p>
<h3 id="禁用非法HTTP请求方法"><a href="#禁用非法HTTP请求方法" class="headerlink" title="禁用非法HTTP请求方法"></a>禁用非法HTTP请求方法</h3><p>描述：readonly参数默认是true即不允许<code>delete</code>和<code>put</code>操作 </p>
<p>编辑<code>web.xml</code>文件查看<code>org.apache.catalina.servlets.DefaultServlet</code>是否存在如下配置</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim conf/web.xml</span><br><span class="line">&lt;init-param&gt;</span><br><span class="line">  &lt;param-name&gt;<span class="built_in">readonly</span>&lt;/param-name&gt;</span><br><span class="line">  &lt;param-value&gt;<span class="literal">true</span>&lt;/param-value&gt;</span><br><span class="line">&lt;/init-param&gt;</span><br></pre></td></tr></table></figure>



<h3 id="禁止目录列出"><a href="#禁止目录列出" class="headerlink" title="禁止目录列出"></a>禁止目录列出</h3><p>描述：设置<code>DefaultServlet</code>的<code>listings</code>为<code>false</code> 这不仅仅是因为允许显示目录列表被认为是不安全的，而且还因为生成具有数千个文件的目录列表会消耗大量的CPU资源，相当于被DDoS攻击。</p>
<p>注意：Tomcat8默认是false并且更改后需要重新启动tomcat服务;</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vi conf/web.xml</span><br><span class="line">&lt;!-- 同样也是在下面进行添加--&gt;</span><br><span class="line">&lt;servlet-class&gt;org.apache.catalina.servlets.DefaultServlet&lt;/servlet-class&gt;</span><br><span class="line">&lt;init-param&gt;</span><br><span class="line">  &lt;param-name&gt;listings&lt;/param-name&gt;</span><br><span class="line">  &lt;param-value&gt;<span class="literal">false</span>&lt;/param-value&gt;</span><br><span class="line">&lt;/init-param&gt;</span><br></pre></td></tr></table></figure>



<h3 id="防止恶意关闭服务"><a href="#防止恶意关闭服务" class="headerlink" title="防止恶意关闭服务"></a>防止恶意关闭服务</h3><p>描述：编辑tomcat配置文件conf&#x2F;server.xml配置文件，shutdown的值为复杂的字符串：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 随机生成密码</span></span><br><span class="line"><span class="variable">$cat</span> /dev/urandom | <span class="built_in">tr</span> -dc <span class="string">&#x27;_a-zA-Z0-9&#x27;</span> | <span class="built_in">head</span> -c 12</span><br><span class="line">r02BPRnHyq89</span><br><span class="line"><span class="comment"># 配置如下:将默认的SHUTDOWN变成r02BPRnHyq89</span></span><br><span class="line">&lt;Serverport=<span class="string">&quot;8005&quot;</span> shutdown=<span class="string">&quot;r02BPRnHyq89&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果不需要该功能，必须要将其停用，设置如下：</span></span><br><span class="line">&lt;Server  port=<span class="string">&quot;-1&quot;</span> shutdown=<span class="string">&quot;SHUTDOWN&quot;</span>&gt; <span class="comment"># 本地管理脚本可将服务器关闭，即使在关闭端口被禁用的情况下。</span></span><br></pre></td></tr></table></figure>



<h3 id="修改Banner掩盖真实信息"><a href="#修改Banner掩盖真实信息" class="headerlink" title="修改Banner掩盖真实信息"></a>修改Banner掩盖真实信息</h3><p>描述：修改以掩饰真实版本信息防止攻击者以版本的漏洞进行攻击,影响错误页面和响应头;</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># (1)修改/lib/catalina.jar中org/apache/catalina/util/Serverinfo.properties问津中的以下参数 (推荐方式)</span></span><br><span class="line"><span class="comment"># 解压缩 catalina.jar</span></span><br><span class="line">vi catalina/org/apache/catalina/util/Serverinfo.properties</span><br><span class="line">server.info=Nginx</span><br><span class="line">server.number=0.0.0.0</span><br><span class="line">server.built=Apr 28 2023 07:25:00 UTC</span><br><span class="line"><span class="comment"># 将修改后的信息压缩回jar包</span></span><br><span class="line">jar uvf catalina.jar org/apache/catalina/util/ServerInfo.properties</span><br><span class="line"></span><br><span class="line"><span class="comment"># (2)修改web.xml中Connector链接器</span></span><br><span class="line">&lt;Connector port=<span class="string">&quot;8080&quot;</span> protocol=<span class="string">&quot;HTTP/1.1&quot;</span>  </span><br><span class="line">  connectionTimeout=<span class="string">&quot;20000&quot;</span> </span><br><span class="line">  redirectPort=<span class="string">&quot;8443&quot;</span>  </span><br><span class="line">  URIEncoding=<span class="string">&quot;UTF-8&quot;</span> </span><br><span class="line">  useBodyEncodingForURI=<span class="string">&quot;true&quot;</span> </span><br><span class="line">  server=<span class="string">&quot;Microsoft-IIS/6.5&quot;</span>/&gt;</span><br></pre></td></tr></table></figure>



<h3 id="关闭自动部署"><a href="#关闭自动部署" class="headerlink" title="关闭自动部署"></a>关闭自动部署</h3><p>描述：Tomcat允许在Tomcat运行时自动部署应用程序。为了防止被植入木马等恶意程序，因此我们要关闭自动部署。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vi server.xml</span><br><span class="line"><span class="comment">#将unpackWARs与autoDeploy的true值改成false;</span></span><br><span class="line">&lt;Host name=<span class="string">&quot;localhost&quot;</span>  appBase=<span class="string">&quot;webapps&quot;</span> unpackWARs=<span class="string">&quot;false&quot;</span> autoDeploy=<span class="string">&quot;false&quot;</span>&gt;</span><br></pre></td></tr></table></figure>

<p>在托管环境中Web应用程序可能不受信任，也可以设置<code>deployXML</code>属性为<code>false</code>来忽略<code>context.xml</code>以防给该web应用程序提高权限。</p>
<h3 id="配置HTTPS加密协议"><a href="#配置HTTPS加密协议" class="headerlink" title="配置HTTPS加密协议"></a>配置HTTPS加密协议</h3><p>描述：采用HTTPS协议加密可以防止中间人攻击,以及数据的拦截和修改的验证导致攻击无效;</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># (1)用JDK自带的keytool工具生成一个证书,默认三个月的有效期;</span></span><br><span class="line"><span class="variable">$JAVA_HOME</span>/bin/keytool -genkey -<span class="built_in">alias</span> tomcat -keyalg RSA -keystore /tmp/keystore</span><br><span class="line">Enter keystore password:</span><br><span class="line">Re-enter new password:</span><br><span class="line">What is your first and last name?</span><br><span class="line">  [Unknown]:  Tomcat</span><br><span class="line">What is the name of your organizational unit?</span><br><span class="line">  [Unknown]:  CQ</span><br><span class="line">What is the name of your organization?</span><br><span class="line">  [Unknown]:  CQ</span><br><span class="line">What is the name of your City or Locality?</span><br><span class="line">  [Unknown]:  BEIJING</span><br><span class="line">What is the name of your State or Province?</span><br><span class="line">  [Unknown]:  XIZHIMEN</span><br><span class="line">What is the two-letter country code <span class="keyword">for</span> this unit?</span><br><span class="line">  [Unknown]:  408119</span><br><span class="line">Is CN=Tomcat, OU=CQ, O=CQ, L=BEIJING, ST=XIZHIMEN, C=408119 correct?</span><br><span class="line">  [no]:  Y</span><br><span class="line"></span><br><span class="line">Enter key password <span class="keyword">for</span> &lt;tomcat&gt;</span><br><span class="line">        (RETURN <span class="keyword">if</span> same as keystore password):</span><br><span class="line">Re-enter new password:</span><br><span class="line"></span><br><span class="line"><span class="comment"># (2)修改tomcat安装目录下/conf/server.xml配置文件，更改为使用HTTPS方式，增加如下行：</span></span><br><span class="line">&lt;Connector classname=<span class="string">&quot;org.apache.catalina.http.HttpConnector&quot;</span></span><br><span class="line">      port=<span class="string">&quot;443&quot;</span> protocol=<span class="string">&quot;HTTP/1.1&quot;</span>  minProcessors=<span class="string">&quot;5&quot;</span></span><br><span class="line">      SSLEnabled=<span class="string">&quot;true&quot;</span></span><br><span class="line">      maxprocessors=<span class="string">&quot;100&quot;</span></span><br><span class="line">      enableLookups=<span class="string">&quot;true&quot;</span> acceptCount=<span class="string">&quot;10&quot;</span>  debug=<span class="string">&quot;0&quot;</span></span><br><span class="line">      scheme=<span class="string">&quot;https&quot;</span></span><br><span class="line">      Factory_classname=<span class="string">&quot;org.apache.catalina.SSLServerSocketFactory&quot;</span></span><br><span class="line">      secure=<span class="string">&quot;true&quot;</span></span><br><span class="line">      clientAuth=<span class="string">&quot;false&quot;</span></span><br><span class="line">      keystoreFile=<span class="string">&quot;/tmp/keystore&quot;</span></span><br><span class="line">      keystorePass=<span class="string">&quot;weiyigeek&quot;</span></span><br><span class="line">      sslProtocol=<span class="string">&quot;TLS&quot;</span> /&gt;</span><br><span class="line"><span class="comment">#SSL Connector来指定可用的SSL加密方式：  </span></span><br><span class="line">ciphers=<span class="string">&quot;SSL_RSA_WITH_RC4_128_SHA, TLS_RSA_WITH_AES_128_CBC_SHA,  TLS_DHE_RSA_WITH_AES_128_CBC_SHA, TLS_DHE_DSS_WITH_AES_128_CBC_SHA,  SSL_RSA_WITH_3DES_EDE_CBC_SHA, SSL_DHE_RSA_WITH_3DES_EDE_CBC_SHA,  SSL_DHE_DSS_WITH_3DES_EDE_CBC_SHA&quot;</span></span><br></pre></td></tr></table></figure>

<p>补充：为了使托管在Tomcat上的所有web应用程序强制使用HTTPS，必须在每个 CATALINA_HOME&#x2F;webapps&#x2F;$WEBAPP&#x2F;WEB-INF&#x2F;web.xml 文件里每个security-constraint标签关闭（标签）之前包含以下内容：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">user-data-constraint</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">transport-guarantee</span>&gt;</span>CONFIDENTIAL<span class="tag">&lt;/<span class="name">transport-guarantee</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">user-data-constraint</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h3 id="HttpOnly标记"><a href="#HttpOnly标记" class="headerlink" title="HttpOnly标记"></a>HttpOnly标记</h3><p>描述：对会话cookie自动启用HttpOnly的cookie标记，查看配置以确保该选项为被禁用。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 要启用HttpOnly设置使之全局应用于所有应用程序：</span></span><br><span class="line">&lt;Context useHttpOnly=<span class="string">&#x27;true&#x27;</span>&gt;</span><br><span class="line">...</span><br><span class="line">&lt;Context&gt;</span><br></pre></td></tr></table></figure>

<p>补充：如果应用程序需要通过JavaScript访问HttpOnly cookie，可以在METAINF&#x2F;context.xml中一个单独的Context中定义一个异常。</p>
<h3 id="CSRF防护-根据实际情况添加"><a href="#CSRF防护-根据实际情况添加" class="headerlink" title="CSRF防护(根据实际情况添加)"></a>CSRF防护(根据实际情况添加)</h3><p>描述：为保护应用程序必须启用Tomcat的跨站请求伪造防护。Tomcat8~9提供了基本的CSRF防护。可以在 CATALINA_BASE&#x2F;conf&#x2F;web.xml 中配置一个全局过滤器。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#该过滤器可以被每个使用 WEB-INF/web.xml 文件的应用程序覆盖。</span></span><br><span class="line">&lt;filter-mapping&gt; </span><br><span class="line">  &lt;filter-name&gt;CSRFPreventionFilter&lt;/filter-name&gt;  </span><br><span class="line">  &lt;url-pattern&gt;/*&lt;/url-pattern&gt;  </span><br><span class="line">&lt;/filter-mapping&gt;</span><br></pre></td></tr></table></figure>

<p>补充：使用CSRF防护可能会影响程序功能，必须要牢记这一点，尤其是在应用程序大量使用异步请求的情况下。</p>
<h3 id="默认设置"><a href="#默认设置" class="headerlink" title="默认设置"></a>默认设置</h3><p>描述：以下是常规的默认配置并且默认情况下这些设置被认为是安全的,如有在项目中进行更改的建议进行整改和调整;</p>
<ol>
<li><p>server.xml中默认安全配置</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vi <span class="variable">$CATALINA_HOME</span>/conf/server.xml</span><br><span class="line">&lt;Connector</span><br><span class="line">  <span class="comment">#1.设置为空或者false</span></span><br><span class="line">  allowTrace=<span class="string">&quot;false&quot;</span> </span><br><span class="line">/&gt;</span><br></pre></td></tr></table></figure>




</li>
<li><p>context.xml中默认安全配置</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vi <span class="variable">$CATALINA_HOME</span>/conf/server.xml</span><br><span class="line">&lt;Context </span><br><span class="line"><span class="comment">#1.将privileged属性设置为false，除非像Manager应用程序那样需要权限：</span></span><br><span class="line">privileged=<span class="string">&quot;false&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#2.确保crossContext值为空或被设为false,</span></span><br><span class="line"><span class="comment">#crossContext值为true可能会导致允许恶意应用程序向受限应用程序发送请求。</span></span><br><span class="line">crossContext=<span class="string">&quot;false&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#3.确保allowLinking值为空或被设为false。</span></span><br><span class="line"><span class="comment">#allowLinking值为true可能会导致目录遍历和源代码泄露漏洞的产生。</span></span><br><span class="line">allowLinking=<span class="string">&quot;false&quot;</span></span><br><span class="line">/&gt;</span><br></pre></td></tr></table></figure>




</li>
<li><p>Tomcat启动参数</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 1.当RECYCLE_FACADES选项设置为true时，Tomcat会回收请求间会话外观（session facade）,将导致请求间的信息泄漏</span></span><br><span class="line"><span class="comment"># 默认情况下，此参数未被设置(确保使用的启动脚本不包含以下内容)</span></span><br><span class="line">Dorg.apache.catalina.connector.RECYCLE_FACADES = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.允许在Tomcat上指定不同的路径分隔符，可能会允许攻击者访问应用程序，该行为本该被代理程序（比如mod_proxy）阻止</span></span><br><span class="line"><span class="comment"># 默认情况下，此参数未被设置(确保使用的启动脚本不包含以下内容)</span></span><br><span class="line">Dorg.apache.catalina.connector.CoyoteAdapter.ALLOW_BACKSLASH = FALSE</span><br><span class="line">Dorg.apache.tomcat.util.buf.UDecoder.ALLOW_ENCODED_SLASH = FALSE</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.允许自定义header状态消息，使攻击者也能够插header。</span></span><br><span class="line"><span class="comment"># 可能会导致XSS漏洞的产生。默认情况下此参数未被设置。</span></span><br><span class="line">Dorg.apache.coyote.USE_CUSTOM_STATUS_MSG_IN_HEADER = <span class="literal">false</span></span><br><span class="line">Dorg.apache.tomcat.util.buf.UDecoder.ALLOW_ENCODED_SLASH= FALSE</span><br><span class="line">Dorg.apache.coyote.USE_CUSTOM_STATUS_MSG_IN_HEADER = <span class="literal">false</span></span><br></pre></td></tr></table></figure></li>
</ol>
<h2 id="可选操作"><a href="#可选操作" class="headerlink" title="可选操作"></a>可选操作</h2><h3 id="Java-SecurityManager"><a href="#Java-SecurityManager" class="headerlink" title="Java SecurityManager"></a>Java SecurityManager</h3><p>描述：可用Java  SecurityManager限制单个应用程序的功能。</p>
<ul>
<li><code>$CATALINA_HOME/conf/catalina.policy</code> 文件包含了<code>Java  SecurityManager</code>使用的安全策略的配置</li>
<li>一旦配置了<code>catalina.policy</code> 文件，便可以使用<code>SecurityManager</code>和<code>–security</code>选项启Tomcat。</li>
</ul>
<p>注意事项：</p>
<ul>
<li>因为基本上所有的权限类型（比如访问单个文件和目录或Java包）都应该根据每个应用程序进行单独配置，所以这会大大增加操作成本。另外，限制过于严格的策略文件会影响应用程序的功能。</li>
</ul>
<h3 id="访问Java包控制"><a href="#访问Java包控制" class="headerlink" title="访问Java包控制"></a>访问Java包控制</h3><p>描述：Tomcat可限制对某些Java包的访问。如果检测到受限制的包被访问，将抛出安全异常。 对Java包做访问限制，打开 <code>$CATALINA_BASE/conf/catalina.properties</code> 文件并添加不允许访问的包至<code>package.access</code>列表。</p>
<p>分析Java import可以列出哪些应用程序需要哪些包。在Unix系统上，可以使用以下例子来实现：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">grep –R import <span class="variable">$&#123;tomcat_home&#125;</span>/webapps/WEBAPP</span><br></pre></td></tr></table></figure>





<h2 id="Server-xml生产配置实例"><a href="#Server-xml生产配置实例" class="headerlink" title="Server.xml生产配置实例"></a>Server.xml生产配置实例</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 修改Connector元素 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Connector</span> <span class="attr">executor</span>=<span class="string">&quot;tomcatThreadPool&quot;</span> </span></span><br><span class="line"><span class="tag">  <span class="attr">port</span>=<span class="string">&quot;8080&quot;</span> </span></span><br><span class="line"><span class="tag">  <span class="attr">protocol</span>=<span class="string">&quot;org.apache.coyote.http11.Http11NioProtocol&quot;</span></span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag">  <span class="attr">address</span>=<span class="string">&quot;127.0.0.1&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">acceptCount</span>=<span class="string">&quot;1000&quot;</span></span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag">  <span class="attr">connectionTimeout</span>=<span class="string">&quot;20000&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">compression</span>=<span class="string">&quot;on&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">compressionMinSize</span>=<span class="string">&quot;2048&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">compressableMimeType</span>=<span class="string">&quot;text/html,text/xml,text/javascript,text/css,text/plain,image/gif,image/jpg,image/png&quot;</span></span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag">  <span class="attr">disableUploadTimeout</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag">  <span class="attr">enableLookups</span>=<span class="string">&quot;false&quot;</span></span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag">  <span class="attr">maxThreads</span>=<span class="string">&quot;1000&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">minSpareThreads</span>=<span class="string">&quot;100&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">maxSpareThreads</span>=<span class="string">&quot;200&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">maxKeepAliveRequests</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">  </span></span><br><span class="line"><span class="tag">  <span class="attr">redirectPort</span>=<span class="string">&quot;8443&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">server</span>=<span class="string">&quot;SecWAF/1.9&quot;</span></span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag">  <span class="attr">URIEncoding</span>=<span class="string">&quot;UTF-8&quot;</span></span></span><br><span class="line"><span class="tag">  /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment"># 参数说明：</span></span><br><span class="line"><span class="comment">  protocol : 协议调整工作模式为Nio (org.apache.coyote.http11.Http11Nio)</span></span><br><span class="line"><span class="comment">  port : 绑定监听端口</span></span><br><span class="line"><span class="comment">  redirectPort ：重定向端口</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">  address : 绑定监听地址</span></span><br><span class="line"><span class="comment">  acceptCount ：当同时连接的人数达到`maxThreads`参数设置的值时其还可以接收排队的连接数量，超过这个连接的则直接返回拒绝连接。在实际应用中如果想加大Tomcat的并发数，应该同时加大 acceptCount 和 maxThreads 的值。</span></span><br><span class="line"><span class="comment">  </span></span><br><span class="line"><span class="comment">  connectionTimeout : 连接超时时间单位毫秒,0代表不限制。</span></span><br><span class="line"><span class="comment">  compression ：启用压缩功能。</span></span><br><span class="line"><span class="comment">  compressionMinSize ：最小压缩大小单位Byte。</span></span><br><span class="line"><span class="comment">  compressableMimeType ：压缩的文件类型。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">  disableUploadTimeout：禁用上传超时时间</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">  enableLookups ：是否开启域名反查,一般设置为false来提高处理能力。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">  maxThreads ：设置当前Tomcat的最大并发数,默认配置的最大请求数是150个,即同时能支持150个并发。</span></span><br><span class="line"><span class="comment">  minSpareThreads ：最小空闲线程数，设置当前Tomcat初始化时创建的线程数，默认值为25。</span></span><br><span class="line"><span class="comment">  maxSpareThreads ：最大空闲线程数，如果超过这个值会关闭无用的线程。</span></span><br><span class="line"><span class="comment">  maxKeepAliveRequests : 最大保持活动请求数,并且以必须设置tomcat的超时时间`connectionTimeout`,避免tomcat产生大量的TIME_WAIT连接。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">  server : 设置server字段响应头;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">  URIEncoding ：URI地址编码使用UTF-8</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br></pre></td></tr></table></figure>











]]></content>
      <categories>
        <category>Tomcat</category>
      </categories>
  </entry>
  <entry>
    <title>技术合集</title>
    <url>/2023/03/06/%E6%8A%80%E6%9C%AF%E5%90%88%E9%9B%86/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><p>[TOC]</p>
<h1 id="Java体系"><a href="#Java体系" class="headerlink" title="Java体系"></a>Java体系</h1><h2 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h2><h3 id="基础语法"><a href="#基础语法" class="headerlink" title="基础语法"></a>基础语法</h3><h3 id="控制流"><a href="#控制流" class="headerlink" title="控制流"></a>控制流</h3><h3 id="IO"><a href="#IO" class="headerlink" title="IO"></a>IO</h3><h3 id="Collection"><a href="#Collection" class="headerlink" title="Collection"></a>Collection</h3><h3 id="Lambda"><a href="#Lambda" class="headerlink" title="Lambda"></a>Lambda</h3><h3 id="Stream"><a href="#Stream" class="headerlink" title="Stream"></a>Stream</h3><h3 id="泛型"><a href="#泛型" class="headerlink" title="泛型"></a>泛型</h3><h3 id="多线程与并发"><a href="#多线程与并发" class="headerlink" title="多线程与并发"></a>多线程与并发</h3><h3 id="时间日期"><a href="#时间日期" class="headerlink" title="时间日期"></a>时间日期</h3><h3 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h3><h3 id="网络编程"><a href="#网络编程" class="headerlink" title="网络编程"></a>网络编程</h3><h3 id="XML"><a href="#XML" class="headerlink" title="XML"></a>XML</h3><h3 id="Swing"><a href="#Swing" class="headerlink" title="Swing"></a>Swing</h3><h3 id="国际化"><a href="#国际化" class="headerlink" title="国际化"></a>国际化</h3><h3 id="多线程"><a href="#多线程" class="headerlink" title="多线程"></a>多线程</h3><h3 id="Socket编程"><a href="#Socket编程" class="headerlink" title="Socket编程"></a>Socket编程</h3><h3 id="JVM"><a href="#JVM" class="headerlink" title="JVM"></a>JVM</h3><h2 id="框架"><a href="#框架" class="headerlink" title="框架"></a>框架</h2><h3 id="Spring"><a href="#Spring" class="headerlink" title="Spring"></a>Spring</h3><h4 id="SpringFramework"><a href="#SpringFramework" class="headerlink" title="SpringFramework"></a>SpringFramework</h4><h5 id="SpringIOC"><a href="#SpringIOC" class="headerlink" title="SpringIOC"></a>SpringIOC</h5><h5 id="SpringAOP"><a href="#SpringAOP" class="headerlink" title="SpringAOP"></a>SpringAOP</h5><h4 id="SpringMVC"><a href="#SpringMVC" class="headerlink" title="SpringMVC"></a>SpringMVC</h4><h4 id="SpringData"><a href="#SpringData" class="headerlink" title="SpringData"></a>SpringData</h4><h5 id="Spring-Data-JDBC"><a href="#Spring-Data-JDBC" class="headerlink" title="Spring Data JDBC"></a>Spring Data JDBC</h5><h5 id="Spring-Data-JPA"><a href="#Spring-Data-JPA" class="headerlink" title="Spring Data  JPA"></a>Spring Data  JPA</h5><h5 id="Spring-Data-MongoDB"><a href="#Spring-Data-MongoDB" class="headerlink" title="Spring Data MongoDB"></a>Spring Data MongoDB</h5><h5 id="Spring-Data-Redis"><a href="#Spring-Data-Redis" class="headerlink" title="Spring Data  Redis"></a>Spring Data  Redis</h5><h5 id="Spring-Data-Apache-Solr"><a href="#Spring-Data-Apache-Solr" class="headerlink" title="Spring Data  Apache Solr"></a>Spring Data  Apache Solr</h5><h5 id="Spring-Data-Neo4j"><a href="#Spring-Data-Neo4j" class="headerlink" title="Spring Data Neo4j"></a>Spring Data Neo4j</h5><h5 id="Spring-Data-for-Apache-Hadoop"><a href="#Spring-Data-for-Apache-Hadoop" class="headerlink" title="Spring Data for Apache Hadoop"></a>Spring Data for Apache Hadoop</h5><h5 id="Spring-Data-LDAP"><a href="#Spring-Data-LDAP" class="headerlink" title="Spring Data LDAP"></a>Spring Data LDAP</h5><h4 id="Springboot"><a href="#Springboot" class="headerlink" title="Springboot"></a>Springboot</h4><h4 id="SpringCloud微服务框架"><a href="#SpringCloud微服务框架" class="headerlink" title="SpringCloud微服务框架"></a>SpringCloud微服务框架</h4><h5 id="注册中心"><a href="#注册中心" class="headerlink" title="注册中心"></a>注册中心</h5><h6 id="Euraka"><a href="#Euraka" class="headerlink" title="Euraka"></a>Euraka</h6><h6 id="Consul"><a href="#Consul" class="headerlink" title="Consul"></a>Consul</h6><h6 id="zookeeper"><a href="#zookeeper" class="headerlink" title="zookeeper"></a>zookeeper</h6><h6 id="Redis"><a href="#Redis" class="headerlink" title="Redis"></a>Redis</h6><h6 id="Nacos"><a href="#Nacos" class="headerlink" title="Nacos"></a>Nacos</h6><h6 id="Multicast"><a href="#Multicast" class="headerlink" title="Multicast"></a>Multicast</h6><h6 id="Simple"><a href="#Simple" class="headerlink" title="Simple"></a>Simple</h6><h5 id="配置中心"><a href="#配置中心" class="headerlink" title="配置中心"></a>配置中心</h5><h6 id="Spring-Cloud-Config"><a href="#Spring-Cloud-Config" class="headerlink" title="Spring Cloud Config"></a>Spring Cloud Config</h6><h6 id="Nacos-1"><a href="#Nacos-1" class="headerlink" title="Nacos"></a>Nacos</h6><h6 id="Apollo"><a href="#Apollo" class="headerlink" title="Apollo"></a>Apollo</h6><h6 id="Disconf"><a href="#Disconf" class="headerlink" title="Disconf"></a>Disconf</h6><h5 id="RPC调用"><a href="#RPC调用" class="headerlink" title="RPC调用"></a>RPC调用</h5><h6 id="OpenFeign"><a href="#OpenFeign" class="headerlink" title="OpenFeign"></a>OpenFeign</h6><h6 id="Dubbo"><a href="#Dubbo" class="headerlink" title="Dubbo"></a>Dubbo</h6><h6 id="Retrofit"><a href="#Retrofit" class="headerlink" title="Retrofit"></a>Retrofit</h6><h6 id="Motan-WeiBo"><a href="#Motan-WeiBo" class="headerlink" title="Motan (WeiBo)"></a>Motan (WeiBo)</h6><h6 id="Tars-Tencent"><a href="#Tars-Tencent" class="headerlink" title="Tars (Tencent)"></a>Tars (Tencent)</h6><h6 id="gRPC"><a href="#gRPC" class="headerlink" title="gRPC"></a>gRPC</h6><h6 id="Thrift"><a href="#Thrift" class="headerlink" title="Thrift"></a>Thrift</h6><h6 id="Hessian"><a href="#Hessian" class="headerlink" title="Hessian"></a>Hessian</h6><h5 id="负载均衡"><a href="#负载均衡" class="headerlink" title="负载均衡"></a>负载均衡</h5><h6 id="Ribbon"><a href="#Ribbon" class="headerlink" title="Ribbon"></a>Ribbon</h6><h6 id="Spring-Cloud-Loadbalancer"><a href="#Spring-Cloud-Loadbalancer" class="headerlink" title="Spring Cloud Loadbalancer"></a>Spring Cloud Loadbalancer</h6><h5 id="熔断器"><a href="#熔断器" class="headerlink" title="熔断器"></a>熔断器</h5><h6 id="Spring-Cloud-Circuit-Breaker"><a href="#Spring-Cloud-Circuit-Breaker" class="headerlink" title="Spring Cloud Circuit Breaker"></a>Spring Cloud Circuit Breaker</h6><h6 id="Netflix-Hystrix"><a href="#Netflix-Hystrix" class="headerlink" title="Netflix Hystrix"></a>Netflix Hystrix</h6><h6 id="Alibaba-Sentinel"><a href="#Alibaba-Sentinel" class="headerlink" title="Alibaba Sentinel"></a>Alibaba Sentinel</h6><h5 id="网关"><a href="#网关" class="headerlink" title="网关"></a>网关</h5><h6 id="Spring-Cloud-GateWay"><a href="#Spring-Cloud-GateWay" class="headerlink" title="Spring Cloud GateWay"></a>Spring Cloud GateWay</h6><h6 id="Netflix-zuul"><a href="#Netflix-zuul" class="headerlink" title="Netflix zuul"></a>Netflix zuul</h6><h5 id="日志追踪"><a href="#日志追踪" class="headerlink" title="日志追踪"></a>日志追踪</h5><h6 id="Spring-Cloud-Sleuth-Logback-MDC-ELK"><a href="#Spring-Cloud-Sleuth-Logback-MDC-ELK" class="headerlink" title="Spring Cloud Sleuth + Logback MDC + ELK"></a>Spring Cloud Sleuth + Logback MDC + ELK</h6><h6 id="Tlog"><a href="#Tlog" class="headerlink" title="Tlog"></a>Tlog</h6><h6 id="Zipkin"><a href="#Zipkin" class="headerlink" title="Zipkin"></a>Zipkin</h6><h6 id="Skywalking"><a href="#Skywalking" class="headerlink" title="Skywalking"></a>Skywalking</h6><h6 id="Pinpoint"><a href="#Pinpoint" class="headerlink" title="Pinpoint"></a>Pinpoint</h6><h5 id="安全"><a href="#安全" class="headerlink" title="安全"></a>安全</h5><h4 id="Spring-AMQP"><a href="#Spring-AMQP" class="headerlink" title="Spring AMQP"></a>Spring AMQP</h4><h4 id="Spring-for-Apache-Kafka"><a href="#Spring-for-Apache-Kafka" class="headerlink" title="Spring for Apache Kafka"></a>Spring for Apache Kafka</h4><h4 id="Spring-Session"><a href="#Spring-Session" class="headerlink" title="Spring Session"></a>Spring Session</h4><h4 id="Spring-HATEOAS"><a href="#Spring-HATEOAS" class="headerlink" title="Spring HATEOAS"></a>Spring HATEOAS</h4><h4 id="Spring-LDAP"><a href="#Spring-LDAP" class="headerlink" title="Spring LDAP"></a>Spring LDAP</h4><h4 id="Spring-Integration"><a href="#Spring-Integration" class="headerlink" title="Spring Integration"></a>Spring Integration</h4><h4 id="Spring-Shell"><a href="#Spring-Shell" class="headerlink" title="Spring Shell"></a>Spring Shell</h4><h4 id="Spring-Vault"><a href="#Spring-Vault" class="headerlink" title="Spring Vault"></a>Spring Vault</h4><h4 id="Spring-Batch"><a href="#Spring-Batch" class="headerlink" title="Spring Batch"></a>Spring Batch</h4><h4 id="Spring-Flo"><a href="#Spring-Flo" class="headerlink" title="Spring Flo"></a>Spring Flo</h4><h4 id="Spring-Web-Services"><a href="#Spring-Web-Services" class="headerlink" title="Spring Web Services"></a>Spring Web Services</h4><h4 id="Spring-Web-Flow"><a href="#Spring-Web-Flow" class="headerlink" title="Spring Web Flow"></a>Spring Web Flow</h4><h4 id="Spring-Statemachine"><a href="#Spring-Statemachine" class="headerlink" title="Spring Statemachine"></a>Spring Statemachine</h4><h4 id="Spring-REST-Docs"><a href="#Spring-REST-Docs" class="headerlink" title="Spring REST Docs"></a>Spring REST Docs</h4><h3 id="Structs"><a href="#Structs" class="headerlink" title="Structs"></a>Structs</h3><h3 id="Mybatis"><a href="#Mybatis" class="headerlink" title="Mybatis"></a>Mybatis</h3><h2 id="日志"><a href="#日志" class="headerlink" title="日志"></a>日志</h2><h3 id="实现框架"><a href="#实现框架" class="headerlink" title="实现框架"></a>实现框架</h3><h4 id="log4j"><a href="#log4j" class="headerlink" title="log4j"></a>log4j</h4><h4 id="log4j2"><a href="#log4j2" class="headerlink" title="log4j2"></a>log4j2</h4><h4 id="logback"><a href="#logback" class="headerlink" title="logback"></a>logback</h4><h4 id="JUL"><a href="#JUL" class="headerlink" title="JUL"></a>JUL</h4><h4 id="Commons-loging"><a href="#Commons-loging" class="headerlink" title="Commons-loging"></a>Commons-loging</h4><h3 id="门面日志"><a href="#门面日志" class="headerlink" title="门面日志"></a>门面日志</h3><h4 id="slf4j"><a href="#slf4j" class="headerlink" title="slf4j"></a>slf4j</h4><h4 id="JCL"><a href="#JCL" class="headerlink" title="JCL"></a>JCL</h4><h4 id="Spring-JCL"><a href="#Spring-JCL" class="headerlink" title="Spring-JCL"></a>Spring-JCL</h4><h4 id="Jboss-logging"><a href="#Jboss-logging" class="headerlink" title="Jboss-logging"></a>Jboss-logging</h4><h1 id="Go体系"><a href="#Go体系" class="headerlink" title="Go体系"></a>Go体系</h1><h1 id="Python体系"><a href="#Python体系" class="headerlink" title="Python体系"></a>Python体系</h1><h1 id="数据库-1"><a href="#数据库-1" class="headerlink" title="数据库"></a>数据库</h1><h2 id="关系型数据库"><a href="#关系型数据库" class="headerlink" title="关系型数据库"></a>关系型数据库</h2><h3 id="Mysql"><a href="#Mysql" class="headerlink" title="Mysql"></a>Mysql</h3><h3 id="Oracle"><a href="#Oracle" class="headerlink" title="Oracle"></a>Oracle</h3><h3 id="PostgreSQL"><a href="#PostgreSQL" class="headerlink" title="PostgreSQL"></a>PostgreSQL</h3><h3 id="DB2"><a href="#DB2" class="headerlink" title="DB2"></a>DB2</h3><h3 id="Microsoft-SQL-Server"><a href="#Microsoft-SQL-Server" class="headerlink" title="Microsoft SQL Server"></a>Microsoft SQL Server</h3><h3 id="Microsoft-Access"><a href="#Microsoft-Access" class="headerlink" title="Microsoft Access"></a>Microsoft Access</h3><h3 id="Sybase"><a href="#Sybase" class="headerlink" title="Sybase"></a>Sybase</h3><h3 id="infomix"><a href="#infomix" class="headerlink" title="infomix"></a>infomix</h3><h3 id="sqlite"><a href="#sqlite" class="headerlink" title="sqlite"></a>sqlite</h3><h2 id="非关系型数据库"><a href="#非关系型数据库" class="headerlink" title="非关系型数据库"></a>非关系型数据库</h2><h3 id="Mongodb"><a href="#Mongodb" class="headerlink" title="Mongodb"></a>Mongodb</h3><h3 id="hbase"><a href="#hbase" class="headerlink" title="hbase"></a>hbase</h3><h3 id="neo4j"><a href="#neo4j" class="headerlink" title="neo4j"></a>neo4j</h3><h1 id="中间件"><a href="#中间件" class="headerlink" title="中间件"></a>中间件</h1><h2 id="服务型"><a href="#服务型" class="headerlink" title="服务型"></a>服务型</h2><h3 id="tomcat"><a href="#tomcat" class="headerlink" title="tomcat"></a>tomcat</h3><h3 id="jetty"><a href="#jetty" class="headerlink" title="jetty"></a>jetty</h3><h3 id="jboss"><a href="#jboss" class="headerlink" title="jboss"></a>jboss</h3><h3 id="wildfly"><a href="#wildfly" class="headerlink" title="wildfly"></a>wildfly</h3><h3 id="WebSphere"><a href="#WebSphere" class="headerlink" title="WebSphere"></a>WebSphere</h3><h3 id="WebLogic"><a href="#WebLogic" class="headerlink" title="WebLogic"></a>WebLogic</h3><h3 id="nginx"><a href="#nginx" class="headerlink" title="nginx"></a>nginx</h3><h2 id="数据型"><a href="#数据型" class="headerlink" title="数据型"></a>数据型</h2><h3 id="Redis-1"><a href="#Redis-1" class="headerlink" title="Redis"></a>Redis</h3><h3 id="memcache"><a href="#memcache" class="headerlink" title="memcache"></a>memcache</h3><h2 id="计算型"><a href="#计算型" class="headerlink" title="计算型"></a>计算型</h2><h3 id="hadoop-mapreduce"><a href="#hadoop-mapreduce" class="headerlink" title="hadoop-mapreduce"></a>hadoop-mapreduce</h3><h2 id="存储型"><a href="#存储型" class="headerlink" title="存储型"></a>存储型</h2><h3 id="FastDFS"><a href="#FastDFS" class="headerlink" title="FastDFS"></a>FastDFS</h3><h1 id="算法"><a href="#算法" class="headerlink" title="算法"></a>算法</h1><h2 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h2><h1 id="网络协议"><a href="#网络协议" class="headerlink" title="网络协议"></a>网络协议</h1><h2 id="Socket"><a href="#Socket" class="headerlink" title="Socket"></a>Socket</h2><h2 id="Http"><a href="#Http" class="headerlink" title="Http"></a>Http</h2><h2 id="Https"><a href="#Https" class="headerlink" title="Https"></a>Https</h2><h2 id="gRpc"><a href="#gRpc" class="headerlink" title="gRpc"></a>gRpc</h2><h2 id="Triple"><a href="#Triple" class="headerlink" title="Triple"></a>Triple</h2>]]></content>
      <categories>
        <category>技术杂谈</category>
      </categories>
  </entry>
</search>
